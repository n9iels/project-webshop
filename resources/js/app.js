var Router=function(){function e(e,r){if(0!=t(e)){var i=n(e);switch(i[0]){case"":case"index.html":case"products":new ProductsController(new ProductsViewHelper,new ProductsModel).main();break;case"product":new ProductController(new ProductViewHelper,new ProductModel(i[1])).main();break;case"register":new RegisterController(new RegisterViewHelper,new RegisterModel).main();break;case"login":new LoginController(new LoginViewHelper,new LoginModel).main();break;case"logout":new LogoutController(new LogoutViewHelper,new LogoutModel).main();break;default:new ErrorController(new ErrorViewHelper).main()}0!=r&&(""==e&&(e="index.html"),o({},"A-Z Games",e))}}function t(e){return e.indexOf("http")==-1&&e.indexOf("https")==-1&&e.indexOf("www")==-1||(window.location=e,!1)}function n(e){return 0==e.indexOf("/")&&(e=e.substring(1)),null!=this.baseUrl&&e.indexOf(this.baseUrl)!=-1&&(e=e.substring(e.indexOf(this.baseUrl)+this.baseUrl.length)),e.split(/\/(.+)?/)}function o(e,t,n){window.history.pushState(e,t,n)}return baseUrl="project-webshop/",{route:e}},LoginModel=function(){function e(e,t,n){$.ajax({url:"http:///84.84.245.29:243/user/login",type:"post",dataType:"json",data:JSON.stringify({email:e,password:t}),success:function(e){document.cookie="access_token="+e.access_token,document.cookie="user_id="+e.user_id,n(e)},error:function(e,t,n){$("#error_message").show()}})}return{login:e}},LogoutModel=function(){function e(e){function t(e){for(var t=document.cookie.split(";"),n=0;n<t.length;n++){var o=t[n].split("=");if(o[0].trim()==e)return o[1]}}$.ajax({url:"http://84.84.245.29:243/user/logout",type:"post",dataType:"json",data:JSON.stringify({user_id:t("user_id")}),success:function(t){document.cookie="access_token=",document.cookie="user_id=",e(t)},error:function(e,t,n){$("#error_message").show()}})}return{logout:e}},PageModel=function(){function e(e){$.ajax({url:"http://84.84.245.29:243/user",type:"get",dataType:"json",headers:{Authorization:"Bearer "+t("access_token")},success:function(t){e(t)},error:function(e,t,n){$("#component").load("error.html")}})}function t(e){for(var t=document.cookie.split(";"),n=0;n<t.length;n++){var o=t[n].split("=");if(o[0]==e)return o[1]}}return{getPage:e}},ProductsModel=function(){function e(e,t){$.ajax({url:"http://84.84.245.29:243/products?"+e,type:"get",dataType:"json",success:function(e){t(e)},error:function(e,t,n){$("#component").load("views/error/error.html")}})}return{getPage:e}},RegisterModel=function(){function e(e,t){console.log(e),$.ajax({url:"http://84.84.245.29:243/user/register",type:"post",dataType:"json",data:JSON.stringify({e_mail:e.e_mailadres,password:e.wachtwoord,first_name:e.voornaam,surname:e.achternaam,gender:e.gender,date_of_birth:e.birth_date,phone_number:e.mobiel_nummer,secret_question:e.security_question,secret_question_answer:e.security_answer}),success:function(e){t(e)},error:function(e,t,n){$("#regi_api_error_message").show()}})}return{register:e}},ProductModel=function(e){function t(t){$.ajax({url:"http://84.84.245.29:243/products/"+e,type:"get",dataType:"json",success:function(e){t(e[0]),console.log(e)},error:function(e,t,n){console.log("something wrong with API, BITCH")}})}return{GetProductInfo:t}},ErrorController=function(e){function t(){n.setView()}var n=e;return{main:t}},LoginController=function(e,t){function n(e){e.preventDefault();var t={};$.each($(this).serializeArray(),function(e,n){t[n.name]=n.value}),r.login(t.email,t.password,function(e){$("#inloggen_text").hide(),$("#uitloggen_text").show(),new PageController(new PageViewHelper,new PageModel).main()})}function o(){i.setView(),i.setActionListener(n)}var r=t,i=e;return{main:o}},LogoutController=function(e,t){function n(e){r.logout(function(e){$("#inloggen_text").show(),$("#uitloggen_text").hide(),i.setView()})}function o(){i.setActionListener(n)}var r=t,i=e;return{main:o}},PageController=function(e,t){function n(e){r.getPage(function(e){i.setView(e)})}function o(){i.setActionListener(n)}var r=t,i=e;return{main:o}},ProductsController=function(e,t){function n(){i.getPage("",function(e){s.setView(e)})}function o(e){e.preventDefault();var t=$(this).serialize();i.getPage(t,function(e){s.loadProducts(e)})}function r(){s.setActionListener(n),s.setFilterListener(o)}var i=t,s=e;return{main:r}},RegisterController=function(e,t){function n(){console.log("in actionPerformed"),event.preventDefault(),$("#regi_api_error_message").hide(),$("#ww2_error_message").hide();var e={};$.each($(this).serializeArray(),function(t,n){e[n.name]=n.value}),e.birth_date=e.jaar+"-"+e.maand+"-"+e.dag;var t=!1,n=["voornaam","achternaam","postcode","huisnummer","e_mailadres","wachtwoord","wachtwoord2","security_answer"];$.each(n,function(e,t){$("#"+t).removeClass("invalid")}),$.each(n,function(n,o){""==e[o]&&($("#"+o).addClass("invalid"),t=!0)}),t&&(window.scrollTo(0,0),$("#register_error_message").show());var o=!1;return e.wachtwoord!=e.wachtwoord2&&(o=!0,$("#ww2_error_message").show(),$("#wachtwoord").addClass("invalid"),$("#wachtwoord2").addClass("invalid")),!t&&!o&&void r.register(e,function(e){i.setView("/views/register/after_register.html")})}function o(){i.setView("/views/register/register.html"),i.setActionListener(n)}var r=t,i=e;return{main:o}},ProductController=function(e,t){function n(t){e.setView(t)}function o(){t.GetProductInfo(n)}return{main:o,showView:n}},ErrorViewHelper=function(){function e(){$("#component").load("/views/error/error.html")}function t(e){$(document).ready(e)}return{setView:e,setActionListener:t}},LoginViewHelper=function(){function e(){$("#component").load("/views/login/login.html")}function t(e){$("#component").on("submit","#loginform",e)}return{setView:e,setActionListener:t}},LogoutViewHelper=function(){function e(){$("#component").load("/views/logout/logout.html")}function t(e){$(document).ready(e)}return{setView:e,setActionListener:t}},PageViewHelper=function(){function e(e){$("#component").load("/views/page/page.html",function(){"customer"==e[0].user_type&&$("#user-block").append("<h1>Je lees dit alleen als je een customer bent"),"admin"==e[0].user_type&&$("#user-block").append("<h1>Je lees dit alleen als je een administrator bent")})}function t(e){$(document).ready(e)}return{setView:e,setActionListener:t}},ProductsViewHelper=function(){function e(e){$("#component").html('<div class="col-12"><div class="col-3" id="filters"></div><div class="col-9" id="products"></div></div>'),$("#filters").load("/views/products/filters.html"),t(e)}function t(e){$("#products").load("views/products/products.html",function(){$.each(e,function(e,t){var r=$("<div>").append($("#product__list__item").clone());$(r).find(".product__title").html(t.title),$(r).find(".product__subtitle").append(t.genre+" | PEGI "+t.pegi_age+" | "+o(t.platform)),$(r).find(".product__description").html(n(t.description)),$(r).find(".product__price").append("€ "+t.price),$(r).find("#buttons__info").attr("href","product/"+t.ean_number),$(r).find(".product__image img").attr("src",t.image),$("#product__list").append(r)}),$("#product__list__item").first().remove()})}function n(e){var t=50,n=e.split(" ");if(n.length>t){var o="";for(i=0;i<t;i++)o+=n[i]+" ";return o+"..."}return e}function o(e){switch(e=e.toUpperCase()){case"PS4":return"<img src='https://maxcdn.icons8.com/Android_L/PNG/48/Logos/play_station_copyrighted-48.png' />";case"PC":return"<img src='https://maxcdn.icons8.com/Color/PNG/48/Operating_Systems/windows_logo_copyrighted-48.png' />";case"XBOX":return"<img src='https://maxcdn.icons8.com/Color/PNG/48/Logos/xbox-48.png' />";case"NINTENDO":return"<img src='https://maxcdn.icons8.com/Color/PNG/48/Gaming/nintendo-48.png' />";default:return e}}function r(e){$(document).ready(e)}function s(e){$("#component").on("change","input[type=checkbox]",function(e){$("#product_filter").submit()}),$("#component").on("submit","#product_filter",e)}return{setView:e,loadProducts:t,setActionListener:r,setFilterListener:s}},ProductViewHelper=function(){function e(e){t(e)}function t(e){$("#component").load("/views/single_product/single_product.html",function(){$(".singleproduct__image img").attr("src",e.image),$(".singleproduct__title").html(e.title),$(".singleproduct__price").html("€ "+e.price),$(".liproduct__ean").append(e.ean_number),$(".liproduct__platform").append(e.platform);var t=new Date(e.release_date),n=["januari","februari","maart","april","mei","juni","juli","augustus","september","oktober","november","december"];$(".liproduct__releasedate").append(t.getDay()+" "+n[t.getMonth()]+" "+t.getFullYear()),$(".liproduct__pegi").append(e.pegi_age),$(".liproduct__publisher").append(e.publisher),$(".liproduct__title").append(e.title),$(".liproduct__subtitle").append(e.subtitle),$(".liproduct__genre").append(e.genre),$(".liproduct__franchise").append(e.franchise),$(".singleproduct__descr").html(e.description)})}return{setView:e,loadProduct:t}},RegisterViewHelper=function(){function e(e){$("#component").load(e)}function t(e){$("#component").on("submit","#registerform",e)}return{setView:e,setActionListener:t}};
//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInJvdXRlci5qcyIsImxvZ2luX21vZGVsLmpzIiwibG9nb3V0X21vZGVsLmpzIiwicGFnZV9tb2RlbC5qcyIsInByb2R1Y3RzX21vZGVsLmpzIiwicmVnaXN0ZXJfbW9kZWwuanMiLCJzaW5nbGVfcHJvZHVjdF9tb2RlbC5qcyIsImVycm9yX2NvbnRyb2xsZXIuanMiLCJsb2dpbl9jb250cm9sbGVyLmpzIiwibG9nb3V0X2NvbnRyb2xsZXIuanMiLCJwYWdlX2NvbnRyb2xsZXIuanMiLCJwcm9kdWN0c19jb250cm9sbGVyLmpzIiwicmVnaXN0ZXJfY29udHJvbGxlci5qcyIsInNpbmdsZV9wcm9kdWN0X2NvbnRyb2xsZXIuanMiLCJlcnJvci9lcnJvcl92aWV3LmpzIiwibG9naW4vbG9naW5fdmlldy5qcyIsImxvZ291dC9sb2dvdXRfdmlldy5qcyIsInBhZ2UvcGFnZV92aWV3LmpzIiwicHJvZHVjdHMvcHJvZHVjdHNfdmlldy5qcyIsInNpbmdsZV9wcm9kdWN0L3NpbmdsZV9wcm9kdWN0X3ZpZXcuanMiLCJyZWdpc3Rlci9yZWdpc3Rlcl92aWV3LmpzIl0sIm5hbWVzIjpbIlJvdXRlciIsInJvdXRlIiwidXJsIiwiaGlzdG9yeSIsImlzSW50ZXJuYWwiLCJwYXJ0aWNsZXMiLCJnZXRQYXJ0aWNsZXMiLCJQcm9kdWN0c0NvbnRyb2xsZXIiLCJQcm9kdWN0c1ZpZXdIZWxwZXIiLCJQcm9kdWN0c01vZGVsIiwibWFpbiIsIlByb2R1Y3RDb250cm9sbGVyIiwiUHJvZHVjdFZpZXdIZWxwZXIiLCJQcm9kdWN0TW9kZWwiLCJSZWdpc3RlckNvbnRyb2xsZXIiLCJSZWdpc3RlclZpZXdIZWxwZXIiLCJSZWdpc3Rlck1vZGVsIiwiTG9naW5Db250cm9sbGVyIiwiTG9naW5WaWV3SGVscGVyIiwiTG9naW5Nb2RlbCIsIkxvZ291dENvbnRyb2xsZXIiLCJMb2dvdXRWaWV3SGVscGVyIiwiTG9nb3V0TW9kZWwiLCJFcnJvckNvbnRyb2xsZXIiLCJFcnJvclZpZXdIZWxwZXIiLCJ3cml0ZUhpc3RvcnkiLCJpbmRleE9mIiwid2luZG93IiwibG9jYXRpb24iLCJzdWJzdHJpbmciLCJ0aGlzIiwiYmFzZVVybCIsImxlbmd0aCIsInNwbGl0Iiwib2JqZWN0IiwidGl0bGUiLCJwdXNoU3RhdGUiLCJsb2dpbiIsImVtYWlsIiwicGFzc3dvcmQiLCJjYWxsYmFjayIsIiQiLCJhamF4IiwidHlwZSIsImRhdGFUeXBlIiwiZGF0YSIsIkpTT04iLCJzdHJpbmdpZnkiLCJzdWNjZXNzIiwiZG9jdW1lbnQiLCJjb29raWUiLCJhY2Nlc3NfdG9rZW4iLCJ1c2VyX2lkIiwiZXJyb3IiLCJ4aHIiLCJzdGF0dXMiLCJzaG93IiwibG9nb3V0IiwiZ2V0Q29va2llIiwibmFtZSIsImNvb2tpZXMiLCJpIiwidHJpbSIsIlBhZ2VNb2RlbCIsImdldFBhZ2UiLCJoZWFkZXJzIiwiQXV0aG9yaXphdGlvbiIsImxvYWQiLCJmaWx0ZXIiLCJyZWdpc3RlciIsImZvcm1EYXRhIiwiY29uc29sZSIsImxvZyIsImVfbWFpbCIsImVfbWFpbGFkcmVzIiwid2FjaHR3b29yZCIsImZpcnN0X25hbWUiLCJ2b29ybmFhbSIsInN1cm5hbWUiLCJhY2h0ZXJuYWFtIiwiZ2VuZGVyIiwiZGF0ZV9vZl9iaXJ0aCIsImJpcnRoX2RhdGUiLCJwaG9uZV9udW1iZXIiLCJtb2JpZWxfbnVtbWVyIiwic2VjcmV0X3F1ZXN0aW9uIiwic2VjdXJpdHlfcXVlc3Rpb24iLCJzZWNyZXRfcXVlc3Rpb25fYW5zd2VyIiwic2VjdXJpdHlfYW5zd2VyIiwiZWFuIiwiR2V0UHJvZHVjdEluZm8iLCJ2aWV3SGVscGVyIiwiVmlld0hlbHBlciIsInNldFZpZXciLCJtb2RlbCIsImFjdGlvblBlcmZvcm1lZCIsImV2ZW50IiwicHJldmVudERlZmF1bHQiLCJlYWNoIiwic2VyaWFsaXplQXJyYXkiLCJmaWVsZCIsInZhbHVlIiwiTW9kZWwiLCJoaWRlIiwiUGFnZUNvbnRyb2xsZXIiLCJQYWdlVmlld0hlbHBlciIsInNldEFjdGlvbkxpc3RlbmVyIiwiVmlldyIsImZpbHRlclByb2R1Y3RzIiwiZmlsdGVycyIsInNlcmlhbGl6ZSIsImxvYWRQcm9kdWN0cyIsInNldEZpbHRlckxpc3RlbmVyIiwiamFhciIsIm1hYW5kIiwiZGFnIiwibWFuZGF0b3J5RmllbGRNaXNzZXMiLCJtYW5kYXRvcnlGaWVsZHMiLCJtYW5GaWVsZCIsInJlbW92ZUNsYXNzIiwiYWRkQ2xhc3MiLCJzY3JvbGxUbyIsInBhc3N3b3Jkc05vdElkZW50aWNhbCIsIndhY2h0d29vcmQyIiwic2hvd1ZpZXciLCJldmVudEhhbmRsZXIiLCJyZWFkeSIsImFjdGlvbiIsIm9uIiwidmlld0RhdGEiLCJ1c2VyX3R5cGUiLCJhcHBlbmQiLCJodG1sIiwia2V5IiwicHJvZHVjdCIsImNsb25lIiwiZmluZCIsImdlbnJlIiwicGVnaV9hZ2UiLCJQbGF0Zm9ybUxvZ28iLCJwbGF0Zm9ybSIsIkN1dFN0cmluZyIsImRlc2NyaXB0aW9uIiwicHJpY2UiLCJhdHRyIiwiZWFuX251bWJlciIsImltYWdlIiwiZmlyc3QiLCJyZW1vdmUiLCJ0ZXh0IiwiU2hvd0Ftb3VudCIsIldvcmRzQXJyYXkiLCJTaG9ydFN0cmluZyIsInBsYXRmb3JtbmFhbSIsInRvVXBwZXJDYXNlIiwic3VibWl0IiwibG9hZFByb2R1Y3QiLCJkIiwiRGF0ZSIsInJlbGVhc2VfZGF0ZSIsIm1vbnRocyIsImdldERheSIsImdldE1vbnRoIiwiZ2V0RnVsbFllYXIiLCJwdWJsaXNoZXIiLCJzdWJ0aXRsZSIsImZyYW5jaGlzZSIsInZpZXdUb1Nob3ciXSwibWFwcGluZ3MiOiJBQUFBLEdBQUFBLFFBQUEsV0FJQSxRQUFBQyxHQUFBQyxFQUFBQyxHQUVBLEdBQUEsR0FBQUMsRUFBQUYsR0FBQSxDQUtBLEdBQUFHLEdBQUFDLEVBQUFKLEVBRUEsUUFBQUcsRUFBQSxJQUVBLElBQUEsR0FDQSxJQUFBLGFBQ0EsSUFBQSxXQUNBLEdBQUFFLG9CQUFBLEdBQUFDLG9CQUFBLEdBQUFDLGdCQUFBQyxNQUNBLE1BQ0EsS0FBQSxVQUNB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NENBLE9BQ0FqRCxRQUFBQSxFQUNBK0QsWUFBQUEsSUN4RkE3SSxtQkFBQSxXQUdBLFFBQUE4RSxHQUFBMEUsR0FFQTlILEVBQUEsY0FBQTBCLEtBQUFvRyxHQUlBLFFBQUE3RCxHQUFBcUIsR0FNQXRGLEVBQUEsY0FBQXVGLEdBQUEsU0FBQSxnQkFBQUQsR0FJQSxPQUNBbEMsUUFBQUEsRUFDQWEsa0JBQUFBIiwiZmlsZSI6ImFwcC5qcyIsInNvdXJjZXNDb250ZW50IjpbInZhciBSb3V0ZXIgPSBmdW5jdGlvbiAoKVxue1xuICAgIGJhc2VVcmwgPSBcInByb2plY3Qtd2Vic2hvcC9cIjtcblxuICAgIGZ1bmN0aW9uIHJvdXRlKHVybCwgaGlzdG9yeSlcbiAgICB7XG4gICAgICAgIGlmIChpc0ludGVybmFsKHVybCkgPT0gZmFsc2UpXG4gICAgICAgIHtcbiAgICAgICAgICAgIHJldHVybjtcbiAgICAgICAgfVxuXG4gICAgICAgIHZhciBwYXJ0aWNsZXMgPSBnZXRQYXJ0aWNsZXModXJsKTtcblxuICAgICAgICBzd2l0Y2gocGFydGljbGVzWzBdKVxuICAgICAgICB7XG4gICAgICAgICAgICBjYXNlIFwiXCI6XG4gICAgICAgICAgICBjYXNlIFwiaW5kZXguaHRtbFwiOlxuICAgICAgICAgICAgY2FzZSBcInByb2R1Y3RzXCI6XG4gICAgICAgICAgICAgICAgbmV3IFByb2R1Y3RzQ29udHJvbGxlcihuZXcgUHJvZHVjdHNWaWV3SGVscGVyKCksIG5ldyBQcm9kdWN0c01vZGVsKCkpLm1haW4oKTtcbiAgICAgICAgICAgICAgICBicmVhaztcbiAgICAgICAgICAgIGNhc2UgXCJwcm9kdWN0XCI6XG4gICAgICAgICAgICAgICAgbmV3IFByb2R1Y3RDb250cm9sbGVyKG5ldyBQcm9kdWN0Vmlld0hlbHBlcigpLCBuZXcgUHJvZHVjdE1vZGVsKHBhcnRpY2xlc1sxXSkpLm1haW4oKTtcbiAgICAgICAgICAgICAgICBicmVhaztcbiAgICAgICAgICAgIGNhc2UgXCJyZWdpc3RlclwiOlxuICAgICAgICAgICAgICAgIG5ldyBSZWdpc3RlckNvbnRyb2xsZXIobmV3IFJlZ2lzdGVyVmlld0hlbHBlcigpLCBuZXcgUmVnaXN0ZXJNb2RlbCgpKS5tYWluKCk7XG4gICAgICAgICAgICAgICAgYnJlYWs7XG4gICAgICAgICAgICBjYXNlIFwibG9naW5cIjpcbiAgICAgICAgICAgICAgICBuZXcgTG9naW5Db250cm9sbGVyKG5ldyBMb2dpblZpZXdIZWxwZXIoKSwgbmV3IExvZ2luTW9kZWwoKSkubWFpbigpO1xuICAgICAgICAgICAgICAgIGJyZWFrO1xuICAgICAgICAgICAgY2FzZSBcImxvZ291dFwiOlxuICAgICAgICAgICAgICAgIG5ldyBMb2dvdXRDb250cm9sbGVyKG5ldyBMb2dvdXRWaWV3SGVscGVyKCksIG5ldyBMb2dvdXRNb2RlbCgpKS5tYWluKCk7XG4gICAgICAgICAgICAgICAgYnJlYWs7XG4gICAgICAgICAgICBkZWZhdWx0OlxuICAgICAgICAgICAgICAgIG5ldyBFcnJvckNvbnRyb2xsZXIobmV3IEVycm9yVmlld0hlbHBlcigpKS5tYWluKCk7XG4gICAgICAgICAgICAgICAgYnJlYWs7XG4gICAgICAgIH1cblxuICAgICAgICBpZiAoaGlzdG9yeSAhPSBmYWxzZSlcbiAgICAgICAge1xuICAgICAgICAgICAgaWYgKHVybCA9PSBcIlwiKVxuICAgICAgICAgICAge1xuICAgICAgICAgICAgICAgIHVybCA9IFwiaW5kZXguaHRtbFwiO1xuICAgICAgICAgICAgfVxuXG4gICAgICAgICAgICB3cml0ZUhpc3Rvcnkoe30sIFwiQS1aIEdhbWVzXCIsIHVybClcbiAgICAgICAgfVxuICAgIH1cblxuICAgIGZ1bmN0aW9uIGlzSW50ZXJuYWwodXJsKVxuICAgIHtcbiAgICAgICAgaWYgKHVybC5pbmRleE9mKFwiaHR0cFwiKSAhPSAtMSB8fCB1cmwuaW5kZXhPZihcImh0dHBzXCIpICE9IC0xIHx8IHVybC5pbmRleE9mKFwid3d3XCIpICE9IC0xKVxuICAgICAgICB7XG4gICAgICAgICAgICB3aW5kb3cubG9jYXRpb24gPSB1cmw7XG4gICAgICAgICAgICBcbiAgICAgICAgICAgIHJldHVybiBmYWxzZTtcbiAgICAgICAgfVxuXG4gICAgICAgIHJldHVybiB0cnVlO1xuICAgIH1cblxuICAgIGZ1bmN0aW9uIGdldFBhcnRpY2xlcyh1cmwpXG4gICAge1xuICAgICAgICAvLyBSZW1vdmUgdGhlIGZpcnN0IC9cbiAgICAgICAgaWYgKHVybC5pbmRleE9mKFwiL1wiKSA9PSAwKVxuICAgICAgICB7XG4gICAgICAgICAgICB1cmwgPSB1cmwuc3Vic3RyaW5nKDEpO1xuICAgICAgICB9XG5cbiAgICAgICAgLy8gSWYgdGhlcmUgaXMgYSBiYXNlIHVybCBzZXQsIHJlbW92ZSB0aGUgYmFzZSB1cmxcbiAgICAgICAgaWYgKHRoaXMuYmFzZVVybCAhPSBudWxsICYmIHVybC5pbmRleE9mKHRoaXMuYmFzZVVybCkgIT0gLTEpXG4gICAgICAgIHtcbiAgICAgICAgICAgIHVybCA9IHVybC5zdWJzdHJpbmcodXJsLmluZGV4T2YodGhpcy5iYXNlVXJsKSArIHRoaXMuYmFzZVVybC5sZW5ndGgpO1xuICAgICAgICB9XG5cbiAgICAgICAgcmV0dXJuIHVybC5zcGxpdCgvXFwvKC4rKT8vKVxuICAgIH1cblxuICAgIGZ1bmN0aW9uIHdyaXRlSGlzdG9yeShvYmplY3QsIHRpdGxlLCB1cmwpXG4gICAge1xuICAgICAgICB3aW5kb3cuaGlzdG9yeS5wdXNoU3RhdGUob2JqZWN0LCB0aXRsZSwgdXJsKTtcbiAgICB9XG5cbiAgICByZXR1cm4ge1xuICAgICAgICByb3V0ZTogcm91dGVcbiAgICB9XG59IiwidmFyIExvZ2luTW9kZWwgPSBmdW5jdGlvbigpXG57XG4gICAgZnVuY3Rpb24gbG9naW4oZW1haWwsIHBhc3N3b3JkLCBjYWxsYmFjaylcbiAgICB7XG4gICAgICAgICQuYWpheCh7XG4gICAgICAgICAgICB1cmw6IFwiaHR0cDovLy84NC44NC4yNDUuMjk6MjQzL3VzZXIvbG9naW5cIixcbiAgICAgICAgICAgIHR5cGU6IFwicG9zdFwiLFxuICAgICAgICAgICAgZGF0YVR5cGU6ICdqc29uJyxcbiAgICAgICAgICAgIGRhdGE6IEpTT04uc3RyaW5naWZ5KHtcbiAgICAgICAgICAgICAgICBlbWFpbCA6IGVtYWlsLFxuICAgICAgICAgICAgICAgIHBhc3N3b3JkIDogcGFzc3dvcmRcbiAgICAgICAgICAgIH0pLFxuICAgICAgICAgICAgc3VjY2VzczogZnVuY3Rpb24gKGRhdGEpIHtcbiAgICAgICAgICAgICAgICAvLyBwdXQgdG9rZW4gaW4gY29va2llXG4gICAgICAgICAgICAgICAgZG9jdW1lbnQuY29va2llPSdhY2Nlc3NfdG9rZW49JyArIGRhdGEuYWNjZXNzX3Rva2VuO1xuICAgICAgICAgICAgICAgIGRvY3VtZW50LmNvb2tpZT0ndXNlcl9pZD0nICsgZGF0YS51c2VyX2lkO1xuXG4gICAgICAgICAgICAgICAgLy8gbGV0IGNvbnRyb2xsZXIgcmVzdW1lIHdpdGggc3R1ZmZcbiAgICAgICAgICAgICAgICBjYWxsYmFjayhkYXRhKTtcbiAgICAgICAgICAgIH0sXG4gICAgICAgICAgICBlcnJvcjogZnVuY3Rpb24gKHhociwgc3RhdHVzLCBlcnJvcikge1xuICAgICAgICAgICAgICAgIC8vIHNob3cgJ25vdCBnb29kIGVtYWlsIG9yIHBhc3N3b3JkIHRvIHVzZXInXG4gICAgICAgICAgICAgICAgJChcIiNlcnJvcl9tZXNzYWdlXCIpLnNob3coKTtcblxuICAgICAgICAgICAgICAgIC8vJChcIiNjb21wb25lbnRcIikuaHRtbChcImVycm9yIGZ1bmN0aW9uXCIpO1xuICAgICAgICAgICAgfVxuICAgICAgICB9KTtcbiAgICB9XG5cbiAgICAvLyBSZXR1cm4gdGhlIG1ldGhvZHMgdGhhdCBjYW4gYmUgdXNlZCBieSBvdGhlciBwcm9ncmFtcyAodGhlIGNvbnRyb2xsZXIgaW4gdGhpcyBjYXNlKVxuICAgIHJldHVybiB7XG4gICAgICAgIGxvZ2luOiBsb2dpblxuICAgIH1cbn07IiwidmFyIExvZ291dE1vZGVsID0gZnVuY3Rpb24oKVxue1xuICAgIGZ1bmN0aW9uIGxvZ291dChjYWxsYmFjaylcbiAgICB7XG4gICAgICAgICQuYWpheCh7XG4gICAgICAgICAgICB1cmw6IFwiaHR0cDovLzg0Ljg0LjI0NS4yOToyNDMvdXNlci9sb2dvdXRcIiwgLy8/IGh0dHA6Ly84NC44NC4yNDUuMjk6MjQzID0gQVBJLWxvY2F0aWU/XG4gICAgICAgICAgICB0eXBlOiBcInBvc3RcIixcbiAgICAgICAgICAgIGRhdGFUeXBlOiAnanNvbicsXG4gICAgICAgICAgICBkYXRhOiBKU09OLnN0cmluZ2lmeSh7XG4gICAgICAgICAgICAgICAgdXNlcl9pZDogZ2V0Q29va2llKFwidXNlcl9pZFwiKVxuICAgICAgICAgICAgfSksXG4gICAgICAgICAgICBzdWNjZXNzOiBmdW5jdGlvbiAoZGF0YSkge1xuICAgICAgICAgICAgICAgIC8vIGxldCBjb250cm9sbGVyIHJlc3VtZSB3aXRoIHN0dWZmXG4gICAgICAgICAgICAgICAgZG9jdW1lbnQuY29va2llPSdhY2Nlc3NfdG9rZW49JztcbiAgICAgICAgICAgICAgICBkb2N1bWVudC5jb29raWU9J3VzZXJfaWQ9JztcbiAgICAgICAgICAgICAgICBjYWxsYmFjayhkYXRhKTtcbiAgICAgICAgICAgIH0sXG4gICAgICAgICAgICBlcnJvcjogZnVuY3Rpb24gKHhociwgc3RhdHVzLCBlcnJvcikge1xuICAgICAgICAgICAgICAgIC8vIHNob3cgJ25vdCBnb29kIGVtYWlsIG9yIHBhc3N3b3JkIHRvIHVzZXInXG4gICAgICAgICAgICAgICAgJChcIiNlcnJvcl9tZXNzYWdlXCIpLnNob3coKTtcblxuICAgICAgICAgICAgICAgIC8vJChcIiNjb21wb25lbnRcIikuaHRtbChcImVycm9yIGZ1bmN0aW9uXCIpO1xuICAgICAgICAgICAgfVxuICAgICAgICB9KTtcblxuICAgICAgICBmdW5jdGlvbiBnZXRDb29raWUobmFtZSlcbiAgICAgICAge1xuICAgICAgICAgICAgdmFyIGNvb2tpZXMgPSBkb2N1bWVudC5jb29raWUuc3BsaXQoJzsnKTtcblxuICAgICAgICAgICAgZm9yICh2YXIgaSA9IDA7IGkgPCBjb29raWVzLmxlbmd0aDsgaSsrKVxuICAgICAgICAgICAge1xuICAgICAgICAgICAgICAgIHZhciBjb29raWUgPSBjb29raWVzW2ldLnNwbGl0KFwiPVwiKTtcblxuICAgICAgICAgICAgICAgIGlmIChjb29raWVbMF0udHJpbSgpID09IG5hbWUpXG4gICAgICAgICAgICAgICAge1xuICAgICAgICAgICAgICAgICAgICByZXR1cm4gY29va2llWzFdO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgIH1cblxuICAgIC8vIFJldHVybiB0aGUgbWV0aG9kcyB0aGF0IGNhbiBiZSB1c2VkIGJ5IG90aGVyIHByb2dyYW1zICh0aGUgY29udHJvbGxlciBpbiB0aGlzIGNhc2UpXG4gICAgcmV0dXJuIHtcbiAgICAgICAgbG9nb3V0OiBsb2dvdXRcbiAgICB9XG59OyIsInZhciBQYWdlTW9kZWwgPSBmdW5jdGlvbigpXG57XG4gICAgZnVuY3Rpb24gZ2V0UGFnZShjYWxsYmFjaylcbiAgICB7XG4gICAgICAgICQuYWpheCh7XG4gICAgICAgICAgICB1cmw6IFwiaHR0cDovLzg0Ljg0LjI0NS4yOToyNDMvdXNlclwiLFxuICAgICAgICAgICAgdHlwZTogXCJnZXRcIixcbiAgICAgICAgICAgIGRhdGFUeXBlOiAnanNvbicsXG4gICAgICAgICAgICBoZWFkZXJzOiB7XG4gICAgICAgICAgICAgICAgXCJBdXRob3JpemF0aW9uXCI6IFwiQmVhcmVyIFwiICsgZ2V0Q29va2llKFwiYWNjZXNzX3Rva2VuXCIpXG4gICAgICAgICAgICB9LFxuICAgICAgICAgICAgc3VjY2VzczogZnVuY3Rpb24gKGRhdGEpIHtcbiAgICAgICAgICAgICAgICBjYWxsYmFjayhkYXRhKTtcbiAgICAgICAgICAgIH0sXG4gICAgICAgICAgICBlcnJvcjogZnVuY3Rpb24gKHhociwgc3RhdHVzLCBlcnJvcikge1xuICAgICAgICAgICAgICAgICQoXCIjY29tcG9uZW50XCIpLmxvYWQoXCJlcnJvci5odG1sXCIpO1xuICAgICAgICAgICAgfVxuICAgICAgICB9KTtcbiAgICB9XG5cbiAgICBmdW5jdGlvbiBnZXRDb29raWUobmFtZSlcbiAgICB7XG4gICAgICAgIHZhciBjb29raWVzID0gZG9jdW1lbnQuY29va2llLnNwbGl0KCc7Jyk7XG5cbiAgICAgICAgZm9yICh2YXIgaSA9IDA7IGkgPCBjb29raWVzLmxlbmd0aDsgaSsrKVxuICAgICAgICB7XG4gICAgICAgICAgICB2YXIgY29va2llID0gY29va2llc1tpXS5zcGxpdChcIj1cIik7XG5cbiAgICAgICAgICAgIGlmIChjb29raWVbMF0gPT0gbmFtZSlcbiAgICAgICAgICAgIHtcbiAgICAgICAgICAgICAgICByZXR1cm4gY29va2llWzFdO1xuICAgICAgICAgICAgfVxuICAgICAgICB9XG4gICAgfVxuXG4gICAgLy8gUmV0dXJuIHRoZSBtZXRob2RzIHRoYXQgY2FuIGJlIHVzZWQgYnkgb3RoZXIgcHJvZ3JhbXMgKHRoZSBjb250cm9sbGVyIGluIHRoaXMgY2FzZSlcbiAgICByZXR1cm4ge1xuICAgICAgICBnZXRQYWdlOiBnZXRQYWdlXG4gICAgfVxufTsiLCJ2YXIgUHJvZHVjdHNNb2RlbCA9IGZ1bmN0aW9uKClcbntcbiAgICBmdW5jdGlvbiBnZXRQYWdlKGZpbHRlciwgY2FsbGJhY2spXG4gICAge1xuICAgICAgICAkLmFqYXgoe1xuICAgICAgICAgICAgdXJsOiBcImh0dHA6Ly84NC44NC4yNDUuMjk6MjQzL3Byb2R1Y3RzP1wiICsgZmlsdGVyLCAvLz8gaHR0cDovLzg0Ljg0LjI0NS4yOToyNDMgPSBBUEktbG9jYXRpZT9cbiAgICAgICAgICAgIHR5cGU6IFwiZ2V0XCIsXG4gICAgICAgICAgICBkYXRhVHlwZTogJ2pzb24nLFxuICAgICAgICAgICAgc3VjY2VzczogZnVuY3Rpb24gKGRhdGEpIHtcbiAgICAgICAgICAgICAgICBjYWxsYmFjayhkYXRhKTtcbiAgICAgICAgICAgIH0sXG4gICAgICAgICAgICBlcnJvcjogZnVuY3Rpb24gKHhociwgc3RhdHVzLCBlcnJvcikge1xuICAgICAgICAgICAgICAgICQoXCIjY29tcG9uZW50XCIpLmxvYWQoXCJ2aWV3cy9lcnJvci9lcnJvci5odG1sXCIpO1xuICAgICAgICAgICAgfVxuICAgICAgICB9KTtcbiAgICB9XG5cbiAgICAvLyBSZXR1cm4gdGhlIG1ldGhvZHMgdGhhdCBjYW4gYmUgdXNlZCBieSBvdGhlciBwcm9ncmFtcyAodGhlIGNvbnRyb2xsZXIgaW4gdGhpcyBjYXNlKVxuICAgIHJldHVybiB7XG4gICAgICAgIGdldFBhZ2U6IGdldFBhZ2VcbiAgICB9XG59OyIsInZhciBSZWdpc3Rlck1vZGVsID0gZnVuY3Rpb24oKVxue1xuICAgIGZ1bmN0aW9uIHJlZ2lzdGVyKGZvcm1EYXRhLCBjYWxsYmFjaylcbiAgICB7XG4gICAgICAgIGNvbnNvbGUubG9nKGZvcm1EYXRhKTtcbiAgICAgICAgJC5hamF4KHtcbiAgICAgICAgICAgIHVybDogXCJodHRwOi8vODQuODQuMjQ1LjI5OjI0My91c2VyL3JlZ2lzdGVyXCIsIC8vaHR0cDovL2xvY2FsaG9zdDo4MDgwL3VzZXIvcmVnaXN0ZXJcbiAgICAgICAgICAgIHR5cGU6IFwicG9zdFwiLFxuICAgICAgICAgICAgZGF0YVR5cGU6ICdqc29uJyxcbiAgICAgICAgICAgIGRhdGE6IEpTT04uc3RyaW5naWZ5KHtcbiAgICAgICAgICAgICAgICBlX21haWwgOiBmb3JtRGF0YS5lX21haWxhZHJlcyxcbiAgICAgICAgICAgICAgICBwYXNzd29yZCA6IGZvcm1EYXRhLndhY2h0d29vcmQsXG4gICAgICAgICAgICAgICAgZmlyc3RfbmFtZSA6IGZvcm1EYXRhLnZvb3JuYWFtLFxuICAgICAgICAgICAgICAgIHN1cm5hbWUgOiBmb3JtRGF0YS5hY2h0ZXJuYWFtLFxuICAgICAgICAgICAgICAgIGdlbmRlciA6IGZvcm1EYXRhLmdlbmRlcixcbiAgICAgICAgICAgICAgICBkYXRlX29mX2JpcnRoIDogZm9ybURhdGEuYmlydGhfZGF0ZSxcbiAgICAgICAgICAgICAgICBwaG9uZV9udW1iZXIgOiBmb3JtRGF0YS5tb2JpZWxfbnVtbWVyLFxuICAgICAgICAgICAgICAgIHNlY3JldF9xdWVzdGlvbiA6IGZvcm1EYXRhLnNlY3VyaXR5X3F1ZXN0aW9uLFxuICAgICAgICAgICAgICAgIHNlY3JldF9xdWVzdGlvbl9hbnN3ZXIgOiBmb3JtRGF0YS5zZWN1cml0eV9hbnN3ZXJcbiAgICAgICAgICAgIH0pLFxuICAgICAgICAgICAgc3VjY2VzczogZnVuY3Rpb24gKGRhdGEpIHtcbiAgICAgICAgICAgICAgICAvLyBsZXQgY29udHJvbGxlciByZXN1bWUgd2l0aCBzdHVmZlxuICAgICAgICAgICAgICAgIGNhbGxiYWNrKGRhdGEpO1xuICAgICAgICAgICAgfSxcbiAgICAgICAgICAgIGVycm9yOiBmdW5jdGlvbiAoeGhyLCBzdGF0dXMsIGVycm9yKSB7XG4gICAgICAgICAgICAgICAgLy8gc2hvdyAnZW1haWwgYWwgZ2Vib25kZW4gYWFuIGVlbiBhY2NvdW50PydcbiAgICAgICAgICAgICAgICAkKFwiI3JlZ2lfYXBpX2Vycm9yX21lc3NhZ2VcIikuc2hvdygpO1xuICAgICAgICAgICAgICAgIC8vJChcIiNjb21wb25lbnRcIikuaHRtbChcImVycm9yIGZ1bmN0aW9uXCIpO1xuICAgICAgICAgICAgfVxuICAgICAgICB9KTtcbiAgICB9XG5cbiAgICAvLyBSZXR1cm4gdGhlIG1ldGhvZHMgdGhhdCBjYW4gYmUgdXNlZCBieSBvdGhlciBwcm9ncmFtcyAodGhlIGNvbnRyb2xsZXIgaW4gdGhpcyBjYXNlKVxuICAgIHJldHVybiB7XG4gICAgICAgIHJlZ2lzdGVyOiByZWdpc3RlclxuICAgIH1cbn07IiwidmFyIFByb2R1Y3RNb2RlbCA9IGZ1bmN0aW9uKGVhbilcbntcbiAgICBmdW5jdGlvbiBHZXRQcm9kdWN0SW5mbyhjYWxsYmFjaylcbiAgICB7XG4gICAgICAgICQuYWpheCh7XG4gICAgICAgICAgICB1cmw6IFwiaHR0cDovLzg0Ljg0LjI0NS4yOToyNDMvcHJvZHVjdHMvXCIgKyBlYW4sIC8vaHR0cDovL2xvY2FsaG9zdDo4MDgwL3VzZXIvcmVnaXN0ZXJcbiAgICAgICAgICAgIHR5cGU6IFwiZ2V0XCIsXG4gICAgICAgICAgICBkYXRhVHlwZTogJ2pzb24nLFxuICAgICAgICAgICAgc3VjY2VzczogZnVuY3Rpb24gKGRhdGEpIHtcbiAgICAgICAgICAgICAgICAvLyBsZXQgY29udHJvbGxlciByZXN1bWUgd2l0aCBzdHVmZlxuICAgICAgICAgICAgICAgIGNhbGxiYWNrKGRhdGFbMF0pO1xuICAgICAgICAgICAgICAgIGNvbnNvbGUubG9nKGRhdGEpOyAvL3Rlc3RcbiAgICAgICAgICAgIH0sXG4gICAgICAgICAgICBlcnJvcjogZnVuY3Rpb24gKHhociwgc3RhdHVzLCBlcnJvcikge1xuICAgICAgICAgICAgICAgIGNvbnNvbGUubG9nKFwic29tZXRoaW5nIHdyb25nIHdpdGggQVBJLCBCSVRDSFwiKTtcblxuXG5cbiAgICAgICAgICAgICAgICAvLyQoXCIjcmVnaV9hcGlfZXJyb3JfbWVzc2FnZVwiKS5zaG93KCk7XG5cbiAgICAgICAgICAgICAgICAvLyQoXCIjY29tcG9uZW50XCIpLmh0bWwoXCJlcnJvciBmdW5jdGlvblwiKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfSk7XG4gICAgfVxuXG4gICAgLy8gUmV0dXJuIHRoZSBtZXRob2RzIHRoYXQgY2FuIGJlIHVzZWQgYnkgb3RoZXIgcHJvZ3JhbXMgKHRoZSBjb250cm9sbGVyIGluIHRoaXMgY2FzZSlcbiAgICByZXR1cm4ge1xuICAgICAgICBHZXRQcm9kdWN0SW5mbzogR2V0UHJvZHVjdEluZm9cbiAgICB9XG59OyIsInZhciBFcnJvckNvbnRyb2xsZXIgPSBmdW5jdGlvbih2aWV3SGVscGVyKVxue1xuICAgIHZhciBWaWV3SGVscGVyID0gdmlld0hlbHBlcjtcblxuICAgIC8vIE1haW4gZnVuY3Rpb24sIGFsc28gdGhlIHN0YXJ0IHN0YXJ0cG9pbnQgZm9yIGEgcGFnZVxuICAgIGZ1bmN0aW9uIG1haW4oKVxuICAgIHtcbiAgICAgICAgLy8gc2V0IHZpZXcgdG8gbG9naW4gZm9ybVxuICAgICAgICBWaWV3SGVscGVyLnNldFZpZXcoKTtcbiAgICB9XG5cbiAgICAvLyBSZXR1cm4gdGhlIG1ldGhvZHMgdGhhdCBjYW4gYmUgdXNlZCBieSBvdGhlciBwcm9ncmFtcyAodGhlIGNvbnRyb2xsZXIgaW4gdGhpcyBjYXNlKVxuICAgIHJldHVybiB7XG4gICAgICAgIG1haW46IG1haW5cbiAgICB9XG59OyIsInZhciBMb2dpbkNvbnRyb2xsZXIgPSBmdW5jdGlvbih2aWV3SGVscGVyLCBtb2RlbClcbntcbiAgICB2YXIgTW9kZWwgICAgICA9IG1vZGVsO1xuICAgIHZhciBWaWV3SGVscGVyID0gdmlld0hlbHBlcjtcbiAgICBcbiAgICAvLyBGdW5jdGlvbiB0aGF0IGlzIGV4ZWN1dGVkIG9uIGEgYWN0aW9uIGxpc3RlbmVyXG4gICAgZnVuY3Rpb24gYWN0aW9uUGVyZm9ybWVkKGV2ZW50KVxuICAgIHtcbiAgICAgICAgLy8gUHJldmVudCBzZW5kaW5nIHRoZSBmb3JtXG4gICAgICAgIGV2ZW50LnByZXZlbnREZWZhdWx0KCk7XG5cbiAgICAgICAgLy8gTG9vcCB0cm91Z2ggdGhlIGZvcm0gZGF0YSBhbmQgZ2V0IGFsbCBmaWVsZHNcbiAgICAgICAgdmFyIGZvcm1EYXRhID0ge307XG4gICAgICAgICQuZWFjaCgkKHRoaXMpLnNlcmlhbGl6ZUFycmF5KCksIGZ1bmN0aW9uIChpLCBmaWVsZCkge1xuICAgICAgICAgICAgZm9ybURhdGFbZmllbGQubmFtZV0gPSBmaWVsZC52YWx1ZTtcbiAgICAgICAgfSk7XG5cbiAgICAgICAgLy8gbGV0IG1vZGVsIHNlbmQgZW1haWwgYW5kIHBhc3N3b3JkIHRvIEFQSVxuICAgICAgICBNb2RlbC5sb2dpbihmb3JtRGF0YS5lbWFpbCwgZm9ybURhdGEucGFzc3dvcmQsIGZ1bmN0aW9uIChkYXRhKSB7XG4gICAgICAgICAgICAvLyBzaG93IHVpdGxvZ2dlbiBidXR0b25cbiAgICAgICAgICAgICQoXCIjaW5sb2dnZW5fdGV4dFwiKS5oaWRlKCk7XG4gICAgICAgICAgICAkKFwiI3VpdGxvZ2dlbl90ZXh0XCIpLnNob3coKTtcblxuICAgICAgICAgICAgLy8gV2VlcmdlZWYgZWVuIGFuZGVyZSBwYWdpbmEgZ2ViYXNzZWVyZCBvcCAnYWRtaW4nIG9mICdyZWdpc3RlcmVkIHVzZXInXG4gICAgICAgICAgICBuZXcgUGFnZUNvbnRyb2xsZXIobmV3IFBhZ2VWaWV3SGVscGVyKCksIG5ldyBQYWdlTW9kZWwoKSkubWFpbigpO1xuICAgICAgICB9KTtcbiAgICB9XG5cbiAgICAvLyBNYWluIGZ1bmN0aW9uLCBhbHNvIHRoZSBzdGFydCBzdGFydHBvaW50IGZvciBhIHBhZ2VcbiAgICBmdW5jdGlvbiBtYWluKClcbiAgICB7XG4gICAgICAgIC8vIHNldCB2aWV3IHRvIGxvZ2luIGZvcm1cbiAgICAgICAgVmlld0hlbHBlci5zZXRWaWV3KCk7XG5cbiAgICAgICAgLy8gdXNlciBmaWxscyBpbiBlbWFpbCBhbmQgcGFzc3dvcmQ7IGNsaWNrcyAnbG9naW4nOiBWSUVXIG5vdGljZXMgdGhpcyBhbmQgcmVhY3RzXG4gICAgICAgIFZpZXdIZWxwZXIuc2V0QWN0aW9uTGlzdGVuZXIoYWN0aW9uUGVyZm9ybWVkKTtcbiAgICB9XG5cbiAgICAvLyBSZXR1cm4gdGhlIG1ldGhvZHMgdGhhdCBjYW4gYmUgdXNlZCBieSBvdGhlciBwcm9ncmFtcyAodGhlIGNvbnRyb2xsZXIgaW4gdGhpcyBjYXNlKVxuICAgIHJldHVybiB7XG4gICAgICAgIG1haW46IG1haW5cbiAgICB9XG59OyIsInZhciBMb2dvdXRDb250cm9sbGVyID0gZnVuY3Rpb24odmlld0hlbHBlciwgbW9kZWwpXG57XG4gICAgdmFyIE1vZGVsICAgICAgPSBtb2RlbDtcbiAgICB2YXIgVmlld0hlbHBlciA9IHZpZXdIZWxwZXI7XG4gICAgXG4gICAgLy8gRnVuY3Rpb24gdGhhdCBpcyBleGVjdXRlZCBvbiBhIGFjdGlvbiBsaXN0ZW5lclxuICAgIGZ1bmN0aW9uIGFjdGlvblBlcmZvcm1lZChldmVudClcbiAgICB7XG4gICAgICAgIE1vZGVsLmxvZ291dChmdW5jdGlvbiAoZGF0YSkge1xuICAgICAgICAgICAgLy8gc2hvdyB1aXRsb2dnZW4gYnV0dG9uXG4gICAgICAgICAgICAkKFwiI2lubG9nZ2VuX3RleHRcIikuc2hvdygpO1xuICAgICAgICAgICAgJChcIiN1aXRsb2dnZW5fdGV4dFwiKS5oaWRlKCk7XG5cbiAgICAgICAgICAgIC8vIHNldCB2aWV3IHRvIGxvZ2luIGZvcm1cbiAgICAgICAgICAgIFZpZXdIZWxwZXIuc2V0VmlldygpO1xuICAgICAgICB9KTtcbiAgICB9XG5cbiAgICAvLyBNYWluIGZ1bmN0aW9uLCBhbHNvIHRoZSBzdGFydCBzdGFydHBvaW50IGZvciBhIHBhZ2VcbiAgICBmdW5jdGlvbiBtYWluKClcbiAgICB7XG4gICAgICAgIC8vIHVzZXIgZmlsbHMgaW4gZW1haWwgYW5kIHBhc3N3b3JkOyBjbGlja3MgJ2xvZ2luJzogVklFVyBub3RpY2VzIHRoaXMgYW5kIHJlYWN0c1xuICAgICAgICBWaWV3SGVscGVyLnNldEFjdGlvbkxpc3RlbmVyKGFjdGlvblBlcmZvcm1lZCk7XG4gICAgfVxuXG4gICAgLy8gUmV0dXJuIHRoZSBtZXRob2RzIHRoYXQgY2FuIGJlIHVzZWQgYnkgb3RoZXIgcHJvZ3JhbXMgKHRoZSBjb250cm9sbGVyIGluIHRoaXMgY2FzZSlcbiAgICByZXR1cm4ge1xuICAgICAgICBtYWluOiBtYWluXG4gICAgfVxufTsiLCJ2YXIgUGFnZUNvbnRyb2xsZXIgPSBmdW5jdGlvbih2aWV3SGVscGVyLCBtb2RlbClcbntcbiAgICB2YXIgTW9kZWwgPSBtb2RlbDtcbiAgICB2YXIgVmlldyAgPSB2aWV3SGVscGVyO1xuICAgIFxuICAgIC8vIEZ1bmN0aW9uIHRoYXQgaXMgZXhlY3V0ZWQgb24gYSBhY3Rpb24gbGlzdGVuZXJcbiAgICBmdW5jdGlvbiBhY3Rpb25QZXJmb3JtZWQoZXZlbnQpXG4gICAge1xuICAgICAgICBNb2RlbC5nZXRQYWdlKGZ1bmN0aW9uIChkYXRhKSB7XG4gICAgICAgICAgICBWaWV3LnNldFZpZXcoZGF0YSk7XG4gICAgICAgIH0pO1xuICAgIH1cblxuICAgIC8vIE1haW4gZnVuY3Rpb24sIGFsc28gdGhlIHN0YXJ0IHN0YXJ0cG9pbnQgZm9yIGEgcGFnZVxuICAgIGZ1bmN0aW9uIG1haW4oKVxuICAgIHsgICAgICAgICAgICAgICAgICAgICAgICBcbiAgICAgICAgVmlldy5zZXRBY3Rpb25MaXN0ZW5lcihhY3Rpb25QZXJmb3JtZWQpO1xuICAgIH1cblxuICAgIC8vIFJldHVybiB0aGUgbWV0aG9kcyB0aGF0IGNhbiBiZSB1c2VkIGJ5IG90aGVyIHByb2dyYW1zICh0aGUgY29udHJvbGxlciBpbiB0aGlzIGNhc2UpXG4gICAgcmV0dXJuIHtcbiAgICAgICAgbWFpbjogbWFpblxuICAgIH1cbn07IiwidmFyIFByb2R1Y3RzQ29udHJvbGxlciA9IGZ1bmN0aW9uKHZpZXdIZWxwZXIsIG1vZGVsKVxue1xuICAgIHZhciBNb2RlbCAgICAgID0gbW9kZWw7XG4gICAgdmFyIFZpZXdIZWxwZXIgPSB2aWV3SGVscGVyO1xuICAgIFxuICAgIC8vIEZ1bmN0aW9uIHRoYXQgaXMgZXhlY3V0ZWQgb24gYSBhY3Rpb24gbGlzdGVuZXJcbiAgICBmdW5jdGlvbiBnZXRQYWdlKClcbiAgICB7XG4gICAgICAgIE1vZGVsLmdldFBhZ2UoXCJcIiwgZnVuY3Rpb24gKGRhdGEpIHsgVmlld0hlbHBlci5zZXRWaWV3KGRhdGEpOyB9KTtcbiAgICB9XG5cbiAgICBmdW5jdGlvbiBmaWx0ZXJQcm9kdWN0cyhldmVudClcbiAgICB7XG4gICAgICAgIC8vIFByZXZlbnQgc2VuZGluZyB0aGUgZm9ybSAocGFnZSByZWxvYWQpXG4gICAgICAgIGV2ZW50LnByZXZlbnREZWZhdWx0KCk7XG5cbiAgICAgICAgdmFyIGZpbHRlcnMgPSAkKHRoaXMpLnNlcmlhbGl6ZSgpO1xuICAgICAgICBNb2RlbC5nZXRQYWdlKGZpbHRlcnMsIGZ1bmN0aW9uIChkYXRhKSB7IFZpZXdIZWxwZXIubG9hZFByb2R1Y3RzKGRhdGEpOyB9KTtcbiAgICB9XG5cbiAgICAvLyBNYWluIGZ1bmN0aW9uLCBhbHNvIHRoZSBzdGFydCBzdGFydHBvaW50IGZvciBhIHBhZ2VcbiAgICBmdW5jdGlvbiBtYWluKClcbiAgICB7ICAgICAgICAgICAgICAgICAgICAgICAgXG4gICAgICAgIFZpZXdIZWxwZXIuc2V0QWN0aW9uTGlzdGVuZXIoZ2V0UGFnZSk7XG4gICAgICAgIFZpZXdIZWxwZXIuc2V0RmlsdGVyTGlzdGVuZXIoZmlsdGVyUHJvZHVjdHMpO1xuICAgICAgICAvLyBuZXcgYWN0aW9uIHdhbm5lciBlciBvcCBmaWx0ZXIgd29yZHQgZ2VkcnVrdFxuICAgIH1cblxuICAgIC8vIFJldHVybiB0aGUgbWV0aG9kcyB0aGF0IGNhbiBiZSB1c2VkIGJ5IG90aGVyIHByb2dyYW1zICh0aGUgY29udHJvbGxlciBpbiB0aGlzIGNhc2UpXG4gICAgcmV0dXJuIHtcbiAgICAgICAgbWFpbjogbWFpblxuICAgIH1cbn07IiwidmFyIFJlZ2lzdGVyQ29udHJvbGxlciA9IGZ1bmN0aW9uKHZpZXdIZWxwZXIsIG1vZGVsKVxue1xuICAgIHZhciBNb2RlbCAgICAgID0gbW9kZWw7XG4gICAgdmFyIFZpZXdIZWxwZXIgPSB2aWV3SGVscGVyO1xuICAgIFxuICAgIC8vIEZ1bmN0aW9uIHRoYXQgaXMgZXhlY3V0ZWQgb24gYSBhY3Rpb24gbGlzdGVuZXJcbiAgICBmdW5jdGlvbiBhY3Rpb25QZXJmb3JtZWQoKVxuICAgIHtcbiAgICAgICAgY29uc29sZS5sb2coXCJpbiBhY3Rpb25QZXJmb3JtZWRcIik7IC8vdGVzdFxuXG4gICAgICAgIC8vIFByZXZlbnQgc2VuZGluZyB0aGUgZm9ybVxuICAgICAgICBldmVudC5wcmV2ZW50RGVmYXVsdCgpO1xuXG4gICAgICAgIC8vIHJlc2V0IGVycm9yIG1lc3NhZ2VzXG4gICAgICAgICQoXCIjcmVnaV9hcGlfZXJyb3JfbWVzc2FnZVwiKS5oaWRlKCk7XG4gICAgICAgICQoXCIjd3cyX2Vycm9yX21lc3NhZ2VcIikuaGlkZSgpO1xuXG4gICAgICAgIC8vIHB1dCBmb3JtIGZpZWxkcyBpbiBqYXZhc2NyaXB0IE9iamVjdFxuICAgICAgICB2YXIgZm9ybURhdGEgPSB7fTtcblxuICAgICAgICAkLmVhY2goJCh0aGlzKS5zZXJpYWxpemVBcnJheSgpLCBmdW5jdGlvbiAoaSwgZmllbGQpIHtcbiAgICAgICAgICAgIGZvcm1EYXRhW2ZpZWxkLm5hbWVdID0gZmllbGQudmFsdWU7XG4gICAgICAgIH0pO1xuXG4gICAgICAgIC8vIGZpeCBkYXRlIG9mIGJpcnRoIChBUEkgZXhwZWN0cyBjZXJ0YWluIGZvcm1hdClcbiAgICAgICAgZm9ybURhdGFbXCJiaXJ0aF9kYXRlXCJdID0gZm9ybURhdGEuamFhciArIFwiLVwiICsgZm9ybURhdGEubWFhbmQgKyBcIi1cIiArIGZvcm1EYXRhLmRhZztcblxuICAgICAgICAvLyBjaGVjayB3aGV0aGVyIGFueSBtYW5kYXRvcnkgZmllbGQgaXMgbGVmdCBlbXB0eSBieSB1c2VyIGFuZFxuICAgICAgICAvLyBpZiBzbywgYWJvcnQgZnVuY3Rpb25cbiAgICAgICAgdmFyIG1hbmRhdG9yeUZpZWxkTWlzc2VzID0gZmFsc2U7XG4gICAgICAgIHZhciBtYW5kYXRvcnlGaWVsZHMgPSBbXCJ2b29ybmFhbVwiLCBcImFjaHRlcm5hYW1cIiwgXCJwb3N0Y29kZVwiLCBcImh1aXNudW1tZXJcIiwgXCJlX21haWxhZHJlc1wiLCBcIndhY2h0d29vcmRcIiwgXCJ3YWNodHdvb3JkMlwiLCBcInNlY3VyaXR5X2Fuc3dlclwiXTsgLy9kcm9wZG93bnMgKGxpa2UgZ2VuZGVyKSBhcmUgYWx3YXlzIGZpbGxlZCBpbiwgc28gZG9uJ3QgcHV0IGluIHRoaXMgbGlzdFxuXG4gICAgICAgIC8vIChyZXNldCBhbGwgZmllbGRzIHRvICd2YWxpZCcgYmVjYXVzZSB1c2VyIG1heSBoYXZlIGZpbGxlZCBpbiBmaWVsZHMgc2luY2VcbiAgICAgICAgLy8gdGhlIHByZXZpb3VzIHRpbWUgdGhpcyBmdW5jdGlvbiB3YXMgY2FsbGVkKVxuICAgICAgICAkLmVhY2gobWFuZGF0b3J5RmllbGRzLCBmdW5jdGlvbiAoaSwgbWFuRmllbGQpIHtcbiAgICAgICAgICAgICQoXCIjXCIgKyBtYW5GaWVsZCkucmVtb3ZlQ2xhc3MoXCJpbnZhbGlkXCIpO1xuICAgICAgICB9KVxuXG4gICAgICAgICQuZWFjaChtYW5kYXRvcnlGaWVsZHMsIGZ1bmN0aW9uIChpLCBtYW5GaWVsZCkge1xuICAgICAgICAgICAgaWYgKGZvcm1EYXRhW21hbkZpZWxkXSA9PSBcIlwiKVxuICAgICAgICAgICAge1xuICAgICAgICAgICAgICAgICQoXCIjXCIgKyBtYW5GaWVsZCkuYWRkQ2xhc3MoXCJpbnZhbGlkXCIpO1xuXG4gICAgICAgICAgICAgICAgbWFuZGF0b3J5RmllbGRNaXNzZXMgPSB0cnVlO1xuICAgICAgICAgICAgfVxuICAgICAgICB9KVxuXG4gICAgICAgIFxuICAgICAgICAvLyBpZiBhIG1hbmRhdG9yeSBmaWVsZCBpcyBlbXB0eSwgc2hvdyBlcnJvciBtZXNzYWdlIHRvIHVzZXIgYW5kIGFib3J0IGZ1bmN0aW9uXG4gICAgICAgIGlmIChtYW5kYXRvcnlGaWVsZE1pc3NlcylcbiAgICAgICAgeyBcbiAgICAgICAgICAgIC8vIHNjcm9sbCB0byB0b3Agb2YgcGFnZSBzbyB0aGF0IHVzZXJzIHNlZSBtZXNzYWdlIFwic29tZXRoaW5nIGlzIG5vdCBmaWxsZWQgaW5cIlxuICAgICAgICAgICAgd2luZG93LnNjcm9sbFRvKDAsIDApO1xuICAgICAgICAgICAgLy8gc2hvdyBtZXNzYWdlIFwic29tZXRoaW5nIGlzIG5vdCBmaWxsZWQgaW5cIlxuICAgICAgICAgICAgJChcIiNyZWdpc3Rlcl9lcnJvcl9tZXNzYWdlXCIpLnNob3coKTtcbiAgICAgICAgfTtcblxuICAgICAgICB2YXIgcGFzc3dvcmRzTm90SWRlbnRpY2FsID0gZmFsc2U7XG5cbiAgICAgICAgaWYgKGZvcm1EYXRhLndhY2h0d29vcmQgIT0gZm9ybURhdGEud2FjaHR3b29yZDIpIFxuICAgICAgICB7XG4gICAgICAgICAgICBwYXNzd29yZHNOb3RJZGVudGljYWwgPSB0cnVlO1xuICAgICAgICAgICAgJChcIiN3dzJfZXJyb3JfbWVzc2FnZVwiKS5zaG93KCk7XG4gICAgICAgICAgICAkKFwiI3dhY2h0d29vcmRcIikuYWRkQ2xhc3MoXCJpbnZhbGlkXCIpO1xuICAgICAgICAgICAgJChcIiN3YWNodHdvb3JkMlwiKS5hZGRDbGFzcyhcImludmFsaWRcIik7XG4gICAgICAgIH1cblxuICAgICAgICAvLyBhYm9ydCBmdW5jdGlvbiBpZiBtYW5kYXRvcnkgZmllbGQgbWlzc2VzIG9yIHBhc3N3b3JkcyBub3QgaWRlbnRpY2FsXG4gICAgICAgIGlmIChtYW5kYXRvcnlGaWVsZE1pc3NlcyB8fCBwYXNzd29yZHNOb3RJZGVudGljYWwpXG4gICAgICAgIHtcbiAgICAgICAgICAgIHJldHVybiBmYWxzZTtcbiAgICAgICAgfVxuXG4gICAgICAgIC8vIGxldCBtb2RlbCBzZW5kIHVzZXIgaW5mbyB0byBBUElcbiAgICAgICAgTW9kZWwucmVnaXN0ZXIoZm9ybURhdGEsIGZ1bmN0aW9uIChkYXRhKSB7XG4gICAgICAgICAgICBWaWV3SGVscGVyLnNldFZpZXcoJy92aWV3cy9yZWdpc3Rlci9hZnRlcl9yZWdpc3Rlci5odG1sJyk7XG4gICAgICAgIH0pO1xuICAgIH1cblxuICAgIC8vIE1haW4gZnVuY3Rpb24sIGFsc28gdGhlIHN0YXJ0IHN0YXJ0cG9pbnQgZm9yIGEgcGFnZVxuICAgIGZ1bmN0aW9uIG1haW4oKVxuICAgIHtcbiAgICAgICAgLy8gc2V0IHZpZXcgdG8gcmVnaXN0ZXIgZm9ybVxuICAgICAgICBWaWV3SGVscGVyLnNldFZpZXcoJy92aWV3cy9yZWdpc3Rlci9yZWdpc3Rlci5odG1sJyk7XG5cbiAgICAgICAgLy8gdXNlciBmaWxscyBpbiByZWdpc3RlciBpbmZvOyBjbGlja3MgJ3JlZ2lzdGVyJzogdmlldyBub3RpY2VzIHRoaXMgYW5kIHJlYWN0c1xuICAgICAgICBWaWV3SGVscGVyLnNldEFjdGlvbkxpc3RlbmVyKGFjdGlvblBlcmZvcm1lZCk7XG5cbiAgICAgICAgLy8gZW1haWwgYW5kIHBhc3N3b3JkIGFyZSBzZW5kIHRvIEFQSTsgQVBJIGNoZWNrcyBpZiBlbWFpbCBhbHJlYWR5IGV4aXN0cyAoYW5kIHdoZXRoZXIgcGFzc3dvcmQgaXMgY29ycmVjdD8pIFxuICAgIH1cblxuICAgIC8vIFJldHVybiB0aGUgbWV0aG9kcyB0aGF0IGNhbiBiZSB1c2VkIGJ5IG90aGVyIHByb2dyYW1zICh0aGUgY29udHJvbGxlciBpbiB0aGlzIGNhc2UpXG4gICAgcmV0dXJuIHtcbiAgICAgICAgbWFpbjogbWFpblxuICAgIH1cbn07IiwidmFyIFByb2R1Y3RDb250cm9sbGVyID0gZnVuY3Rpb24odmlld0hlbHBlciwgbW9kZWwpXG57XG4gICAgdmFyIE1vZGVsICAgICAgPSBtb2RlbDtcbiAgICB2YXIgVmlld0hlbHBlciA9IHZpZXdIZWxwZXI7XG4gICAgXG4gICAgLy8gRnVuY3Rpb24gdGhhdCBpcyBleGVjdXRlZCBvbiBhIGFjdGlvbiBsaXN0ZW5lclxuICAgIGZ1bmN0aW9uIGFjdGlvblBlcmZvcm1lZChldmVudClcbiAgICB7XG4gICAgICAgIC8vIFByZXZlbnQgc2VuZGluZyB0aGUgZm9ybVxuICAgICAgICBldmVudC5wcmV2ZW50RGVmYXVsdCgpO1xuXG5cblxuXG5cblxuICAgICAgICAvLyBMb29wIHRyb3VnaCB0aGUgZm9ybSBkYXRhIGFuZCBnZXQgYWxsIGZpZWxkc1xuICAgICAgICB2YXIgZm9ybURhdGEgPSB7fTtcbiAgICAgICAgJC5lYWNoKCQodGhpcykuc2VyaWFsaXplQXJyYXkoKSwgZnVuY3Rpb24gKGksIGZpZWxkKSB7XG4gICAgICAgICAgICBmb3JtRGF0YVtmaWVsZC5uYW1lXSA9IGZpZWxkLnZhbHVlO1xuICAgICAgICB9KTtcblxuICAgICAgICAvLyBsZXQgbW9kZWwgc2VuZCBlbWFpbCBhbmQgcGFzc3dvcmQgdG8gQVBJXG4gICAgICAgIE1vZGVsLmxvZ2luKGZvcm1EYXRhLmVtYWlsLCBmb3JtRGF0YS5wYXNzd29yZCwgZnVuY3Rpb24gKGRhdGEpIHtcbiAgICAgICAgICAgIC8vIHNob3cgdWl0bG9nZ2VuIGJ1dHRvblxuICAgICAgICAgICAgJChcIiNpbmxvZ2dlbl90ZXh0XCIpLmhpZGUoKTtcbiAgICAgICAgICAgICQoXCIjdWl0bG9nZ2VuX3RleHRcIikuc2hvdygpO1xuXG4gICAgICAgICAgICAvLyBXZWVyZ2VlZiBlZW4gYW5kZXJlIHBhZ2luYSBnZWJhc3NlZXJkIG9wICdhZG1pbicgb2YgJ3JlZ2lzdGVyZWQgdXNlcidcbiAgICAgICAgICAgIG5ldyBQYWdlQ29udHJvbGxlcihuZXcgUGFnZVZpZXdIZWxwZXIoKSwgbmV3IFBhZ2VNb2RlbCgpKS5tYWluKCk7XG4gICAgICAgIH0pO1xuICAgIH1cblxuICAgIC8vIGxldCB2aWV3IHNob3cgdmlldyB3aXRoIGRhdGEgZnJvbSBkYXRhYmFzZVxuICAgIGZ1bmN0aW9uIHNob3dWaWV3KGRhdGEpXG4gICAge1xuICAgICAgICB2aWV3SGVscGVyLnNldFZpZXcoZGF0YSk7XG4gICAgfVxuXG4gICAgLy8gTWFpbiBmdW5jdGlvbiwgYWxzbyB0aGUgc3RhcnQgc3RhcnRwb2ludCBmb3IgYSBwYWdlXG4gICAgZnVuY3Rpb24gbWFpbigpXG4gICAge1xuICAgICAgICAvLyB3aGF0IGhhcHBlbnM6XG4gICAgICAgIC8vIDEpIHVzZXIgY2xpY2tzIG9uIGEgcHJvZHVjdCBcbiAgICAgICAgLy8gMikgbW9kZWwgZ2V0cyBpbmZvIG9mIHRoZSBwcm9kdWN0XG4gICAgICAgIC8vIDMpIHN5c3RlbSBwdXRzIGluZm8gaW4gaHRtbFxuICAgICAgICAvLyA0KSB2aWV3IHNob3dzIGluZm9cblxuICAgICAgICAvLyAyKSBtb2RlbCBnZXRzIGluZm8gb2YgdGhlIHByb2R1Y3RcbiAgICAgICAgLy8gMykgc3lzdGVtIHB1dHMgaW5mbyBpbiBodG1sXG4gICAgICAgIG1vZGVsLkdldFByb2R1Y3RJbmZvKHNob3dWaWV3KTtcblxuXG5cbiAgICAgICAgLy8gc2V0IHZpZXcgdG8gbG9naW4gZm9ybVxuICAgICAgICAvL1ZpZXdIZWxwZXIuc2V0VmlldygpO1xuXG4gICAgICAgIC8vIHVzZXIgZmlsbHMgaW4gZW1haWwgYW5kIHBhc3N3b3JkOyBjbGlja3MgJ2xvZ2luJzogVklFVyBub3RpY2VzIHRoaXMgYW5kIHJlYWN0c1xuICAgICAgICAvL1ZpZXdIZWxwZXIuc2V0QWN0aW9uTGlzdGVuZXIoYWN0aW9uUGVyZm9ybWVkKTtcbiAgICB9XG5cbiAgICAvLyBSZXR1cm4gdGhlIG1ldGhvZHMgdGhhdCBjYW4gYmUgdXNlZCBieSBvdGhlciBwcm9ncmFtcyAodGhlIGNvbnRyb2xsZXIgaW4gdGhpcyBjYXNlKVxuICAgIHJldHVybiB7XG4gICAgICAgIG1haW46IG1haW4sXG4gICAgICAgIHNob3dWaWV3IDogc2hvd1ZpZXdcbiAgICB9XG59OyIsInZhciBFcnJvclZpZXdIZWxwZXIgPSBmdW5jdGlvbigpXG57XG4gICAgLy8gQ2hhbmdlIHRoZSB2aWV3IG9mIHRoZSBwYWdlXG4gICAgZnVuY3Rpb24gc2V0VmlldygpXG4gICAge1xuICAgICAgICAkKFwiI2NvbXBvbmVudFwiKS5sb2FkKCcvdmlld3MvZXJyb3IvZXJyb3IuaHRtbCcpO1xuICAgIH1cblxuICAgIC8vIEFjdGlvbkxpc3RlbmVyIHRoYXQgZXhlY3V0ZXMgYWN0aW9ucyBvbiBzcGVjaWZpYyBldmVudHNcbiAgICBmdW5jdGlvbiBzZXRBY3Rpb25MaXN0ZW5lcihldmVudEhhbmRsZXIpXG4gICAge1xuICAgICAgICAkKGRvY3VtZW50KS5yZWFkeShldmVudEhhbmRsZXIpO1xuICAgIH1cblxuICAgIC8vIFJldHVybiB0aGUgbWV0aG9kcyB0aGF0IGNhbiBiZSB1c2VkIGJ5IG90aGVyIHByb2dyYW1zICh0aGUgY29udHJvbGxlciBpbiB0aGlzIGNhc2UpXG4gICAgcmV0dXJuIHtcbiAgICAgICAgc2V0Vmlldzogc2V0VmlldyxcbiAgICAgICAgc2V0QWN0aW9uTGlzdGVuZXI6IHNldEFjdGlvbkxpc3RlbmVyXG4gICAgfVxufTsiLCJ2YXIgTG9naW5WaWV3SGVscGVyID0gZnVuY3Rpb24oKVxue1xuICAgIC8vIENoYW5nZSB0aGUgdmlldyBvZiB0aGUgcGFnZVxuICAgIGZ1bmN0aW9uIHNldFZpZXcoKVxuICAgIHtcbiAgICAgICAgJChcIiNjb21wb25lbnRcIikubG9hZCgnL3ZpZXdzL2xvZ2luL2xvZ2luLmh0bWwnKTtcbiAgICB9XG5cbiAgICAvLyBFeGVjdXRlIHRoZSBldmVudCB3aGVuICdzb21ldGhpbmcnIGhhcHBlbnMgKHdoZW4gYSBidXR0b24gaXMgY2xpY2tlZCBmb3IgZXhhbXBsZSlcbiAgICBmdW5jdGlvbiBzZXRBY3Rpb25MaXN0ZW5lcihhY3Rpb24pXG4gICAge1xuICAgICAgICAvLyB1c2VyIGZpbGxzIGluIGxvZ2luIGZvcm1cbiAgICAgICAgLy8gdXNlciBwcmVzc2VzICdsb2dpbidcblxuICAgICAgICAvLyBpZiB1c2VyIHByZXNzZXMgJ2xvZ2luJywgcGVyZm9ybSBhY3Rpb24gKG1ha2UgY29udHJvbGxlciBzZW5kIGVtYWlsIGFuZCBwYXNzd29yZCB0byBBUEkpXG4gICAgICAgICQoXCIjY29tcG9uZW50XCIpLm9uKFwic3VibWl0XCIsIFwiI2xvZ2luZm9ybVwiLCBhY3Rpb24pO1xuICAgIH1cblxuICAgIC8vIFJldHVybiB0aGUgbWV0aG9kcyB0aGF0IGNhbiBiZSB1c2VkIGJ5IG90aGVyIHByb2dyYW1zICh0aGUgY29udHJvbGxlciBpbiB0aGlzIGNhc2UpXG4gICAgcmV0dXJuIHtcbiAgICAgICAgc2V0Vmlldzogc2V0VmlldyxcbiAgICAgICAgc2V0QWN0aW9uTGlzdGVuZXI6IHNldEFjdGlvbkxpc3RlbmVyXG4gICAgfVxufTsiLCJ2YXIgTG9nb3V0Vmlld0hlbHBlciA9IGZ1bmN0aW9uKClcbntcbiAgICAvLyBDaGFuZ2UgdGhlIHZpZXcgb2YgdGhlIHBhZ2VcbiAgICBmdW5jdGlvbiBzZXRWaWV3KClcbiAgICB7XG4gICAgICAgICQoXCIjY29tcG9uZW50XCIpLmxvYWQoJy92aWV3cy9sb2dvdXQvbG9nb3V0Lmh0bWwnKTtcbiAgICB9XG5cbiAgICAvLyBFeGVjdXRlIHRoZSBldmVudCB3aGVuICdzb21ldGhpbmcnIGhhcHBlbnMgKHdoZW4gYSBidXR0b24gaXMgY2xpY2tlZCBmb3IgZXhhbXBsZSlcbiAgICBmdW5jdGlvbiBzZXRBY3Rpb25MaXN0ZW5lcihhY3Rpb24pXG4gICAge1xuICAgICAgICAkKGRvY3VtZW50KS5yZWFkeShhY3Rpb24pO1xuICAgIH1cblxuICAgIC8vIFJldHVybiB0aGUgbWV0aG9kcyB0aGF0IGNhbiBiZSB1c2VkIGJ5IG90aGVyIHByb2dyYW1zICh0aGUgY29udHJvbGxlciBpbiB0aGlzIGNhc2UpXG4gICAgcmV0dXJuIHtcbiAgICAgICAgc2V0Vmlldzogc2V0VmlldyxcbiAgICAgICAgc2V0QWN0aW9uTGlzdGVuZXI6IHNldEFjdGlvbkxpc3RlbmVyXG4gICAgfVxufTsiLCJ2YXIgUGFnZVZpZXdIZWxwZXIgPSBmdW5jdGlvbigpXG57XG4gICAgLy8gQ2hhbmdlIHRoZSB2aWV3IG9mIHRoZSBwYWdlXG4gICAgZnVuY3Rpb24gc2V0Vmlldyh2aWV3RGF0YSlcbiAgICB7XG4gICAgICAgICQoXCIjY29tcG9uZW50XCIpLmxvYWQoJy92aWV3cy9wYWdlL3BhZ2UuaHRtbCcsIGZ1bmN0aW9uICgpIHtcbiAgICAgICAgICAgIGlmICh2aWV3RGF0YVswXS51c2VyX3R5cGUgPT0gXCJjdXN0b21lclwiKVxuICAgICAgICAgICAge1xuICAgICAgICAgICAgICAgICQoXCIjdXNlci1ibG9ja1wiKS5hcHBlbmQoXCI8aDE+SmUgbGVlcyBkaXQgYWxsZWVuIGFscyBqZSBlZW4gY3VzdG9tZXIgYmVudFwiKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGlmICh2aWV3RGF0YVswXS51c2VyX3R5cGUgPT0gXCJhZG1pblwiKVxuICAgICAgICAgICAge1xuICAgICAgICAgICAgICAgICQoXCIjdXNlci1ibG9ja1wiKS5hcHBlbmQoXCI8aDE+SmUgbGVlcyBkaXQgYWxsZWVuIGFscyBqZSBlZW4gYWRtaW5pc3RyYXRvciBiZW50XCIpO1xuICAgICAgICAgICAgfVxuICAgICAgICB9KTtcbiAgICB9XG5cbiAgICAvLyBBY3Rpb25MaXN0ZW5lciB0aGF0IGV4ZWN1dGVzIGFjdGlvbnMgb24gc3BlY2lmaWMgZXZlbnRzXG4gICAgZnVuY3Rpb24gc2V0QWN0aW9uTGlzdGVuZXIoZXZlbnRIYW5kbGVyKVxuICAgIHtcbiAgICAgICAgJChkb2N1bWVudCkucmVhZHkoZXZlbnRIYW5kbGVyKTtcbiAgICB9XG5cbiAgICAvLyBSZXR1cm4gdGhlIG1ldGhvZHMgdGhhdCBjYW4gYmUgdXNlZCBieSBvdGhlciBwcm9ncmFtcyAodGhlIGNvbnRyb2xsZXIgaW4gdGhpcyBjYXNlKVxuICAgIHJldHVybiB7XG4gICAgICAgIHNldFZpZXc6IHNldFZpZXcsXG4gICAgICAgIHNldEFjdGlvbkxpc3RlbmVyOiBzZXRBY3Rpb25MaXN0ZW5lclxuICAgIH1cbn07IiwidmFyIFByb2R1Y3RzVmlld0hlbHBlciA9IGZ1bmN0aW9uKClcbntcbiAgICAvLyBDaGFuZ2UgdGhlIHZpZXcgb2YgdGhlIHBhZ2VcbiAgICBmdW5jdGlvbiBzZXRWaWV3KHZpZXdEYXRhKVxuICAgIHtcbiAgICAgICAgJChcIiNjb21wb25lbnRcIikuaHRtbCgnPGRpdiBjbGFzcz1cImNvbC0xMlwiPjxkaXYgY2xhc3M9XCJjb2wtM1wiIGlkPVwiZmlsdGVyc1wiPjwvZGl2PjxkaXYgY2xhc3M9XCJjb2wtOVwiIGlkPVwicHJvZHVjdHNcIj48L2Rpdj48L2Rpdj4nKTtcbiAgICAgICAgLy8gbG9hZCBmaWx0ZXJzXG4gICAgICAgICQoXCIjZmlsdGVyc1wiKS5sb2FkKCcvdmlld3MvcHJvZHVjdHMvZmlsdGVycy5odG1sJyk7XG5cbiAgICAgICAgLy8gbG9hZCBwcm9kdWN0c1xuICAgICAgICBsb2FkUHJvZHVjdHModmlld0RhdGEpO1xuICAgIH1cblxuICAgIGZ1bmN0aW9uIGxvYWRQcm9kdWN0cyh2aWV3RGF0YSlcbiAgICB7XG4gICAgICAgICQoXCIjcHJvZHVjdHNcIikubG9hZCgndmlld3MvcHJvZHVjdHMvcHJvZHVjdHMuaHRtbCcsIGZ1bmN0aW9uICgpIHsgLy8gd2FhciBpZCA9ICdjb21wb25lbnQnIGRvZSAubG9hZC4uLi4uLlxuICAgICAgICAgICAgJC5lYWNoKHZpZXdEYXRhLCBmdW5jdGlvbihrZXksIHZhbHVlKSB7XG4gICAgICAgICAgICAgICAgLy8gQ2xvbmUgcHJvZHVjdFxuICAgICAgICAgICAgICAgIHZhciBwcm9kdWN0ID0gJCgnPGRpdj4nKS5hcHBlbmQoJCgnI3Byb2R1Y3RfX2xpc3RfX2l0ZW0nKS5jbG9uZSgpKTtcbiAgICAgICAgICAgICAgICBcbiAgICAgICAgICAgICAgICAvLyBBZGQgcHJvZHVjdCBpbmZvXG4gICAgICAgICAgICAgICAgJChwcm9kdWN0KS5maW5kKFwiLnByb2R1Y3RfX3RpdGxlXCIpLmh0bWwodmFsdWUudGl0bGUpO1xuICAgICAgICAgICAgICAgICQocHJvZHVjdCkuZmluZChcIi5wcm9kdWN0X19zdWJ0aXRsZVwiKS5hcHBlbmQodmFsdWUuZ2VucmUgKyhcIiB8IFBFR0kgXCIpICsgdmFsdWUucGVnaV9hZ2UgKyhcIiB8IFwiKSsgUGxhdGZvcm1Mb2dvKHZhbHVlLnBsYXRmb3JtKSk7XG4gICAgICAgICAgICAgICAgJChwcm9kdWN0KS5maW5kKFwiLnByb2R1Y3RfX2Rlc2NyaXB0aW9uXCIpLmh0bWwoQ3V0U3RyaW5nKHZhbHVlLmRlc2NyaXB0aW9uKSk7XG4gICAgICAgICAgICAgICAgJChwcm9kdWN0KS5maW5kKFwiLnByb2R1Y3RfX3ByaWNlXCIpLmFwcGVuZCgoXCLigqwgXCIpK3ZhbHVlLnByaWNlKTtcbiAgICAgICAgICAgICAgICAkKHByb2R1Y3QpLmZpbmQoXCIjYnV0dG9uc19faW5mb1wiKS5hdHRyKFwiaHJlZlwiLCBcInByb2R1Y3QvXCIgKyB2YWx1ZS5lYW5fbnVtYmVyKVxuICAgICAgICAgICAgICAgICQocHJvZHVjdCkuZmluZChcIi5wcm9kdWN0X19pbWFnZSBpbWdcIikuYXR0cihcInNyY1wiLCB2YWx1ZS5pbWFnZSk7XG5cbiAgICAgICAgICAgICAgICAkKFwiI3Byb2R1Y3RfX2xpc3RcIikuYXBwZW5kKHByb2R1Y3QpO1xuICAgICAgICAgICAgfSk7XG5cbiAgICAgICAgICAgIC8vIFJlbW92ZSB0aGUgZmlyc3QgbGlzdCBpdGVtLCBiZWNhdXNlIHRoaXMgaXRlbSBpcyBhbHdheXMgZW1wdHlcbiAgICAgICAgICAgICQoXCIjcHJvZHVjdF9fbGlzdF9faXRlbVwiKS5maXJzdCgpLnJlbW92ZSgpO1xuICAgICAgICB9KTtcbiAgICB9XG5cbiAgICAvL1Nob3cgbW9yZS9sZXNzXG4gICAgZnVuY3Rpb24gQ3V0U3RyaW5nKHRleHQpe1xuICAgICAgICB2YXIgU2hvd0Ftb3VudCA9IDUwO1xuICAgICAgICB2YXIgV29yZHNBcnJheSA9IHRleHQuc3BsaXQoXCIgXCIpO1xuICAgICAgICBpZihXb3Jkc0FycmF5Lmxlbmd0aD5TaG93QW1vdW50KXtcbiAgICAgICAgICAgIHZhciBTaG9ydFN0cmluZyA9IFwiXCI7XG4gICAgICAgICAgICBmb3IoaT0wOyBpPFNob3dBbW91bnQ7IGkrKyl7XG4gICAgICAgICAgICAgICAgU2hvcnRTdHJpbmcgKz0gV29yZHNBcnJheVtpXSArIFwiIFwiO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgcmV0dXJuIFNob3J0U3RyaW5nK1wiLi4uXCI7XG4gICAgICAgIH1lbHNle1xuICAgICAgICAgICAgcmV0dXJuIHRleHQ7XG4gICAgICAgIH1cbiAgICB9O1xuXG4gICAgLy9QbGF0Zm9ybSBMb2dvJ3NcbiAgICBmdW5jdGlvbiBQbGF0Zm9ybUxvZ28ocGxhdGZvcm1uYWFtKVxuICAgIHtcbiAgICAgICAgcGxhdGZvcm1uYWFtID0gcGxhdGZvcm1uYWFtLnRvVXBwZXJDYXNlKCk7XG4gICAgICAgIHN3aXRjaCAocGxhdGZvcm1uYWFtKVxuICAgICAgICB7XG4gICAgICAgICAgICBjYXNlIFwiUFM0XCI6XG4gICAgICAgICAgICAgICAgcmV0dXJuIFwiPGltZyBzcmM9J2h0dHBzOi8vbWF4Y2RuLmljb25zOC5jb20vQW5kcm9pZF9ML1BORy80OC9Mb2dvcy9wbGF5X3N0YXRpb25fY29weXJpZ2h0ZWQtNDgucG5nJyAvPlwiO1xuICAgICAgICAgICAgICAgIGJyZWFrO1xuICAgICAgICAgICAgY2FzZSBcIlBDXCI6XG4gICAgICAgICAgICAgICAgcmV0dXJuIFwiPGltZyBzcmM9J2h0dHBzOi8vbWF4Y2RuLmljb25zOC5jb20vQ29sb3IvUE5HLzQ4L09wZXJhdGluZ19TeXN0ZW1zL3dpbmRvd3NfbG9nb19jb3B5cmlnaHRlZC00OC5wbmcnIC8+XCI7XG4gICAgICAgICAgICAgICAgYnJlYWs7XG4gICAgICAgICAgICBjYXNlIFwiWEJPWFwiOlxuICAgICAgICAgICAgICAgIHJldHVybiBcIjxpbWcgc3JjPSdodHRwczovL21heGNkbi5pY29uczguY29tL0NvbG9yL1BORy80OC9Mb2dvcy94Ym94LTQ4LnBuZycgLz5cIjtcbiAgICAgICAgICAgICAgICBicmVhaztcbiAgICAgICAgICAgIGNhc2UgXCJOSU5URU5ET1wiOlxuICAgICAgICAgICAgICAgIHJldHVybiBcIjxpbWcgc3JjPSdodHRwczovL21heGNkbi5pY29uczguY29tL0NvbG9yL1BORy80OC9HYW1pbmcvbmludGVuZG8tNDgucG5nJyAvPlwiO1xuICAgICAgICAgICAgICAgIGJyZWFrO1xuICAgICAgICAgICAgZGVmYXVsdDpcbiAgICAgICAgICAgICAgICByZXR1cm4gcGxhdGZvcm1uYWFtO1xuICAgICAgICB9XG4gICAgfVxuXG4gICAgLy8gRXhlY3V0ZSB0aGUgZXZlbnQgd2hlbiAnc29tZXRoaW5nJyBoYXBwZW5zICh3aGVuIGEgYnV0dG9uIGlzIGNsaWNrZWQgZm9yIGV4YW1wbGUpXG4gICAgZnVuY3Rpb24gc2V0QWN0aW9uTGlzdGVuZXIoYWN0aW9uKVxuICAgIHtcbiAgICAgICAgJChkb2N1bWVudCkucmVhZHkoYWN0aW9uKTsgLy8gaWYgJ2RvY3VtZW50IHJlYWR5JyBwZXJmb3JtIFwiYWN0aW9uXCJcbiAgICB9XG5cbiAgICBmdW5jdGlvbiBzZXRGaWx0ZXJMaXN0ZW5lcihhY3Rpb24pXG4gICAge1xuICAgICAgICAgLy8gSGllciBoZXQgZm9ybXVsaWVyIHZlcnN0dXJlbiBhbHMgd2Ugb3AgZWVuIGNoZWNrYm94IGRydWtrZW5cbiAgICAgICAgJChcIiNjb21wb25lbnRcIikub24oXCJjaGFuZ2VcIiwgXCJpbnB1dFt0eXBlPWNoZWNrYm94XVwiLCBmdW5jdGlvbihldmVudCkge1xuICAgICAgICAgICAgJChcIiNwcm9kdWN0X2ZpbHRlclwiKS5zdWJtaXQoKTtcbiAgICAgICAgfSk7XG5cbiAgICAgICAgJChcIiNjb21wb25lbnRcIikub24oXCJzdWJtaXRcIiwgXCIjcHJvZHVjdF9maWx0ZXJcIiwgYWN0aW9uKTtcbiAgICB9XG5cbiAgICAvLyBSZXR1cm4gdGhlIG1ldGhvZHMgdGhhdCBjYW4gYmUgdXNlZCBieSBvdGhlciBwcm9ncmFtcyAodGhlIGNvbnRyb2xsZXIgaW4gdGhpcyBjYXNlKVxuICAgIHJldHVybiB7XG4gICAgICAgIHNldFZpZXc6IHNldFZpZXcsXG4gICAgICAgIGxvYWRQcm9kdWN0czogbG9hZFByb2R1Y3RzLFxuICAgICAgICBzZXRBY3Rpb25MaXN0ZW5lcjogc2V0QWN0aW9uTGlzdGVuZXIsXG4gICAgICAgIHNldEZpbHRlckxpc3RlbmVyOiBzZXRGaWx0ZXJMaXN0ZW5lclxuICAgIH1cbn07IiwidmFyIFByb2R1Y3RWaWV3SGVscGVyID0gZnVuY3Rpb24oKVxue1xuICAgIC8vIENoYW5nZSB0aGUgdmlldyBvZiB0aGUgcGFnZVxuICAgIGZ1bmN0aW9uIHNldFZpZXcodmlld0RhdGEpXG4gICAge1xuICAgICAgICAvLyQoXCIjY29tcG9uZW50XCIpLmh0bWwoJzxkaXYgY2xhc3M9XCJjb2wtMTJcIj48ZGl2IGNsYXNzPVwiY29sLTNcIiBpZD1cImZpbHRlcnNcIj48L2Rpdj48ZGl2IGNsYXNzPVwiY29sLTlcIiBpZD1cInByb2R1Y3RzXCI+PC9kaXY+PC9kaXY+Jyk7XG5cbiAgICAgICAgbG9hZFByb2R1Y3Qodmlld0RhdGEpO1xuICAgIH1cbi8qXG4gICAgLy8gRXhlY3V0ZSB0aGUgZXZlbnQgd2hlbiAnc29tZXRoaW5nJyBoYXBwZW5zICh3aGVuIGEgYnV0dG9uIGlzIGNsaWNrZWQgZm9yIGV4YW1wbGUpXG4gICAgZnVuY3Rpb24gc2V0QWN0aW9uTGlzdGVuZXIoYWN0aW9uKVxuICAgIHtcbiAgICAgICAgLy8gdXNlciBmaWxscyBpbiBsb2dpbiBmb3JtXG4gICAgICAgIC8vIHVzZXIgcHJlc3NlcyAnbG9naW4nXG5cbiAgICAgICAgLy8gaWYgdXNlciBwcmVzc2VzICdsb2dpbicsIHBlcmZvcm0gYWN0aW9uIChtYWtlIGNvbnRyb2xsZXIgc2VuZCBlbWFpbCBhbmQgcGFzc3dvcmQgdG8gQVBJKVxuICAgICAgICAkKFwiI2NvbXBvbmVudFwiKS5vbihcInN1Ym1pdFwiLCBcIiNsb2dpbmZvcm1cIiwgYWN0aW9uKTtcbiAgICB9XG4qL1xuICAgIGZ1bmN0aW9uIGxvYWRQcm9kdWN0KHByb2R1Y3QpXG4gICAge1xuICAgICAgICAkKFwiI2NvbXBvbmVudFwiKS5sb2FkKCcvdmlld3Mvc2luZ2xlX3Byb2R1Y3Qvc2luZ2xlX3Byb2R1Y3QuaHRtbCcsIGZ1bmN0aW9uICgpIHtcblxuICAgICAgICAgICAgICAgICQoXCIuc2luZ2xlcHJvZHVjdF9faW1hZ2UgaW1nXCIpLmF0dHIoXCJzcmNcIiwgcHJvZHVjdC5pbWFnZSk7XG4gICAgICAgICAgICAgICAgJChcIi5zaW5nbGVwcm9kdWN0X190aXRsZVwiKS5odG1sKHByb2R1Y3QudGl0bGUpO1xuICAgICAgICAgICAgICAgICQoXCIuc2luZ2xlcHJvZHVjdF9fcHJpY2VcIikuaHRtbChcIuKCrCBcIiArIHByb2R1Y3QucHJpY2UpO1xuICAgICAgICAgICAgICAgIC8vbGkgdm9vciBsaXN0XG4gICAgICAgICAgICAgICAgJChcIi5saXByb2R1Y3RfX2VhblwiKS5hcHBlbmQocHJvZHVjdC5lYW5fbnVtYmVyKTtcbiAgICAgICAgICAgICAgICAkKFwiLmxpcHJvZHVjdF9fcGxhdGZvcm1cIikuYXBwZW5kKHByb2R1Y3QucGxhdGZvcm0pO1xuICAgICAgICAgICAgICAgIHZhciBkID0gbmV3IERhdGUocHJvZHVjdC5yZWxlYXNlX2RhdGUpO1xuXG4gICAgICAgICAgICAgICAgdmFyIG1vbnRocyA9IFtcImphbnVhcmlcIiwgXCJmZWJydWFyaVwiLCBcIm1hYXJ0XCIsIFwiYXByaWxcIiwgXCJtZWlcIiwgXCJqdW5pXCIsIFwianVsaVwiLCBcImF1Z3VzdHVzXCIsIFwic2VwdGVtYmVyXCIsIFwib2t0b2JlclwiLCBcIm5vdmVtYmVyXCIsIFwiZGVjZW1iZXJcIl07XG5cbiAgICAgICAgICAgICAgICAkKFwiLmxpcHJvZHVjdF9fcmVsZWFzZWRhdGVcIikuYXBwZW5kKGQuZ2V0RGF5KCkgKyBcIiBcIiArIG1vbnRoc1tkLmdldE1vbnRoKCldICsgXCIgXCIgKyBkLmdldEZ1bGxZZWFyKCkpO1xuICAgICAgICAgICAgICAgICQoXCIubGlwcm9kdWN0X19wZWdpXCIpLmFwcGVuZChwcm9kdWN0LnBlZ2lfYWdlKTtcbiAgICAgICAgICAgICAgICAkKFwiLmxpcHJvZHVjdF9fcHVibGlzaGVyXCIpLmFwcGVuZChwcm9kdWN0LnB1Ymxpc2hlcik7XG4gICAgICAgICAgICAgICAgJChcIi5saXByb2R1Y3RfX3RpdGxlXCIpLmFwcGVuZChwcm9kdWN0LnRpdGxlKTtcbiAgICAgICAgICAgICAgICAkKFwiLmxpcHJvZHVjdF9fc3VidGl0bGVcIikuYXBwZW5kKHByb2R1Y3Quc3VidGl0bGUpO1xuICAgICAgICAgICAgICAgICQoXCIubGlwcm9kdWN0X19nZW5yZVwiKS5hcHBlbmQocHJvZHVjdC5nZW5yZSk7XG4gICAgICAgICAgICAgICAgJChcIi5saXByb2R1Y3RfX2ZyYW5jaGlzZVwiKS5hcHBlbmQocHJvZHVjdC5mcmFuY2hpc2UpO1xuXG4gICAgICAgICAgICAgICAgJChcIi5zaW5nbGVwcm9kdWN0X19kZXNjclwiKS5odG1sKHByb2R1Y3QuZGVzY3JpcHRpb24pO1xuXG5cbiAgICAgICAgICAgICAgICAvKlxuICAgICAgICAgICAgICAgICQocHJvZCkuZmluZChcIi5wcm9kdWN0X19wcmljZVwiKS5odG1sKHByb2R1Y3QucHJpY2UpO1xuICAgICAgICAgICAgICAgICQocHJvZCkuZmluZChcIi5wcm9kdWN0X19pbWFnZSBpbWdcIikuYXR0cihcInNyY1wiLCBwcm9kdWN0LmltYWdlKTtcblxuXG5cblxuXG5cbiAgICAgICAgICAgICAgICAvLyBDbG9uZSBwcm9kdWN0XG4gICAgICAgICAgICAgICAgdmFyIHByb2QgPSAkKCc8ZGl2PicpLmFwcGVuZCgkKCcjcHJvZHVjdF9fbGlzdF9faXRlbScpLmNsb25lKCkpO1xuICAgICAgICAgICAgICAgIFxuICAgICAgICAgICAgICAgIC8vIEFkZCBwcm9kdWN0IGluZm9cbiAgICAgICAgICAgICAgICAkKHByb2QpLmZpbmQoXCIucHJvZHVjdF9fdGl0bGVcIikuaHRtbChwcm9kdWN0LnRpdGxlKTtcbiAgICAgICAgICAgICAgICAkKHByb2QpLmZpbmQoXCIucHJvZHVjdF9fcHJpY2VcIikuaHRtbCh2YWx1ZS5wcmljZSk7XG4gICAgICAgICAgICAgICAgJChwcm9kKS5maW5kKFwiLnByb2R1Y3RfX2ltYWdlIGltZ1wiKS5hdHRyKFwic3JjXCIsIHZhbHVlLmltYWdlKTtcbiAgICAgICAgICAgICAgICBcbiAgICAgICAgICAgICAgICAvLyBEZXRlcm1pbiB3aGF0IHdlIGhhdmUgdG8gZG8gd2l0aCB0aGUgcm93c1xuICAgICAgICAgICAgICAgIGlmIChrZXkgJSA0ID09IDAgJiYga2V5ID09IDApXG4gICAgICAgICAgICAgICAge1xuICAgICAgICAgICAgICAgICAgICAkKFwiI3Byb2R1Y3RfX2xpc3RcIikuYXBwZW5kKFwiPGRpdiBjbGFzcz0ncm93Jz5cIiArIHByb2QuaHRtbCgpKTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgZWxzZSBpZiAoa2V5ICUgNCA9PSAwKVxuICAgICAgICAgICAgICAgIHtcbiAgICAgICAgICAgICAgICAgICAgJChcIiNwcm9kdWN0X19saXN0XCIpLmFwcGVuZChcIjwvZGl2PjxkaXYgY2xhc3M9J3Jvdyc+XCIgKyBwcm9kLmh0bWwoKSk7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIGVsc2VcbiAgICAgICAgICAgICAgICB7XG4gICAgICAgICAgICAgICAgICAgICQoXCIjcHJvZHVjdF9fbGlzdCBkaXYucm93XCIpLmxhc3QoKS5hcHBlbmQocHJvZC5odG1sKCkpO1xuICAgICAgICAgICAgICAgIH1cblxuICAgICAgICAgICAgLy8gQ2xvc2UgdGhlIGxhc3Qgcm93XG4gICAgICAgICAgICAkKFwiPC9kaXY+XCIpLmFwcGVuZFRvKFwiI3Byb2R1Y3RfX2xpc3RcIik7XG5cbiAgICAgICAgICAgIC8vIFJlbW92ZSB0aGUgZmlyc3QgbGlzdCBpdGVtLCBiZWNhdXNlIHRoaXMgaXRlbSBpcyBhbHdheXMgZW1wdHlcbiAgICAgICAgICAgICQoXCIjcHJvZHVjdF9fbGlzdF9faXRlbVwiKS5maXJzdCgpLnJlbW92ZSgpOyovXG4gICAgICAgIH0pO1xuICAgIH1cblxuXG4gICAgLy8gUmV0dXJuIHRoZSBtZXRob2RzIHRoYXQgY2FuIGJlIHVzZWQgYnkgb3RoZXIgcHJvZ3JhbXMgKHRoZSBjb250cm9sbGVyIGluIHRoaXMgY2FzZSlcbiAgICByZXR1cm4ge1xuICAgICAgICBzZXRWaWV3OiBzZXRWaWV3LFxuICAgICAgICBsb2FkUHJvZHVjdCA6IGxvYWRQcm9kdWN0XG4gICAgfVxufTsiLCJ2YXIgUmVnaXN0ZXJWaWV3SGVscGVyID0gZnVuY3Rpb24oKVxue1xuICAgIC8vIENoYW5nZSB0aGUgdmlldyBvZiB0aGUgcGFnZVxuICAgIGZ1bmN0aW9uIHNldFZpZXcodmlld1RvU2hvdylcbiAgICB7XG4gICAgICAgICQoXCIjY29tcG9uZW50XCIpLmxvYWQodmlld1RvU2hvdyk7XG4gICAgfVxuXG4gICAgLy8gRXhlY3V0ZSB0aGUgZXZlbnQgd2hlbiAnc29tZXRoaW5nJyBoYXBwZW5zICh3aGVuIGEgYnV0dG9uIGlzIGNsaWNrZWQgZm9yIGV4YW1wbGUpXG4gICAgZnVuY3Rpb24gc2V0QWN0aW9uTGlzdGVuZXIoYWN0aW9uKVxuICAgIHtcbiAgICAgICAgLy8gdXNlciBmaWxscyBpbiByZWdpc3RlciBmb3JtXG4gICAgICAgIC8vIHVzZXIgcHJlc3NlcyAncmVnaXN0ZXInXG5cbiAgICAgICAgLy8gaWYgdXNlciBwcmVzc2VzICdyZWdpc3RlcicsIHBlcmZvcm0gYWN0aW9uXG4gICAgICAgICQoXCIjY29tcG9uZW50XCIpLm9uKFwic3VibWl0XCIsIFwiI3JlZ2lzdGVyZm9ybVwiLCBhY3Rpb24pO1xuICAgIH1cblxuICAgIC8vIFJldHVybiB0aGUgbWV0aG9kcyB0aGF0IGNhbiBiZSB1c2VkIGJ5IG90aGVyIHByb2dyYW1zICh0aGUgY29udHJvbGxlciBpbiB0aGlzIGNhc2UpXG4gICAgcmV0dXJuIHtcbiAgICAgICAgc2V0Vmlldzogc2V0VmlldyxcbiAgICAgICAgc2V0QWN0aW9uTGlzdGVuZXI6IHNldEFjdGlvbkxpc3RlbmVyXG4gICAgfVxufTsiXX0=

function CartHelper(){this.removeProduct=function(e){},this.addProduct=function(e){}}function CookieHelper(){this.getCookie=function(e){for(var t=document.cookie.split(";"),n=0;n<t.length;n++){var r=t[n].split("=");if(r[0].trim()==e)return r[1]}},this.createCookie=function(e,t){var n=new Date;n.setTime(n.getTime()+864e5);var r="expires="+n.toUTCString();document.cookie=e+"="+t+";"+r+";path=/"},this.deleteCookie=function(e){document.cookie=e+"=; expires=Thu, 01 Jan 1970 00:00:01 GMT;"}}function showLoadScreen(){$("#component").html('<div class="spinner"><div class="bounce1"></div><div class="bounce2"></div><div class="bounce3"></div> </div>')}function onLoadPage(){UserHelper.isCustomer()&&($("#inloggen_text").hide(),$("#uitloggen_text").show()),UserHelper.isAdmin()?$(".visible-admin").css("display","inline-block"):$(".visible-admin").hide()}function UserHelper(){this.isLogedIn=function(){var e=CookieHelper.getCookie("access_token");return void 0!=e&&""!=e},this.isCustomer=function(){if(UserHelper.isLogedIn()){var e=this.decodeToken().usertype;if("customer"==e||"admin"==e)return!0}return!1},this.isAdmin=function(){if(UserHelper.isLogedIn()){var e=this.decodeToken().usertype;if("admin"==e)return!0}return!1},this.decodeToken=function(){var e=CookieHelper.getCookie("access_token");if(void 0!=e&&""!=e){var t=e.split(".")[1];return JSON.parse(atob(t))}}}var Router=function(){function e(e,o){if(0!=t(e)){var i=n(e);switch(i[0]){case"":case"index.html":case"products":new ProductsController(new ProductsViewHelper,new ProductsModel).main();break;case"product":new ProductController(new ProductViewHelper,new ProductModel(i[1])).main();break;case"register":new RegisterController(new RegisterViewHelper,new RegisterModel).main();break;case"login":new LoginController(new LoginViewHelper,new LoginModel).main();break;case"logout":new LogoutController(new LogoutViewHelper,new LogoutModel).main();break;case"register":new RegisterController(new RegisterViewHelper,new RegisterModel).main();break;case"resetpassword":new ResetPasswordController(new ResetPasswordViewHelper,new ResetPasswordModel).main();break;case"admin":new AdminController(new AdminViewHelper,new AdminModel).main();break;case"admin_user":new AdminUserController(new AdminUserViewHelper,new AdminUserModel(i[1])).main();break;default:new ErrorController(new ErrorViewHelper).main()}0!=o&&(""==e&&(e="index.html"),r({},"A-Z Games",e),window.scrollTo(0,0))}}function t(e){return e.indexOf("http")==-1&&e.indexOf("https")==-1&&e.indexOf("www")==-1||(window.location=e,!1)}function n(e){return 0==e.indexOf("/")&&(e=e.substring(1)),null!=this.baseUrl&&e.indexOf(this.baseUrl)!=-1&&(e=e.substring(e.indexOf(this.baseUrl)+this.baseUrl.length)),e.split(/\/(.+)?/)}function r(e,t,n){window.history.pushState(e,t,n)}return baseUrl="project-webshop/",{route:e}};$(document).ready(function(){function e(e){$(e).toggleClass("sidebar--open"),$(".overlay").toggleClass("overlay--visible"),$("body").toggleClass("sidebar--open")}$(".sidebar-toggle").click(function(t){t.preventDefault();var n=$(this).data("sidebar");e($("#"+n))}),$(".sidebar__close").click(function(t){e($(this).parent().parent())}),$(".overlay").click(function(t){e($(".sidebar"))})});var CookieHelper=new CookieHelper,UserHelper=new UserHelper;$.fn.serializeObject=function(){var e={},t=this.serializeArray();return $.each(t,function(){void 0!==e[this.name]?(e[this.name].push||(e[this.name]=[e[this.name]]),""!=this.value&&e[this.name].push(this.value)):""!=this.value&&(e[this.name]=this.value||"")}),e};var AdminModel=function(){function e(e){$.ajax({url:"http://localhost:8081/admin/users",type:"GET",dataType:"json",headers:{Authorization:"Bearer "+CookieHelper.getCookie("access_token")},success:function(t){e(t)},error:function(e,t,n){$("#component").load("/views/error/error.html")}})}return{getPage:e}},AdminUserModel=function(e){function t(t){$.ajax({url:"http://localhost:8081/admin/users/"+e,type:"GET",dataType:"json",headers:{Authorization:"Bearer "+CookieHelper.getCookie("access_token")},success:function(e){t(e)},error:function(e,t,n){$("#component").load("/views/error/error.html")}})}function n(t,n){$.ajax({url:"http://localhost:8081/admin/users/"+e,type:"PATCH",dataType:"json",contentType:"application/json; charset=utf-8",data:JSON.stringify(t),headers:{Authorization:"Bearer "+CookieHelper.getCookie("access_token")},success:function(e){n(e)},error:function(e,t,n){$("#component").load("/views/error/error.html")}})}function r(t){$.ajax({url:"http://localhost:8081/admin/users/"+e,type:"DELETE",dataType:"json",headers:{Authorization:"Bearer "+CookieHelper.getCookie("access_token")},success:function(e){t(e)},error:function(e,t,n){$("#component").load("/views/error/error.html")}})}return{getPage:t,saveUserInfo:n,deleteUser:r}},CartModel=function(){function e(e){var t=CookieHelper.getCookie("cart");void 0!=t&&e(JSON.parse(t))}function t(e,t){$.ajax({url:"https://api.az-games.nl/products/"+e,type:"get",contentType:"json",success:function(e){cart={ean_number:e[0].ean_number,title:e[0].title,price:e[0].price,image:e[0].image},t(cart);var n=CookieHelper.getCookie("cart");void 0==n?CookieHelper.createCookie("cart",JSON.stringify([cart])):(n=JSON.parse(n),n.push(cart),CookieHelper.createCookie("cart",JSON.stringify(n)))},error:function(e,t,n){$("#component").load("/views/error/error.html")}})}function n(e){for(cart=JSON.parse(CookieHelper.getCookie("cart")),i=0;i<cart.length;i++)if(cart[i].ean_number==e){cart.splice(i,1);break}CookieHelper.createCookie("cart",JSON.stringify(cart))}return{getCart:e,addProduct:t,removeProduct:n}},LoginModel=function(){function e(e,t,n){$.ajax({url:"https://api.az-games.nl/user/login",type:"GET",dataType:"json",headers:{Authorization:"Basic "+btoa(e+":"+t)},success:function(e){CookieHelper.createCookie("access_token",e.access_token),CookieHelper.createCookie("user_id",e.user_id),onLoadPage(),n(e)},error:function(e,t,n){$("#error_message").show()}})}return{login:e}},LogoutModel=function(){function e(e){function t(e){for(var t=document.cookie.split(";"),n=0;n<t.length;n++){var r=t[n].split("=");if(r[0].trim()==e)return r[1]}}$.ajax({url:"https://api.az-games.nl/user/logout",type:"post",dataType:"json",data:JSON.stringify({user_id:t("user_id")}),success:function(t){CookieHelper.deleteCookie("access_token"),CookieHelper.deleteCookie("user_id"),onLoadPage(),e(t)},error:function(e,t,n){$("#error_message").show()}})}return{logout:e}},PageModel=function(){function e(e){$.ajax({url:"https://api.az-games.nl/user",type:"get",dataType:"json",headers:{Authorization:"Bearer "+t("access_token")},success:function(t){e(t)},error:function(e,t,n){$("#component").load("/views/error/error.html")}})}function t(e){for(var t=document.cookie.split(";"),n=0;n<t.length;n++){var r=t[n].split("=");if(r[0]==e)return r[1]}}return{getPage:e}},ProductsModel=function(){function e(e,t){$.ajax({url:"https://api.az-games.nl/products?"+e,type:"get",dataType:"json",success:function(e){t(e)},error:function(e,t,n){$("#component").load("/views/error/error.html")}})}return{getPage:e}},RegisterModel=function(){function e(e,t){$.ajax({url:"https://api.az-games.nl/user/register",type:"post",dataType:"json",data:JSON.stringify({e_mail:e.e_mailadres,password:e.wachtwoord,first_name:e.voornaam,insertion:e.tussenvoegsel,surname:e.achternaam,gender:e.gender,date_of_birth:e.birth_date,phone_number:e.mobiel_nummer,secret_question:e.security_question,secret_question_answer:e.security_answer,postal_code:e.postcode,number:e.huisnummer,street_name:e.straatnaam,city:e.plaats}),success:function(e){t(e)},error:function(e,t,n){$("#regi_api_error_message").show()}})}return{register:e}},ResetPasswordModel=function(){function e(e,t){console.log(e),$.ajax({url:"https://api.az-games.nl/user/resetpassword",type:"post",dataType:"json",data:JSON.stringify({email:e.e_mailadres,secret_question_answer:e.security_answer,secret_question:e.security_question,new_password:e.wachtwoord,repeat_password:e.wachtwoord2}),success:function(e){t(e)},error:function(e,t,n){$("#reset_password_api_error_message").show()}})}return{resetpassword:e}},ProductModel=function(e){function t(t){$.ajax({url:"https://api.az-games.nl/products/"+e,type:"get",dataType:"json",success:function(e){t(e[0])},error:function(e,t,n){$("#component").load("/views/error/error.html")}})}return{GetProductInfo:t}},UserModel=function(e){function t(t){$.ajax({url:"https://api.az-games.nl/users/"+e,type:"get",dataType:"json",success:function(e){t(e[0])},error:function(e,t,n){$("#component").load("/error.html")}})}return{GetUserInfo:t}},AdminController=function(e,t){function n(){s.setActionListener(r)}function r(){i.getPage(o)}function o(e){s.setView(e)}var i=t,s=e;return{main:n}},AdminUserController=function(e,t){function n(){c.setActionListener(r)}function r(){a.getPage(o)}function o(t){c.setView(t),e.setSaveListener(i),e.setDeleteListener(s)}function i(){event.preventDefault();var e=$(this).serializeObject();a.saveUserInfo(e,function(e){alert("Gebruiker succesvol geÃ¼pdate.")})}function s(){a.deleteUser(function(){console.log("verwijderd?"),alert("Gebruiker succesvol gedelete.")})}var a=t,c=e;return{main:n}},CartController=function(e,t){function n(){s.getCart(function(e){a.setView(e)})}function r(e){s.addProduct(e,function(e){a.addItem(e)})}function o(e){s.removeProduct(e,function(e){})}function i(){a.setActionListener(n),a.setAddProductListener(r),a.setRemoveListener(o)}var s=t,a=e;return{main:i}},DeleteController=function(e,t){},ErrorController=function(e){function t(){n.setView()}var n=e;return{main:t}},LoginController=function(e,t){function n(e){e.preventDefault(),e.stopImmediatePropagation();var t={};$.each($(this).serializeArray(),function(e,n){t[n.name]=n.value}),o.login(t.email,t.password,function(e){$("#inloggen_text").hide(),$("#uitloggen_text").show(),new PageController(new PageViewHelper,new PageModel).main()})}function r(){i.setView(),i.setActionListener(n)}var o=t,i=e;return{main:r}},LogoutController=function(e,t){function n(e){o.logout(function(e){$("#inloggen_text").show(),$("#uitloggen_text").hide(),i.setView()})}function r(){i.setActionListener(n)}var o=t,i=e;return{main:r}},PageController=function(e,t){function n(e){o.getPage(function(e){i.setView(e)})}function r(){i.setActionListener(n)}var o=t,i=e;return{main:r}},ProductsController=function(e,t){function n(){i.getPage("",function(e){s.setView(e)})}function r(e){e.preventDefault();var t=$(this).serialize();i.getPage(t,function(e){s.loadProducts(e)})}function o(){s.setActionListener(n),s.setFilterListener(r)}var i=t,s=e;return{main:o}},RegisterController=function(e,t){function n(){console.log("in actionPerformed"),event.preventDefault(),$("#regi_api_error_message").hide(),$("#ww2_error_message").hide();var e={};$.each($(this).serializeArray(),function(t,n){e[n.name]=n.value}),e.birth_date=e.jaar+"-"+e.maand+"-"+e.dag,console.log(e);var t=!1,n=["voornaam","achternaam","postcode","huisnummer","e_mailadres","wachtwoord","wachtwoord2","security_answer"];$.each(n,function(e,t){$("#"+t).removeClass("invalid")}),$.each(n,function(n,r){""==e[r]&&($("#"+r).addClass("invalid"),t=!0)}),t&&(window.scrollTo(0,0),$("#register_error_message").show());var r=!1;return e.wachtwoord!=e.wachtwoord2&&(r=!0,$("#ww2_error_message").show(),$("#wachtwoord").addClass("invalid"),$("#wachtwoord2").addClass("invalid")),!t&&!r&&(console.log("continued"),void o.register(e,function(e){i.setView("/views/register/after_register.html")}))}function r(){i.setView("/views/register/register.html"),i.setActionListener(n)}var o=t,i=e;return{main:r}},ResetPasswordController=function(e,t){function n(){console.log("in actionPerformed"),event.preventDefault(),$("#reset_password_api_error_message").hide(),$("#ww2_error_message").hide();var e={};$.each($(this).serializeArray(),function(t,n){e[n.name]=n.value});var t=!1,n=["wachtwoord","wachtwoord2","e_mailadres","security_answer"];$.each(n,function(e,t){$("#"+t).removeClass("invalid")}),$.each(n,function(n,r){""==e[r]&&($("#"+r).addClass("invalid"),t=!0)}),t&&(window.scrollTo(0,0),$("#reset_error_message").show());var r=!1;return e.wachtwoord!=e.wachtwoord2&&(r=!0,$("#ww2_error_message").show(),$("#wachtwoord").addClass("invalid"),$("#wachtwoord2").addClass("invalid")),!t&&!r&&(console.log("continued"),void o.resetpassword(e,function(e){i.setView("views/resetpassword/after_reset.html")}))}function r(){i.setView("views/resetpassword/resetpassword.html"),i.setActionListener(n)}var o=t,i=e;return{main:r}},ProductController=function(e,t){function n(t){e.setView(t)}function r(){t.GetProductInfo(n)}return{main:r,showView:n}},AdminViewHelper=function(){function e(e){$(document).ready(e)}function t(e){document.title="Admin - AZ Games",$("#component").load("/views/admin/admin.html",function(){$.each(e,function(e,t){var n=$("#single_user").clone();$(n).find(".user__firstname").html(t.first_name),$(n).find(".user__firstname").attr("href","/admin_user/"+t.user_id),$(n).find(".user__insertion").html(t.insertion),$(n).find(".user__lastname").html(t.surname),$(n).find(".user__email").html(t.email),$(n).find(".user__phonenumber").html(t.phone_number),$("#users_body").append(n)}),$("#single_user").first().remove()})}return{setActionListener:e,setView:t}},AdminUserViewHelper=function(){function e(e){$(document).ready(e)}function t(e){$("#component").load("/views/adminuser/adminuser.html",function(){$.each(e,function(e,t){$("#title").append(t.first_name+" "+t.insertion+" "+t.surname),$("#first_name").val(t.first_name),$("#insertion").val(t.insertion),$("#surname").val(t.surname),$("#user_type").val(t.user_type),$("#email").val(t.email),$("#password").attr("placeholder","Vul hier iets in om het wachtwoord te veranderen"),$("#gender").val(t.gender),$("#date_of_birth").val(t.date_of_birth),$("#phone_number").val(t.phone_number),$("#is_active").val(t.is_active)})})}function n(e){$("#component").on("submit","#userform",e)}function r(e){$("#component").off().on("click","#delete_btn",e)}return{setActionListener:e,setView:t,setSaveListener:n,setDeleteListener:r}},CartViewHelper=function(){function e(e){""!=e&&e.forEach(function(e,t){n(e)})}function t(e){e=parseFloat(e)+parseFloat($(".cart__total .price").html().substr(1)),$(".cart__total .price").html("â¬"+parseFloat(e).toFixed(2))}function n(e){var n=$("<div>").html($(".sidebar__content__tmp").html());n.find(".cart__item__title").html(e.title),n.find(".cart__item__price").html("â¬"+e.price),n.find(".cart__item__image img").attr("src",e.image),n.find(".cart__item").attr("data-id",e.ean_number),$(".cart").append(n);var r=$(".cart_button .count").html();$(".cart_button .count").html(parseInt(r)+1),t(e.price)}function r(e){$(document).ready(e)}function o(e){$("body").on("click",".addtocart",function(t){t.preventDefault();var n=$(this).data("id");e(n)})}function i(e){$("body").on("click",".cart__item__remove",function(n){var r=$(this).parent(),o=$(this).parent().data("id");$(r).addClass("cart__item--removed"),$(r).on("animationend webkitAnimationEnd oAnimationEnd MSAnimationEnd",function(){$(this).remove()});var i=$(".cart_button .count").html();$(".cart_button .count").html(parseInt(i)-1),e(o),t(-$(r).find(".cart__item__price").html().substr(1))})}return{setView:e,addItem:n,updateTotalPrice:t,setActionListener:r,setAddProductListener:o,setRemoveListener:i}},ErrorViewHelper=function(){function e(){document.title="Oeps - AZ Games",$("#component").load("/views/error/error.html")}function t(e){$(document).ready(e)}return{setView:e,setActionListener:t}},LoginViewHelper=function(){function e(){document.title="Inloggen - AZ Games",$("#component").load("/views/login/login.html")}function t(e){$("#component").on("submit","#loginform",e)}return{setView:e,setActionListener:t}},LogoutViewHelper=function(){function e(){document.title="Uitloggen - AZ Games",$("#component").load("/views/logout/logout.html")}function t(e){$(document).ready(e)}return{setView:e,setActionListener:t}},PageViewHelper=function(){function e(e){document.title="Welkom - AZ Games",$("#component").load("/views/page/page.html",function(){"customer"==e[0].user_type&&$("#user-block").append("<h1>Je lees dit alleen als je een customer</h1>"),"admin"==e[0].user_type&&$("#user-block").append("<h1>Je lees dit alleen als je een administrator</h1>")})}function t(e){$(document).ready(e)}return{setView:e,setActionListener:t}},RegisterViewHelper=function(){function e(e){document.title="Registreren - AZ Games",$("#component").load(e)}function t(e){$("#component").on("submit","#registerform",e)}return{setView:e,setActionListener:t}},ProductsViewHelper=function(){function e(e){document.title="Producten - AZ Games",$("#component").html('<div class="col-12"><div class="col-3" id="filters"></div><div class="col-9" id="products"></div></div>'),$("#filters").load("/views/products/filters.html"),t(e)}function t(e){$("#products").load("/views/products/products.html",function(){$.each(e,function(e,t){var o=$("<div>").append($("#product__list__item").clone());$(o).find(".product__title").html(t.title),$(o).find(".product__subtitle").append(t.genre+" | PEGI "+t.pegi_age+" | "+r(t.platform)),$(o).find(".product__description").html(n(t.description)),$(o).find(".product__price").append("â¬ "+t.price),$(o).find("#buttons__info").attr("href","product/"+t.ean_number),$(o).find(".product__image img").attr("src",t.image),$(o).find(".addtocart").attr("data-id",t.ean_number),$("#product__list").append(o)}),$("#product__list__item").first().remove()})}function n(e){var t=50,n=e.split(" ");if(n.length>t){var r="";for(i=0;i<t;i++)r+=n[i]+" ";return r+"..."}return e}function r(e){switch(e=e.toUpperCase()){case"PS4":return"<img src='/resources/images/icons/ps.png' />";case"PC":return"<img src='/resources/images/icons/windows.png' />";case"XBOX":return"<img src='/resources/images/icons/xbox.png' />";case"NINTENDO":return"<img src='/resources/images/icons/nintendo.png' />";default:return e}}function o(e){$(document).ready(e)}function s(e){$("#component").off().on("change","input[type=checkbox]",function(e){$("#product_filter").submit()}),$("#component").on("change keyup","input[name=price-max], input[name=price-min]",function(e){null==$("#pricemin").val()?$("#pricemin").val(0):$("#product_filter").submit()}),$("#component").on("submit","#product_filter",e)}return{setView:e,loadProducts:t,setActionListener:o,setFilterListener:s}},ResetPasswordViewHelper=function(){function e(e){document.title="Inloggen - AZ Games",$("#component").load(e)}function t(e){$("#component").on("submit","#resetform",e)}return{setView:e,setActionListener:t}},ProductViewHelper=function(){function e(e){document.title=e.title+" - AZ Games",$("#component").load("/views/single_product/single_product.html",function(){$(".singleproduct__image img").attr("src",e.image),$(".singleproduct__title").html(e.title),$(".singleproduct__price").html("â¬ "+e.price),$(".singleproduct__ean").append(e.ean_number),$(".singleproduct__platform").append(e.platform),$(".singleproduct__publisher").append(e.publisher),$(".singleproduct__pegi").append(e.pegi_age),$(".singleproduct__genre").append(e.genre),$(".singleproduct__descr").html(e.description),$(".addtocart").attr("data-id",e.ean_number);var t=new Date(e.release_date),n=["januari","februari","maart","april","mei","juni","juli","augustus","september","oktober","november","december"];$(".singleproduct__releasedate").append(t.getDay()+" "+n[t.getMonth()]+" "+t.getFullYear())})}function t(e){$(document).ready(e)}return{setView:e,setActionListener:t}};
//# sourceMappingURL=data:application/json;charset=utf8;base64,

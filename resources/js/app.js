var Router=function(){function e(e,r){if(0!=t(e)){var i=n(e);switch(i[0]){case"":case"index.html":case"products":new ProductsController(new ProductsViewHelper,new ProductsModel).main();break;case"product":new ProductController(new ProductViewHelper,new ProductModel(i[1])).main();break;case"login":new LoginController(new LoginViewHelper,new LoginModel).main();break;case"logout":new LogoutController(new LogoutViewHelper,new LogoutModel).main();break;case"register":new RegisterController(new RegisterViewHelper,new RegisterModel).main();break;case"resetpassword":new ResetPasswordController(new ResetPasswordViewHelper,new ResetPasswordModel).main();break;default:new ErrorController(new ErrorViewHelper).main()}0!=r&&(""==e&&(e="index.html"),o({},"A-Z Games",e))}}function t(e){return e.indexOf("http")==-1&&e.indexOf("https")==-1&&e.indexOf("www")==-1||(window.location=e,!1)}function n(e){return 0==e.indexOf("/")&&(e=e.substring(1)),null!=this.baseUrl&&e.indexOf(this.baseUrl)!=-1&&(e=e.substring(e.indexOf(this.baseUrl)+this.baseUrl.length)),e.split(/\/(.+)?/)}function o(e,t,n){window.history.pushState(e,t,n)}return baseUrl="project-webshop/",{route:e}},LoginModel=function(){function e(e,t,n){$.ajax({url:"http:///84.84.245.29:243/user/login",type:"post",dataType:"json",data:JSON.stringify({email:e,password:t}),success:function(e){document.cookie="access_token="+e.access_token,document.cookie="user_id="+e.user_id,n(e)},error:function(e,t,n){$("#error_message").show()}})}return{login:e}},LogoutModel=function(){function e(e){function t(e){for(var t=document.cookie.split(";"),n=0;n<t.length;n++){var o=t[n].split("=");if(o[0].trim()==e)return o[1]}}$.ajax({url:"http://84.84.245.29:243/user/logout",type:"post",dataType:"json",data:JSON.stringify({user_id:t("user_id")}),success:function(t){document.cookie="access_token=",document.cookie="user_id=",e(t)},error:function(e,t,n){$("#error_message").show()}})}return{logout:e}},ProductsModel=function(){function e(e,t){$.ajax({url:"http://84.84.245.29:243/products?"+e,type:"get",dataType:"json",success:function(e){t(e)},error:function(e,t,n){$("#component").load("views/error/error.html")}})}return{getPage:e}},RegisterModel=function(){function e(e,t,n,o,r,i,s,c,u,a,l,d,p,f,w,m,g){$.ajax({url:"http://84.84.245.29:243/user/register",type:"post",dataType:"json",data:JSON.stringify({gender:e,first_name:t,prefix:n,surname:o,date_of_birth:r,street:i,number:s,postal_code:c,city:u,mobile_number:a,phone_number:l,email:d,password:p,repeat_password:f,security_question:w,security_question_answer:m}),success:function(e){g(e),console.log(e)},error:function(e,t,n){$("#error_message").show()}})}return{register:e}},ResetPasswordModel=function(){function e(e,t,n,o,r){$.ajax({url:"http://84.84.245.29:243/resetpassword",type:"get",dataType:"json",data:JSON.stringify({new_password:e,email:t,security_question:n,security_question_answer:o}),success:function(e){r(e)},error:function(e,t,n){$("#component").load("views/error/error.html")}})}return{resetpassword:e}},ErrorController=function(e){function t(){n.setView()}var n=e;return{main:t}},LoginController=function(e,t){function n(e){e.preventDefault();var t={};$.each($(this).serializeArray(),function(e,n){t[n.name]=n.value}),r.login(t.email,t.password,function(e){$("#inloggen_text").hide(),$("#uitloggen_text").show(),new PageController(new PageViewHelper,new PageModel).main()})}function o(){i.setView(),i.setActionListener(n)}var r=t,i=e;return{main:o}},LogoutController=function(e,t){function n(e){r.logout(function(e){$("#inloggen_text").show(),$("#uitloggen_text").hide(),i.setView()})}function o(){i.setActionListener(n)}var r=t,i=e;return{main:o}},PageController=function(e,t){function n(e){r.getPage(function(e){i.setView(e)})}function o(){i.setActionListener(n)}var r=t,i=e;return{main:o}},ProductsController=function(e,t){function n(){i.getPage("",function(e){s.setView(e)})}function o(e){e.preventDefault();var t=$(this).serialize();i.getPage(t,function(e){s.loadProducts(e)})}function r(){s.setActionListener(n),s.setFilterListener(o)}var i=t,s=e;return{main:r}},RegisterController=function(e,t){function n(){var e=$("#gender_select option:selected").text(),t=$("#voornaam").val(),n=$("#tussenvoegsel_optioneel").val(),o=$("#achternaam").val(),i=new Date($("#jaar_select option:selected").val(),$("#maand_select option:selected").val(),$("#dag_select option:selected").val()),s=$("#straat").text(),c=$("#nummer").text(),u=$("#postcode").text(),a=$("#plaats").text(),l=$("#mobiel_nummer_optioneel").val(),d=$("#telefoon_optioneel").val(),p=$("#e-mailadres").val(),f=$("#wachtwoord").val(),w=$("#herhaalwachtwoord").val(),m=$("#security_question_select option:selected").text(),g=$("#questionanswer").val();r.register(e,t,n,o,i,s,c,u,a,l,d,p,f,w,m,g,function(e){})}function o(){i.setView(),i.setActionListener(n)}var r=t,i=e;return{main:o}},ResetPasswordController=function(e,t){function n(){var e=$("#wachtwoord").val(),t=$("#e-mailadres").val(),n=$("#security_question_select option:selected").text(),o=$("#questionanswer").text();r.resetpassword(e,t,n,o,function(e){})}function o(){i.setView(),i.setActionListener(n)}var r=t,i=e;return{main:o}},ErrorViewHelper=function(){function e(){$("#component").load("views/error/error.html")}function t(e){$(document).ready(e)}return{setView:e,setActionListener:t}},LoginViewHelper=function(){function e(){$("#component").load("views/login/login.html")}function t(e){$("#component").on("submit","#loginform",e)}return{setView:e,setActionListener:t}},PageViewHelper=function(){function e(e){$("#component").load("views/page/page.html",function(){"customer"==e[0].user_type&&$("#user-block").append("<h1>Je lees dit alleen als je een customer bent"),"admin"==e[0].user_type&&$("#user-block").append("<h1>Je lees dit alleen als je een administrator bent")})}function t(e){$(document).ready(e)}return{setView:e,setActionListener:t}},LogoutViewHelper=function(){function e(){$("#component").load("views/logout/logout.html")}function t(e){$(document).ready(e)}return{setView:e,setActionListener:t}},ProductsViewHelper=function(){function e(e){$("#component").html('<div class="col-12"><div class="col-3" id="filters"></div><div class="col-9" id="products"></div></div>'),$("#filters").load("views/products/filters.html"),t(e)}function t(e){$("#products").load("views/products/products.html",function(){$.each(e,function(e,t){var n=$("<div>").append($("#product__list__item").clone());$(n).find(".product__title").html(t.title),$(n).find(".product__price").html(t.price),$(n).find(".product__image img").attr("src",t.image),e%4==0&&0==e?$("#product__list").append("<div class='row'>"+n.html()):e%4==0?$("#product__list").append("</div><div class='row'>"+n.html()):$("#product__list div.row").last().append(n.html())}),$("</div>").appendTo("#product__list"),$("#product__list__item").first().remove()})}function n(e){$(document).ready(e)}function o(e){$("#component").on("change","input[type=checkbox]",function(e){$("#product_filter").submit()}),$("#component").on("submit","#product_filter",e)}return{setView:e,loadProducts:t,setActionListener:n,setFilterListener:o}},RegisterViewHelper=function(){function e(){$("#component").load("views/register/register.html")}function t(e){$("#component").on("click","#registerbutton",e)}return{setView:e,setActionListener:t}},ResetPasswordViewHelper=function(){function e(e){$("#component").load("views/resetpassword/resetpassword.html")}function t(e){$("#component").on("submit","#resetform",e)}return{setView:e,setActionListener:t}};
//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInJvdXRlci5qcyIsImxvZ2luX21vZGVsLmpzIiwibG9nb3V0X21vZGVsLmpzIiwicHJvZHVjdHNfbW9kZWwuanMiLCJyZWdpc3Rlcl9tb2RlbC5qcyIsInJlc2V0cGFzc3dvcmRfbW9kZWwuanMiLCJlcnJvcl9jb250cm9sbGVyLmpzIiwibG9naW5fY29udHJvbGxlci5qcyIsImxvZ291dF9jb250cm9sbGVyLmpzIiwicGFnZV9jb250cm9sbGVyLmpzIiwicHJvZHVjdHNfY29udHJvbGxlci5qcyIsInJlZ2lzdGVyX2NvbnRyb2xsZXIuanMiLCJyZXNldHBhc3N3b3JkX2NvbnRyb2xsZXIuanMiLCJlcnJvci9lcnJvcl92aWV3LmpzIiwibG9naW4vbG9naW5fdmlldy5qcyIsInBhZ2UvcGFnZV92aWV3LmpzIiwibG9nb3V0L2xvZ291dF92aWV3LmpzIiwicHJvZHVjdHMvcHJvZHVjdHNfdmlldy5qcyIsInJlZ2lzdGVyL3JlZ2lzdGVyX3ZpZXcuanMiLCJyZXNldHBhc3N3b3JkL3Jlc2V0cGFzc3dvcmRfdmlldy5qcyJdLCJuYW1lcyI6WyJSb3V0ZXIiLCJyb3V0ZSIsInVybCIsImhpc3RvcnkiLCJpc0ludGVybmFsIiwicGFydGljbGVzIiwiZ2V0UGFydGljbGVzIiwiUHJvZHVjdHNDb250cm9sbGVyIiwiUHJvZHVjdHNWaWV3SGVscGVyIiwiUHJvZHVjdHNNb2RlbCIsIm1haW4iLCJQcm9kdWN0Q29udHJvbGxlciIsIlByb2R1Y3RWaWV3SGVscGVyIiwiUHJvZHVjdE1vZGVsIiwiTG9naW5Db250cm9sbGVyIiwiTG9naW5WaWV3SGVscGVyIiwiTG9naW5Nb2RlbCIsIkxvZ291dENvbnRyb2xsZXIiLCJMb2dvdXRWaWV3SGVscGVyIiwiTG9nb3V0TW9kZWwiLCJSZWdpc3RlckNvbnRyb2xsZXIiLCJSZWdpc3RlclZpZXdIZWxwZXIiLCJSZWdpc3Rlck1vZGVsIiwiUmVzZXRQYXNzd29yZENvbnRyb2xsZXIiLCJSZXNldFBhc3N3b3JkVmlld0hlbHBlciIsIlJlc2V0UGFzc3dvcmRNb2RlbCIsIkVycm9yQ29udHJvbGxlciIsIkVycm9yVmlld0hlbHBlciIsIndyaXRlSGlzdG9yeSIsImluZGV4T2YiLCJ3aW5kb3ciLCJsb2NhdGlvbiIsInN1YnN0cmluZyIsInRoaXMiLCJiYXNlVXJsIiwibGVuZ3RoIiwic3BsaXQiLCJvYmplY3QiLCJ0aXRsZSIsInB1c2hTdGF0ZSIsImxvZ2luIiwiZW1haWwiLCJwYXNzd29yZCIsImNhbGxiYWNrIiwiJCIsImFqYXgiLCJ0eXBlIiwiZGF0YVR5cGUiLCJkYXRhIiwiSlNPTiIsInN0cmluZ2lmeSIsInN1Y2Nlc3MiLCJkb2N1bWVudCIsImNvb2tpZSIsImFjY2Vzc190b2tlbiIsInVzZXJfaWQiLCJlcnJvciIsInhociIsInN0YXR1cyIsInNob3ciLCJsb2dvdXQiLCJnZXRDb29raWUiLCJuYW1lIiwiY29va2llcyIsImkiLCJ0cmltIiwiZ2V0UGFnZSIsImZpbHRlciIsImxvYWQiLCJyZWdpc3RlciIsImdlbmRlciIsImZpcnN0X25hbWUiLCJwcmVmaXgiLCJzdXJuYW1lIiwiZGF0ZV9vZl9iaXJ0aCIsInN0cmVldCIsIm51bWJlciIsInBvc3RhbF9jb2RlIiwiY2l0eSIsIm1vYmlsZV9udW1iZXIiLCJwaG9uZV9udW1iZXIiLCJyZXBlYXRfcGFzc3dvcmQiLCJzZWN1cml0eV9xdWVzdGlvbiIsInNlY3VyaXR5X3F1ZXN0aW9uX2Fuc3dlciIsImNvbnNvbGUiLCJsb2ciLCJyZXNldHBhc3N3b3JkIiwibmV3X3Bhc3N3b3JkIiwidmlld0hlbHBlciIsIlZpZXdIZWxwZXIiLCJzZXRWaWV3IiwibW9kZWwiLCJhY3Rpb25QZXJmb3JtZWQiLCJldmVudCIsInByZXZlbnREZWZhdWx0IiwiZm9ybURhdGEiLCJlYWNoIiwic2VyaWFsaXplQXJyYXkiLCJmaWVsZCIsInZhbHVlIiwiTW9kZWwiLCJoaWRlIiwiUGFnZUNvbnRyb2xsZXIiLCJQYWdlVmlld0hlbHBlciIsIlBhZ2VNb2RlbCIsInNldEFjdGlvbkxpc3RlbmVyIiwiVmlldyIsImZpbHRlclByb2R1Y3RzIiwiZmlsdGVycyIsInNlcmlhbGl6ZSIsImxvYWRQcm9kdWN0cyIsInNldEZpbHRlckxpc3RlbmVyIiwidGV4dCIsInZhbCIsIkRhdGUiLCJldmVudEhhbmRsZXIiLCJyZWFkeSIsImFjdGlvbiIsIm9uIiwidmlld0RhdGEiLCJ1c2VyX3R5cGUiLCJhcHBlbmQiLCJodG1sIiwia2V5IiwicHJvZHVjdCIsImNsb25lIiwiZmluZCIsInByaWNlIiwiYXR0ciIsImltYWdlIiwibGFzdCIsImFwcGVuZFRvIiwiZmlyc3QiLCJyZW1vdmUiLCJzdWJtaXQiXSwibWFwcGluZ3MiOiJBQUFBLEdBQUFBLFFBQUEsV0FJQSxRQUFBQyxHQUFBQyxFQUFBQyxHQUVBLEdBQUEsR0FBQUMsRUFBQUYsR0FBQSxDQUtBLEdBQUFHLEdBQUFDLEVBQUFKLEVBRUEsUUFBQUcsRUFBQSxJQUVBLElBQUEsR0FDQSxJQUFBLGFBQ0EsSUFBQSxXQUNBLEdBQUFFLG9CQUFBLEdBQUFDLG9CQUFBLEdBQUFDLGdCQUFBQyxNQUNBLE1BQ0EsS0FBQSxVQUNBLEdBQUFDLG1CQUFBLEdBQUFDLG1CQUFBLEdBQUFDLGNBQUFSLEVBQUEsS0FBQUssTUFDQSxNQUNBLEtBQUEsUUFDQSxHQUFBSSxpQkFBQSxHQUFBQyxpQkFBQSxHQUFBQyxhQUFBTixNQUNBLE1BQ0EsS0FBQSxTQUNBLEdBQUFPLGtCQUFBLEdBQUFDLGtCQUFBLEdBQUFDLGNBQUFULE1BQ0EsTUFDQSxLQUFBLFdBQ0EsR0FBQVUsb0JBQUEsR0FBQUMsb0JBQUEsR0FBQUMsZ0JBQUFaLE1BQ0EsTUFDQSxLQUFBLGdCQUNBLEdBQUFhLHlCQUFBLEdBQUFDLHlCQUFBLEdBQUFDLHFCQUFBZixNQUNBLE1BQ0EsU0FDQSxHQUFBZ0IsaUJBQUEsR0FBQUMsa0JBQUFqQixPQUlBLEdBQUFQLElBRUEsSUFBQUQsSUFFQUEsRUFBQSxjQUdBMEIsS0FBQSxZQUFBMUIsS0FJQSxRQUFBRSxHQUFBRixHQUVBLE1BQUFBLEdBQUEyQixRQUFBLFVBQUEsR0FB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R0F2RixFQUFBLHdCQUFBd0YsUUFBQUMsV0FLQSxRQUFBNUIsR0FBQVksR0FFQXpFLEVBQUFRLFVBQUFnRSxNQUFBQyxHQUdBLFFBQUFOLEdBQUFNLEdBR0F6RSxFQUFBLGNBQUEwRSxHQUFBLFNBQUEsdUJBQUEsU0FBQXpCLEdBQ0FqRCxFQUFBLG1CQUFBMEYsV0FHQTFGLEVBQUEsY0FBQTBFLEdBQUEsU0FBQSxrQkFBQUQsR0FJQSxPQUNBM0IsUUFBQUEsRUFDQW9CLGFBQUFBLEVBQ0FMLGtCQUFBQSxFQUNBTSxrQkFBQUEsSUNuRUExRixtQkFBQSxXQUdBLFFBQUFxRSxLQUVBOUMsRUFBQSxjQUFBd0IsS0FBQSxnQ0FZQSxRQUFBcUMsR0FBQVksR0FNQXpFLEVBQUEsY0FBQTBFLEdBQUEsUUFBQSxrQkFBQUQsR0FJQSxPQUNBM0IsUUFBQUEsRUFDQWUsa0JBQUFBLElDN0JBakYsd0JBQUEsV0FHQSxRQUFBa0UsR0FBQTZCLEdBRUEzRSxFQUFBLGNBQUF3QixLQUFBLDBDQUlBLFFBQUFxQyxHQUFBVSxHQUdBdkUsRUFBQSxjQUFBMEUsR0FBQSxTQUFBLGFBQUFILEdBSUEsT0FDQXpCLFFBQUFBLEVBQ0FlLGtCQUFBQSIsImZpbGUiOiJhcHAuanMiLCJzb3VyY2VzQ29udGVudCI6WyJ2YXIgUm91dGVyID0gZnVuY3Rpb24gKClcclxue1xyXG4gICAgYmFzZVVybCA9IFwicHJvamVjdC13ZWJzaG9wL1wiO1xyXG5cclxuICAgIGZ1bmN0aW9uIHJvdXRlKHVybCwgaGlzdG9yeSlcclxuICAgIHtcclxuICAgICAgICBpZiAoaXNJbnRlcm5hbCh1cmwpID09IGZhbHNlKVxyXG4gICAgICAgIHtcclxuICAgICAgICAgICAgcmV0dXJuO1xyXG4gICAgICAgIH1cclxuXHJcbiAgICAgICAgdmFyIHBhcnRpY2xlcyA9IGdldFBhcnRpY2xlcyh1cmwpO1xyXG5cclxuICAgICAgICBzd2l0Y2gocGFydGljbGVzWzBdKVxyXG4gICAgICAgIHtcclxuICAgICAgICAgICAgY2FzZSBcIlwiOlxyXG4gICAgICAgICAgICBjYXNlIFwiaW5kZXguaHRtbFwiOlxyXG4gICAgICAgICAgICBjYXNlIFwicHJvZHVjdHNcIjpcclxuICAgICAgICAgICAgICAgIG5ldyBQcm9kdWN0c0NvbnRyb2xsZXIobmV3IFByb2R1Y3RzVmlld0hlbHBlcigpLCBuZXcgUHJvZHVjdHNNb2RlbCgpKS5tYWluKCk7XHJcbiAgICAgICAgICAgICAgICBicmVhaztcclxuICAgICAgICAgICAgY2FzZSBcInByb2R1Y3RcIjpcclxuICAgICAgICAgICAgICAgIG5ldyBQcm9kdWN0Q29udHJvbGxlcihuZXcgUHJvZHVjdFZpZXdIZWxwZXIoKSwgbmV3IFByb2R1Y3RNb2RlbChwYXJ0aWNsZXNbMV0pKS5tYWluKCk7XHJcbiAgICAgICAgICAgICAgICBicmVhaztcclxuICAgICAgICAgICAgY2FzZSBcImxvZ2luXCI6XHJcbiAgICAgICAgICAgICAgICBuZXcgTG9naW5Db250cm9sbGVyKG5ldyBMb2dpblZpZXdIZWxwZXIoKSwgbmV3IExvZ2luTW9kZWwoKSkubWFpbigpO1xyXG4gICAgICAgICAgICAgICAgYnJlYWs7XHJcbiAgICAgICAgICAgIGNhc2UgXCJsb2dvdXRcIjpcclxuICAgICAgICAgICAgICAgIG5ldyBMb2dvdXRDb250cm9sbGVyKG5ldyBMb2dvdXRWaWV3SGVscGVyKCksIG5ldyBMb2dvdXRNb2RlbCgpKS5tYWluKCk7XHJcbiAgICAgICAgICAgICAgICBicmVhaztcclxuICAgICAgICAgICAgY2FzZSBcInJlZ2lzdGVyXCI6XHJcbiAgICAgICAgICAgICAgICBuZXcgUmVnaXN0ZXJDb250cm9sbGVyKG5ldyBSZWdpc3RlclZpZXdIZWxwZXIoKSwgbmV3IFJlZ2lzdGVyTW9kZWwoKSkubWFpbigpO1xyXG4gICAgICAgICAgICAgICAgYnJlYWs7XHJcbiAgICAgICAgICAgIGNhc2UgXCJyZXNldHBhc3N3b3JkXCI6XHJcbiAgICAgICAgICAgICAgICBuZXcgUmVzZXRQYXNzd29yZENvbnRyb2xsZXIobmV3IFJlc2V0UGFzc3dvcmRWaWV3SGVscGVyKCksIG5ldyBSZXNldFBhc3N3b3JkTW9kZWwoKSkubWFpbigpO1xyXG4gICAgICAgICAgICAgICAgYnJlYWs7XHJcbiAgICAgICAgICAgIGRlZmF1bHQ6XHJcbiAgICAgICAgICAgICAgICBuZXcgRXJyb3JDb250cm9sbGVyKG5ldyBFcnJvclZpZXdIZWxwZXIoKSkubWFpbigpO1xyXG4gICAgICAgICAgICAgICAgYnJlYWs7XHJcbiAgICAgICAgfVxyXG5cclxuICAgICAgICBpZiAoaGlzdG9yeSAhPSBmYWxzZSlcclxuICAgICAgICB7XHJcbiAgICAgICAgICAgIGlmICh1cmwgPT0gXCJcIilcclxuICAgICAgICAgICAge1xyXG4gICAgICAgICAgICAgICAgdXJsID0gXCJpbmRleC5odG1sXCI7XHJcbiAgICAgICAgICAgIH1cclxuXHJcbiAgICAgICAgICAgIHdyaXRlSGlzdG9yeSh7fSwgXCJBLVogR2FtZXNcIiwgdXJsKVxyXG4gICAgICAgIH1cclxuICAgIH1cclxuXHJcbiAgICBmdW5jdGlvbiBpc0ludGVybmFsKHVybClcclxuICAgIHtcclxuICAgICAgICBpZiAodXJsLmluZGV4T2YoXCJodHRwXCIpICE9IC0xIHx8IHVybC5pbmRleE9mKFwiaHR0cHNcIikgIT0gLTEgfHwgdXJsLmluZGV4T2YoXCJ3d3dcIikgIT0gLTEpXHJcbiAgICAgICAge1xyXG4gICAgICAgICAgICB3aW5kb3cubG9jYXRpb24gPSB1cmw7XHJcbiAgICAgICAgICAgIFxyXG4gICAgICAgICAgICByZXR1cm4gZmFsc2U7XHJcbiAgICAgICAgfVxyXG5cclxuICAgICAgICByZXR1cm4gdHJ1ZTtcclxuICAgIH1cclxuXHJcbiAgICBmdW5jdGlvbiBnZXRQYXJ0aWNsZXModXJsKVxyXG4gICAge1xyXG4gICAgICAgIC8vIFJlbW92ZSB0aGUgZmlyc3QgL1xyXG4gICAgICAgIGlmICh1cmwuaW5kZXhPZihcIi9cIikgPT0gMClcclxuICAgICAgICB7XHJcbiAgICAgICAgICAgIHVybCA9IHVybC5zdWJzdHJpbmcoMSk7XHJcbiAgICAgICAgfVxyXG5cclxuICAgICAgICAvLyBJZiB0aGVyZSBpcyBhIGJhc2UgdXJsIHNldCwgcmVtb3ZlIHRoZSBiYXNlIHVybFxyXG4gICAgICAgIGlmICh0aGlzLmJhc2VVcmwgIT0gbnVsbCAmJiB1cmwuaW5kZXhPZih0aGlzLmJhc2VVcmwpICE9IC0xKVxyXG4gICAgICAgIHtcclxuICAgICAgICAgICAgdXJsID0gdXJsLnN1YnN0cmluZyh1cmwuaW5kZXhPZih0aGlzLmJhc2VVcmwpICsgdGhpcy5iYXNlVXJsLmxlbmd0aCk7XHJcbiAgICAgICAgfVxyXG5cclxuICAgICAgICByZXR1cm4gdXJsLnNwbGl0KC9cXC8oLispPy8pXHJcbiAgICB9XHJcblxyXG4gICAgZnVuY3Rpb24gd3JpdGVIaXN0b3J5KG9iamVjdCwgdGl0bGUsIHVybClcclxuICAgIHtcclxuICAgICAgICB3aW5kb3cuaGlzdG9yeS5wdXNoU3RhdGUob2JqZWN0LCB0aXRsZSwgdXJsKTtcclxuICAgIH1cclxuXHJcbiAgICByZXR1cm4ge1xyXG4gICAgICAgIHJvdXRlOiByb3V0ZVxyXG4gICAgfVxyXG59IiwidmFyIExvZ2luTW9kZWwgPSBmdW5jdGlvbigpXHJcbntcclxuICAgIGZ1bmN0aW9uIGxvZ2luKGVtYWlsLCBwYXNzd29yZCwgY2FsbGJhY2spXHJcbiAgICB7XHJcbiAgICAgICAgJC5hamF4KHtcclxuICAgICAgICAgICAgdXJsOiBcImh0dHA6Ly8vODQuODQuMjQ1LjI5OjI0My91c2VyL2xvZ2luXCIsXHJcbiAgICAgICAgICAgIHR5cGU6IFwicG9zdFwiLFxyXG4gICAgICAgICAgICBkYXRhVHlwZTogJ2pzb24nLFxyXG4gICAgICAgICAgICBkYXRhOiBKU09OLnN0cmluZ2lmeSh7XHJcbiAgICAgICAgICAgICAgICBlbWFpbCA6IGVtYWlsLFxyXG4gICAgICAgICAgICAgICAgcGFzc3dvcmQgOiBwYXNzd29yZFxyXG4gICAgICAgICAgICB9KSxcclxuICAgICAgICAgICAgc3VjY2VzczogZnVuY3Rpb24gKGRhdGEpIHtcclxuICAgICAgICAgICAgICAgIC8vIHB1dCB0b2tlbiBpbiBjb29raWVcclxuICAgICAgICAgICAgICAgIGRvY3VtZW50LmNvb2tpZT0nYWNjZXNzX3Rva2VuPScgKyBkYXRhLmFjY2Vzc190b2tlbjtcclxuICAgICAgICAgICAgICAgIGRvY3VtZW50LmNvb2tpZT0ndXNlcl9pZD0nICsgZGF0YS51c2VyX2lkO1xyXG5cclxuICAgICAgICAgICAgICAgIC8vIGxldCBjb250cm9sbGVyIHJlc3VtZSB3aXRoIHN0dWZmXHJcbiAgICAgICAgICAgICAgICBjYWxsYmFjayhkYXRhKTtcclxuICAgICAgICAgICAgfSxcclxuICAgICAgICAgICAgZXJyb3I6IGZ1bmN0aW9uICh4aHIsIHN0YXR1cywgZXJyb3IpIHtcclxuICAgICAgICAgICAgICAgIC8vIHNob3cgJ25vdCBnb29kIGVtYWlsIG9yIHBhc3N3b3JkIHRvIHVzZXInXHJcbiAgICAgICAgICAgICAgICAkKFwiI2Vycm9yX21lc3NhZ2VcIikuc2hvdygpO1xyXG5cclxuICAgICAgICAgICAgICAgIC8vJChcIiNjb21wb25lbnRcIikuaHRtbChcImVycm9yIGZ1bmN0aW9uXCIpO1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgfSk7XHJcbiAgICB9XHJcblxyXG4gICAgLy8gUmV0dXJuIHRoZSBtZXRob2RzIHRoYXQgY2FuIGJlIHVzZWQgYnkgb3RoZXIgcHJvZ3JhbXMgKHRoZSBjb250cm9sbGVyIGluIHRoaXMgY2FzZSlcclxuICAgIHJldHVybiB7XHJcbiAgICAgICAgbG9naW46IGxvZ2luXHJcbiAgICB9XHJcbn07IiwidmFyIExvZ291dE1vZGVsID0gZnVuY3Rpb24oKVxyXG57XHJcbiAgICBmdW5jdGlvbiBsb2dvdXQoY2FsbGJhY2spXHJcbiAgICB7XHJcbiAgICAgICAgJC5hamF4KHtcclxuICAgICAgICAgICAgdXJsOiBcImh0dHA6Ly84NC44NC4yNDUuMjk6MjQzL3VzZXIvbG9nb3V0XCIsIC8vPyBodHRwOi8vODQuODQuMjQ1LjI5OjI0MyA9IEFQSS1sb2NhdGllP1xyXG4gICAgICAgICAgICB0eXBlOiBcInBvc3RcIixcclxuICAgICAgICAgICAgZGF0YVR5cGU6ICdqc29uJyxcclxuICAgICAgICAgICAgZGF0YTogSlNPTi5zdHJpbmdpZnkoe1xyXG4gICAgICAgICAgICAgICAgdXNlcl9pZDogZ2V0Q29va2llKFwidXNlcl9pZFwiKVxyXG4gICAgICAgICAgICB9KSxcclxuICAgICAgICAgICAgc3VjY2VzczogZnVuY3Rpb24gKGRhdGEpIHtcclxuICAgICAgICAgICAgICAgIC8vIGxldCBjb250cm9sbGVyIHJlc3VtZSB3aXRoIHN0dWZmXHJcbiAgICAgICAgICAgICAgICBkb2N1bWVudC5jb29raWU9J2FjY2Vzc190b2tlbj0nO1xyXG4gICAgICAgICAgICAgICAgZG9jdW1lbnQuY29va2llPSd1c2VyX2lkPSc7XHJcbiAgICAgICAgICAgICAgICBjYWxsYmFjayhkYXRhKTtcclxuICAgICAgICAgICAgfSxcclxuICAgICAgICAgICAgZXJyb3I6IGZ1bmN0aW9uICh4aHIsIHN0YXR1cywgZXJyb3IpIHtcclxuICAgICAgICAgICAgICAgIC8vIHNob3cgJ25vdCBnb29kIGVtYWlsIG9yIHBhc3N3b3JkIHRvIHVzZXInXHJcbiAgICAgICAgICAgICAgICAkKFwiI2Vycm9yX21lc3NhZ2VcIikuc2hvdygpO1xyXG5cclxuICAgICAgICAgICAgICAgIC8vJChcIiNjb21wb25lbnRcIikuaHRtbChcImVycm9yIGZ1bmN0aW9uXCIpO1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgfSk7XHJcblxyXG4gICAgICAgIGZ1bmN0aW9uIGdldENvb2tpZShuYW1lKVxyXG4gICAgICAgIHtcclxuICAgICAgICAgICAgdmFyIGNvb2tpZXMgPSBkb2N1bWVudC5jb29raWUuc3BsaXQoJzsnKTtcclxuXHJcbiAgICAgICAgICAgIGZvciAodmFyIGkgPSAwOyBpIDwgY29va2llcy5sZW5ndGg7IGkrKylcclxuICAgICAgICAgICAge1xyXG4gICAgICAgICAgICAgICAgdmFyIGNvb2tpZSA9IGNvb2tpZXNbaV0uc3BsaXQoXCI9XCIpO1xyXG5cclxuICAgICAgICAgICAgICAgIGlmIChjb29raWVbMF0udHJpbSgpID09IG5hbWUpXHJcbiAgICAgICAgICAgICAgICB7XHJcbiAgICAgICAgICAgICAgICAgICAgcmV0dXJuIGNvb2tpZVsxXTtcclxuICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgfVxyXG4gICAgICAgIH1cclxuICAgIH1cclxuXHJcbiAgICAvLyBSZXR1cm4gdGhlIG1ldGhvZHMgdGhhdCBjYW4gYmUgdXNlZCBieSBvdGhlciBwcm9ncmFtcyAodGhlIGNvbnRyb2xsZXIgaW4gdGhpcyBjYXNlKVxyXG4gICAgcmV0dXJuIHtcclxuICAgICAgICBsb2dvdXQ6IGxvZ291dFxyXG4gICAgfVxyXG59OyIsInZhciBQcm9kdWN0c01vZGVsID0gZnVuY3Rpb24oKVxyXG57XHJcbiAgICBmdW5jdGlvbiBnZXRQYWdlKGZpbHRlciwgY2FsbGJhY2spXHJcbiAgICB7XHJcbiAgICAgICAgJC5hamF4KHtcclxuICAgICAgICAgICAgdXJsOiBcImh0dHA6Ly84NC44NC4yNDUuMjk6MjQzL3Byb2R1Y3RzP1wiICsgZmlsdGVyLCAvLz8gaHR0cDovLzg0Ljg0LjI0NS4yOToyNDMgPSBBUEktbG9jYXRpZT9cclxuICAgICAgICAgICAgdHlwZTogXCJnZXRcIixcclxuICAgICAgICAgICAgZGF0YVR5cGU6ICdqc29uJyxcclxuICAgICAgICAgICAgc3VjY2VzczogZnVuY3Rpb24gKGRhdGEpIHtcclxuICAgICAgICAgICAgICAgIGNhbGxiYWNrKGRhdGEpO1xyXG4gICAgICAgICAgICB9LFxyXG4gICAgICAgICAgICBlcnJvcjogZnVuY3Rpb24gKHhociwgc3RhdHVzLCBlcnJvcikge1xyXG4gICAgICAgICAgICAgICAgJChcIiNjb21wb25lbnRcIikubG9hZChcInZpZXdzL2Vycm9yL2Vycm9yLmh0bWxcIik7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICB9KTtcclxuICAgIH1cclxuXHJcbiAgICAvLyBSZXR1cm4gdGhlIG1ldGhvZHMgdGhhdCBjYW4gYmUgdXNlZCBieSBvdGhlciBwcm9ncmFtcyAodGhlIGNvbnRyb2xsZXIgaW4gdGhpcyBjYXNlKVxyXG4gICAgcmV0dXJuIHtcclxuICAgICAgICBnZXRQYWdlOiBnZXRQYWdlXHJcbiAgICB9XHJcbn07IiwidmFyIFJlZ2lzdGVyTW9kZWwgPSBmdW5jdGlvbigpXHJcbntcclxuICAgIGZ1bmN0aW9uIHJlZ2lzdGVyKGdlbmRlciwgZmlyc3RfbmFtZSwgcHJlZml4LCBzdXJuYW1lLCBkYXRlX29mX2JpcnRoLCBzdHJlZXQsIG51bWJlciwgcG9zdGFsX2NvZGUsIGNpdHksIG1vYmlsZV9udW1iZXIsIHBob25lX251bWJlciwgZW1haWwsIHBhc3N3b3JkLCByZXBlYXRfcGFzc3dvcmQsIHNlY3VyaXR5X3F1ZXN0aW9uLCBzZWN1cml0eV9xdWVzdGlvbl9hbnN3ZXIsIGNhbGxiYWNrKVxyXG4gICAge1xyXG4gICAgICAgICQuYWpheCh7XHJcbiAgICAgICAgICAgIHVybDogXCJodHRwOi8vODQuODQuMjQ1LjI5OjI0My91c2VyL3JlZ2lzdGVyXCIsIC8vPyBodHRwOi8vODQuODQuMjQ1LjI5OjI0MyA9IEFQSS1sb2NhdGllP1xyXG4gICAgICAgICAgICAvLyB1cmw6IFwiaHR0cDovLzg0Ljg0LjI0NS4yOToyNDMvdXNlci9sb2dpblwiLCAvLz8gaHR0cDovLzg0Ljg0LjI0NS4yOToyNDMgPSBBUEktbG9jYXRpZT9cclxuICAgICAgICAgICAgdHlwZTogXCJwb3N0XCIsXHJcbiAgICAgICAgICAgIGRhdGFUeXBlOiAnanNvbicsXHJcbiAgICAgICAgICAgIGRhdGE6IEpTT04uc3RyaW5naWZ5KHtcclxuICAgICAgICAgICAgICAgIGdlbmRlciA6IGdlbmRlcixcclxuICAgICAgICAgICAgICAgIGZpcnN0X25hbWUgOiBmaXJzdF9uYW1lLFxyXG4gICAgICAgICAgICAgICAgcHJlZml4IDogcHJlZml4LFxyXG4gICAgICAgICAgICAgICAgc3VybmFtZSA6IHN1cm5hbWUsXHJcbiAgICAgICAgICAgICAgICBkYXRlX29mX2JpcnRoIDogZGF0ZV9vZl9iaXJ0aCxcclxuICAgICAgICAgICAgICAgIHN0cmVldCA6IHN0cmVldCxcclxuICAgICAgICAgICAgICAgIG51bWJlciA6IG51bWJlcixcclxuICAgICAgICAgICAgICAgIHBvc3RhbF9jb2RlIDogcG9zdGFsX2NvZGUsXHJcbiAgICAgICAgICAgICAgICBjaXR5IDogY2l0eSxcclxuICAgICAgICAgICAgICAgIG1vYmlsZV9udW1iZXIgOiBtb2JpbGVfbnVtYmVyLFxyXG4gICAgICAgICAgICAgICAgcGhvbmVfbnVtYmVyIDogcGhvbmVfbnVtYmVyLFxyXG4gICAgICAgICAgICAgICAgZW1haWwgOiBlbWFpbCxcclxuICAgICAgICAgICAgICAgIHBhc3N3b3JkIDogcGFzc3dvcmQsXHJcbiAgICAgICAgICAgICAgICByZXBlYXRfcGFzc3dvcmQgOiByZXBlYXRfcGFzc3dvcmQsXHJcbiAgICAgICAgICAgICAgICBzZWN1cml0eV9xdWVzdGlvbiA6IHNlY3VyaXR5X3F1ZXN0aW9uLFxyXG4gICAgICAgICAgICAgICAgc2VjdXJpdHlfcXVlc3Rpb25fYW5zd2VyIDogc2VjdXJpdHlfcXVlc3Rpb25fYW5zd2VyXHJcbiAgICAgICAgICAgIH0pLFxyXG4gICAgICAgICAgICBzdWNjZXNzOiBmdW5jdGlvbiAoZGF0YSkge1xyXG4gICAgICAgICAgICAgICAgLy8gbGV0IGNvbnRyb2xsZXIgcmVzdW1lIHdpdGggc3R1ZmZcclxuICAgICAgICAgICAgICAgIGNhbGxiYWNrKGRhdGEpO1xyXG4gICAgICAgICAgICAgICAgY29uc29sZS5sb2coZGF0YSk7IC8vdGVzdFxyXG5cclxuICAgICAgICAgICAgfSxcclxuICAgICAgICAgICAgZXJyb3I6IGZ1bmN0aW9uICh4aHIsIHN0YXR1cywgZXJyb3IpIHtcclxuICAgICAgICAgICAgICAgIC8vIHNob3cgJ25vdCBnb29kIGVtYWlsIG9yIHBhc3N3b3JkIHRvIHVzZXInXHJcbiAgICAgICAgICAgICAgICAkKFwiI2Vycm9yX21lc3NhZ2VcIikuc2hvdygpO1xyXG5cclxuICAgICAgICAgICAgICAgIC8vJChcIiNjb21wb25lbnRcIikuaHRtbChcImVycm9yIGZ1bmN0aW9uXCIpO1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgfSk7XHJcbiAgICB9XHJcblxyXG4gICAgLy8gUmV0dXJuIHRoZSBtZXRob2RzIHRoYXQgY2FuIGJlIHVzZWQgYnkgb3RoZXIgcHJvZ3JhbXMgKHRoZSBjb250cm9sbGVyIGluIHRoaXMgY2FzZSlcclxuICAgIHJldHVybiB7XHJcbiAgICAgICAgcmVnaXN0ZXI6IHJlZ2lzdGVyXHJcbiAgICB9XHJcbn07XHJcblxyXG4iLCJ2YXIgUmVzZXRQYXNzd29yZE1vZGVsID0gZnVuY3Rpb24oKVxyXG57XHJcbiAgICBmdW5jdGlvbiByZXNldHBhc3N3b3JkKG5ld19wYXNzd29yZCwgZW1haWwsIHNlY3VyaXR5X3F1ZXN0aW9uLCBzZWN1cml0eV9xdWVzdGlvbl9hbnN3ZXIsIGNhbGxiYWNrKVxyXG4gICAge1xyXG4gICAgICAgICQuYWpheCh7XHJcbiAgICAgICAgICAgIHVybDogXCJodHRwOi8vODQuODQuMjQ1LjI5OjI0My9yZXNldHBhc3N3b3JkXCIsIC8vPyBodHRwOi8vODQuODQuMjQ1LjI5OjI0MyA9IEFQSS1sb2NhdGllP1xyXG4gICAgICAgICAgICB0eXBlOiBcImdldFwiLFxyXG4gICAgICAgICAgICBkYXRhVHlwZTogJ2pzb24nLFxyXG4gICAgICAgICAgICBkYXRhOiBKU09OLnN0cmluZ2lmeSh7XHJcbiAgICAgICAgICAgICAgICBuZXdfcGFzc3dvcmQgOiBuZXdfcGFzc3dvcmQsXHJcbiAgICAgICAgICAgICAgICBlbWFpbCA6IGVtYWlsLFxyXG4gICAgICAgICAgICAgICAgc2VjdXJpdHlfcXVlc3Rpb24gOiBzZWN1cml0eV9xdWVzdGlvbixcclxuICAgICAgICAgICAgICAgIHNlY3VyaXR5X3F1ZXN0aW9uX2Fuc3dlciA6IHNlY3VyaXR5X3F1ZXN0aW9uX2Fuc3dlclxyXG4gICAgICAgICAgICB9KSxcclxuICAgICAgICAgICAgc3VjY2VzczogZnVuY3Rpb24gKGRhdGEpIHtcclxuICAgICAgICAgICAgICAgIGNhbGxiYWNrKGRhdGEpO1xyXG4gICAgICAgICAgICB9LFxyXG4gICAgICAgICAgICBlcnJvcjogZnVuY3Rpb24gKHhociwgc3RhdHVzLCBlcnJvcikge1xyXG4gICAgICAgICAgICAgICAgJChcIiNjb21wb25lbnRcIikubG9hZChcInZpZXdzL2Vycm9yL2Vycm9yLmh0bWxcIik7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICB9KTtcclxuICAgIH1cclxuXHJcbiAgICAvLyBSZXR1cm4gdGhlIG1ldGhvZHMgdGhhdCBjYW4gYmUgdXNlZCBieSBvdGhlciBwcm9ncmFtcyAodGhlIGNvbnRyb2xsZXIgaW4gdGhpcyBjYXNlKVxyXG4gICAgcmV0dXJuIHtcclxuICAgICAgICByZXNldHBhc3N3b3JkOiByZXNldHBhc3N3b3JkXHJcbiAgICB9XHJcbn07IiwidmFyIEVycm9yQ29udHJvbGxlciA9IGZ1bmN0aW9uKHZpZXdIZWxwZXIpXHJcbntcclxuICAgIHZhciBWaWV3SGVscGVyID0gdmlld0hlbHBlcjtcclxuXHJcbiAgICAvLyBNYWluIGZ1bmN0aW9uLCBhbHNvIHRoZSBzdGFydCBzdGFydHBvaW50IGZvciBhIHBhZ2VcclxuICAgIGZ1bmN0aW9uIG1haW4oKVxyXG4gICAge1xyXG4gICAgICAgIC8vIHNldCB2aWV3IHRvIGxvZ2luIGZvcm1cclxuICAgICAgICBWaWV3SGVscGVyLnNldFZpZXcoKTtcclxuICAgIH1cclxuXHJcbiAgICAvLyBSZXR1cm4gdGhlIG1ldGhvZHMgdGhhdCBjYW4gYmUgdXNlZCBieSBvdGhlciBwcm9ncmFtcyAodGhlIGNvbnRyb2xsZXIgaW4gdGhpcyBjYXNlKVxyXG4gICAgcmV0dXJuIHtcclxuICAgICAgICBtYWluOiBtYWluXHJcbiAgICB9XHJcbn07IiwidmFyIExvZ2luQ29udHJvbGxlciA9IGZ1bmN0aW9uKHZpZXdIZWxwZXIsIG1vZGVsKVxyXG57XHJcbiAgICB2YXIgTW9kZWwgICAgICA9IG1vZGVsO1xyXG4gICAgdmFyIFZpZXdIZWxwZXIgPSB2aWV3SGVscGVyO1xyXG4gICAgXHJcbiAgICAvLyBGdW5jdGlvbiB0aGF0IGlzIGV4ZWN1dGVkIG9uIGEgYWN0aW9uIGxpc3RlbmVyXHJcbiAgICBmdW5jdGlvbiBhY3Rpb25QZXJmb3JtZWQoZXZlbnQpXHJcbiAgICB7XHJcbiAgICAgICAgLy8gUHJldmVudCBzZW5kaW5nIHRoZSBmb3JtXHJcbiAgICAgICAgZXZlbnQucHJldmVudERlZmF1bHQoKTtcclxuXHJcbiAgICAgICAgLy8gTG9vcCB0cm91Z2ggdGhlIGZvcm0gZGF0YSBhbmQgZ2V0IGFsbCBmaWVsZHNcclxuICAgICAgICB2YXIgZm9ybURhdGEgPSB7fTtcclxuICAgICAgICAkLmVhY2goJCh0aGlzKS5zZXJpYWxpemVBcnJheSgpLCBmdW5jdGlvbiAoaSwgZmllbGQpIHtcclxuICAgICAgICAgICAgZm9ybURhdGFbZmllbGQubmFtZV0gPSBmaWVsZC52YWx1ZTtcclxuICAgICAgICB9KTtcclxuXHJcbiAgICAgICAgLy8gbGV0IG1vZGVsIHNlbmQgZW1haWwgYW5kIHBhc3N3b3JkIHRvIEFQSVxyXG4gICAgICAgIE1vZGVsLmxvZ2luKGZvcm1EYXRhLmVtYWlsLCBmb3JtRGF0YS5wYXNzd29yZCwgZnVuY3Rpb24gKGRhdGEpIHtcclxuICAgICAgICAgICAgLy8gc2hvdyB1aXRsb2dnZW4gYnV0dG9uXHJcbiAgICAgICAgICAgICQoXCIjaW5sb2dnZW5fdGV4dFwiKS5oaWRlKCk7XHJcbiAgICAgICAgICAgICQoXCIjdWl0bG9nZ2VuX3RleHRcIikuc2hvdygpO1xyXG5cclxuICAgICAgICAgICAgLy8gV2VlcmdlZWYgZWVuIGFuZGVyZSBwYWdpbmEgZ2ViYXNzZWVyZCBvcCAnYWRtaW4nIG9mICdyZWdpc3RlcmVkIHVzZXInXHJcbiAgICAgICAgICAgIG5ldyBQYWdlQ29udHJvbGxlcihuZXcgUGFnZVZpZXdIZWxwZXIoKSwgbmV3IFBhZ2VNb2RlbCgpKS5tYWluKCk7XHJcbiAgICAgICAgfSk7XHJcbiAgICB9XHJcblxyXG4gICAgLy8gTWFpbiBmdW5jdGlvbiwgYWxzbyB0aGUgc3RhcnQgc3RhcnRwb2ludCBmb3IgYSBwYWdlXHJcbiAgICBmdW5jdGlvbiBtYWluKClcclxuICAgIHtcclxuICAgICAgICAvLyBzZXQgdmlldyB0byBsb2dpbiBmb3JtXHJcbiAgICAgICAgVmlld0hlbHBlci5zZXRWaWV3KCk7XHJcblxyXG4gICAgICAgIC8vIHVzZXIgZmlsbHMgaW4gZW1haWwgYW5kIHBhc3N3b3JkOyBjbGlja3MgJ2xvZ2luJzogVklFVyBub3RpY2VzIHRoaXMgYW5kIHJlYWN0c1xyXG4gICAgICAgIFZpZXdIZWxwZXIuc2V0QWN0aW9uTGlzdGVuZXIoYWN0aW9uUGVyZm9ybWVkKTtcclxuICAgIH1cclxuXHJcbiAgICAvLyBSZXR1cm4gdGhlIG1ldGhvZHMgdGhhdCBjYW4gYmUgdXNlZCBieSBvdGhlciBwcm9ncmFtcyAodGhlIGNvbnRyb2xsZXIgaW4gdGhpcyBjYXNlKVxyXG4gICAgcmV0dXJuIHtcclxuICAgICAgICBtYWluOiBtYWluXHJcbiAgICB9XHJcbn07IiwidmFyIExvZ291dENvbnRyb2xsZXIgPSBmdW5jdGlvbih2aWV3SGVscGVyLCBtb2RlbClcclxue1xyXG4gICAgdmFyIE1vZGVsICAgICAgPSBtb2RlbDtcclxuICAgIHZhciBWaWV3SGVscGVyID0gdmlld0hlbHBlcjtcclxuICAgIFxyXG4gICAgLy8gRnVuY3Rpb24gdGhhdCBpcyBleGVjdXRlZCBvbiBhIGFjdGlvbiBsaXN0ZW5lclxyXG4gICAgZnVuY3Rpb24gYWN0aW9uUGVyZm9ybWVkKGV2ZW50KVxyXG4gICAge1xyXG4gICAgICAgIE1vZGVsLmxvZ291dChmdW5jdGlvbiAoZGF0YSkge1xyXG4gICAgICAgICAgICAvLyBzaG93IHVpdGxvZ2dlbiBidXR0b25cclxuICAgICAgICAgICAgJChcIiNpbmxvZ2dlbl90ZXh0XCIpLnNob3coKTtcclxuICAgICAgICAgICAgJChcIiN1aXRsb2dnZW5fdGV4dFwiKS5oaWRlKCk7XHJcblxyXG4gICAgICAgICAgICAvLyBzZXQgdmlldyB0byBsb2dpbiBmb3JtXHJcbiAgICAgICAgICAgIFZpZXdIZWxwZXIuc2V0VmlldygpO1xyXG4gICAgICAgIH0pO1xyXG4gICAgfVxyXG5cclxuICAgIC8vIE1haW4gZnVuY3Rpb24sIGFsc28gdGhlIHN0YXJ0IHN0YXJ0cG9pbnQgZm9yIGEgcGFnZVxyXG4gICAgZnVuY3Rpb24gbWFpbigpXHJcbiAgICB7XHJcbiAgICAgICAgLy8gdXNlciBmaWxscyBpbiBlbWFpbCBhbmQgcGFzc3dvcmQ7IGNsaWNrcyAnbG9naW4nOiBWSUVXIG5vdGljZXMgdGhpcyBhbmQgcmVhY3RzXHJcbiAgICAgICAgVmlld0hlbHBlci5zZXRBY3Rpb25MaXN0ZW5lcihhY3Rpb25QZXJmb3JtZWQpO1xyXG4gICAgfVxyXG5cclxuICAgIC8vIFJldHVybiB0aGUgbWV0aG9kcyB0aGF0IGNhbiBiZSB1c2VkIGJ5IG90aGVyIHByb2dyYW1zICh0aGUgY29udHJvbGxlciBpbiB0aGlzIGNhc2UpXHJcbiAgICByZXR1cm4ge1xyXG4gICAgICAgIG1haW46IG1haW5cclxuICAgIH1cclxufTsiLCJ2YXIgUGFnZUNvbnRyb2xsZXIgPSBmdW5jdGlvbih2aWV3SGVscGVyLCBtb2RlbClcclxue1xyXG4gICAgdmFyIE1vZGVsID0gbW9kZWw7XHJcbiAgICB2YXIgVmlldyAgPSB2aWV3SGVscGVyO1xyXG4gICAgXHJcbiAgICAvLyBGdW5jdGlvbiB0aGF0IGlzIGV4ZWN1dGVkIG9uIGEgYWN0aW9uIGxpc3RlbmVyXHJcbiAgICBmdW5jdGlvbiBhY3Rpb25QZXJmb3JtZWQoZXZlbnQpXHJcbiAgICB7XHJcbiAgICAgICAgTW9kZWwuZ2V0UGFnZShmdW5jdGlvbiAoZGF0YSkge1xyXG4gICAgICAgICAgICBWaWV3LnNldFZpZXcoZGF0YSk7XHJcbiAgICAgICAgfSk7XHJcbiAgICB9XHJcblxyXG4gICAgLy8gTWFpbiBmdW5jdGlvbiwgYWxzbyB0aGUgc3RhcnQgc3RhcnRwb2ludCBmb3IgYSBwYWdlXHJcbiAgICBmdW5jdGlvbiBtYWluKClcclxuICAgIHsgICAgICAgICAgICAgICAgICAgICAgICBcclxuICAgICAgICBWaWV3LnNldEFjdGlvbkxpc3RlbmVyKGFjdGlvblBlcmZvcm1lZCk7XHJcbiAgICB9XHJcblxyXG4gICAgLy8gUmV0dXJuIHRoZSBtZXRob2RzIHRoYXQgY2FuIGJlIHVzZWQgYnkgb3RoZXIgcHJvZ3JhbXMgKHRoZSBjb250cm9sbGVyIGluIHRoaXMgY2FzZSlcclxuICAgIHJldHVybiB7XHJcbiAgICAgICAgbWFpbjogbWFpblxyXG4gICAgfVxyXG59OyIsInZhciBQcm9kdWN0c0NvbnRyb2xsZXIgPSBmdW5jdGlvbih2aWV3SGVscGVyLCBtb2RlbClcclxue1xyXG4gICAgdmFyIE1vZGVsICAgICAgPSBtb2RlbDtcclxuICAgIHZhciBWaWV3SGVscGVyID0gdmlld0hlbHBlcjtcclxuICAgIFxyXG4gICAgLy8gRnVuY3Rpb24gdGhhdCBpcyBleGVjdXRlZCBvbiBhIGFjdGlvbiBsaXN0ZW5lclxyXG4gICAgZnVuY3Rpb24gZ2V0UGFnZSgpXHJcbiAgICB7XHJcbiAgICAgICAgTW9kZWwuZ2V0UGFnZShcIlwiLCBmdW5jdGlvbiAoZGF0YSkgeyBWaWV3SGVscGVyLnNldFZpZXcoZGF0YSk7IH0pO1xyXG4gICAgfVxyXG5cclxuICAgIGZ1bmN0aW9uIGZpbHRlclByb2R1Y3RzKGV2ZW50KVxyXG4gICAge1xyXG4gICAgICAgIC8vIFByZXZlbnQgc2VuZGluZyB0aGUgZm9ybSAocGFnZSByZWxvYWQpXHJcbiAgICAgICAgZXZlbnQucHJldmVudERlZmF1bHQoKTtcclxuXHJcbiAgICAgICAgdmFyIGZpbHRlcnMgPSAkKHRoaXMpLnNlcmlhbGl6ZSgpO1xyXG4gICAgICAgIE1vZGVsLmdldFBhZ2UoZmlsdGVycywgZnVuY3Rpb24gKGRhdGEpIHsgVmlld0hlbHBlci5sb2FkUHJvZHVjdHMoZGF0YSk7IH0pO1xyXG4gICAgfVxyXG5cclxuICAgIC8vIE1haW4gZnVuY3Rpb24sIGFsc28gdGhlIHN0YXJ0IHN0YXJ0cG9pbnQgZm9yIGEgcGFnZVxyXG4gICAgZnVuY3Rpb24gbWFpbigpXHJcbiAgICB7ICAgICAgICAgICAgICAgICAgICAgICAgXHJcbiAgICAgICAgVmlld0hlbHBlci5zZXRBY3Rpb25MaXN0ZW5lcihnZXRQYWdlKTtcclxuICAgICAgICBWaWV3SGVscGVyLnNldEZpbHRlckxpc3RlbmVyKGZpbHRlclByb2R1Y3RzKTtcclxuICAgICAgICAvLyBuZXcgYWN0aW9uIHdhbm5lciBlciBvcCBmaWx0ZXIgd29yZHQgZ2VkcnVrdFxyXG4gICAgfVxyXG5cclxuICAgIC8vIFJldHVybiB0aGUgbWV0aG9kcyB0aGF0IGNhbiBiZSB1c2VkIGJ5IG90aGVyIHByb2dyYW1zICh0aGUgY29udHJvbGxlciBpbiB0aGlzIGNhc2UpXHJcbiAgICByZXR1cm4ge1xyXG4gICAgICAgIG1haW46IG1haW5cclxuICAgIH1cclxufTsiLCJ2YXIgUmVnaXN0ZXJDb250cm9sbGVyID0gZnVuY3Rpb24odmlld0hlbHBlciwgbW9kZWwpXHJcbntcclxuICAgIHZhciBNb2RlbCAgICAgID0gbW9kZWw7XHJcbiAgICB2YXIgVmlld0hlbHBlciA9IHZpZXdIZWxwZXI7XHJcbiAgICBcclxuICAgIC8vIEZ1bmN0aW9uIHRoYXQgaXMgZXhlY3V0ZWQgb24gYSBhY3Rpb24gbGlzdGVuZXJcclxuICAgIGZ1bmN0aW9uIGFjdGlvblBlcmZvcm1lZCgpXHJcbiAgICB7XHJcbiAgICAgICAgdmFyIGdlbmRlciA9ICQoXCIjZ2VuZGVyX3NlbGVjdCBvcHRpb246c2VsZWN0ZWRcIikudGV4dCgpO1xyXG4gICAgICAgIHZhciBmaXJzdF9uYW1lID0gJChcIiN2b29ybmFhbVwiKS52YWwoKTsgXHJcbiAgICAgICAgdmFyIHByZWZpeCA9ICQoXCIjdHVzc2Vudm9lZ3NlbF9vcHRpb25lZWxcIikudmFsKCk7IC8vIEdJVkVTIEFOIEVSUk9SIEhFUkVcclxuICAgICAgICB2YXIgc3VybmFtZSA9ICQoXCIjYWNodGVybmFhbVwiKS52YWwoKTtcclxuXHJcbiAgICAgICAgdmFyIGRhdGVfb2ZfYmlydGggPSBuZXcgRGF0ZSgkKFwiI2phYXJfc2VsZWN0IG9wdGlvbjpzZWxlY3RlZFwiKS52YWwoKSxcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICQoXCIjbWFhbmRfc2VsZWN0IG9wdGlvbjpzZWxlY3RlZFwiKS52YWwoKSxcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICQoXCIjZGFnX3NlbGVjdCBvcHRpb246c2VsZWN0ZWRcIikudmFsKCkpO1xyXG5cclxuICAgICAgICB2YXIgc3RyZWV0ID0gJChcIiNzdHJhYXRcIikudGV4dCgpO1xyXG4gICAgICAgIHZhciBudW1iZXIgPSAkKFwiI251bW1lclwiKS50ZXh0KCk7XHJcbiAgICAgICAgdmFyIHBvc3RhbF9jb2RlID0gJChcIiNwb3N0Y29kZVwiKS50ZXh0KCk7XHJcbiAgICAgICAgdmFyIGNpdHkgPSAkKFwiI3BsYWF0c1wiKS50ZXh0KCk7XHJcblxyXG4gICAgICAgIHZhciBtb2JpbGVfbnVtYmVyID0gJChcIiNtb2JpZWxfbnVtbWVyX29wdGlvbmVlbFwiKS52YWwoKTtcclxuICAgICAgICB2YXIgcGhvbmVfbnVtYmVyID0gJChcIiN0ZWxlZm9vbl9vcHRpb25lZWxcIikudmFsKCk7XHJcblxyXG4gICAgICAgIHZhciBlbWFpbCA9ICQoXCIjZS1tYWlsYWRyZXNcIikudmFsKCk7XHJcbiAgICAgICAgdmFyIHBhc3N3b3JkID0gJChcIiN3YWNodHdvb3JkXCIpLnZhbCgpO1xyXG4gICAgICAgIHZhciByZXBlYXRfcGFzc3dvcmQgPSAkKFwiI2hlcmhhYWx3YWNodHdvb3JkXCIpLnZhbCgpO1xyXG5cclxuICAgICAgICB2YXIgc2VjdXJpdHlfcXVlc3Rpb24gPSAkKFwiI3NlY3VyaXR5X3F1ZXN0aW9uX3NlbGVjdCBvcHRpb246c2VsZWN0ZWRcIikudGV4dCgpO1xyXG4gICAgICAgIHZhciBzZWN1cml0eV9xdWVzdGlvbl9hbnN3ZXIgPSAkKFwiI3F1ZXN0aW9uYW5zd2VyXCIpLnZhbCgpO1xyXG5cclxuICAgICAgICAvLyBsZXQgbW9kZWwgc2VuZCB1c2VyIGluZm8gdG8gQVBJXHJcbiAgICAgICAgTW9kZWwucmVnaXN0ZXIoZ2VuZGVyLCBmaXJzdF9uYW1lLCBwcmVmaXgsIHN1cm5hbWUsIGRhdGVfb2ZfYmlydGgsIHN0cmVldCwgbnVtYmVyLCBwb3N0YWxfY29kZSwgY2l0eSwgbW9iaWxlX251bWJlciwgcGhvbmVfbnVtYmVyLCBlbWFpbCwgcGFzc3dvcmQsIHJlcGVhdF9wYXNzd29yZCwgc2VjdXJpdHlfcXVlc3Rpb24sIHNlY3VyaXR5X3F1ZXN0aW9uX2Fuc3dlciwgZnVuY3Rpb24gKGRhdGEpIHtcclxuICAgICAgICAgICAgXHJcblxyXG4gICAgICAgICAgICAvLyBXZWVyZ2VlZiBlZW4gYW5kZXJlIHBhZ2luYSBhbHMgcmVnaXN0cmF0aWUgcHJvY2VzIGNvcnJlY3QgdWl0Z2V2b2VyZFxyXG4gICAgICAgICAgICAvL1ZpZXdIZWxwZXIuc2V0Vmlldygndmlld3MvcmVnaXN0ZXIvYWZ0ZXJfcmVnaXN0ZXIuaHRtbCcpO1xyXG5cclxuICAgICAgICAgICAgLy8gZ2VsaWprIGlubG9nZ2VuIGFscyBuaWV1d2UgdXNlciB6aWNoIGdlcmVnaXN0cmVlcmQgaGVlZnQ/XHJcbiAgICAgICAgICAgIC8vJChcIiNpbmxvZ2dlbl90ZXh0XCIpLmhpZGUoKTtcclxuICAgICAgICAgICAgLy8kKFwiI3VpdGxvZ2dlbl90ZXh0XCIpLnNob3coKTtcclxuXHJcbiAgICAgICAgfSk7XHJcblxyXG4gICAgICAgIC8vTW9kZWwuZ2V0UGFnZShmdW5jdGlvbiAoZGF0YSkgeyBWaWV3SGVscGVyLnNldFZpZXcoZGF0YSk7IH0pO1xyXG4gICAgfVxyXG5cclxuICAgIC8vIE1haW4gZnVuY3Rpb24sIGFsc28gdGhlIHN0YXJ0IHN0YXJ0cG9pbnQgZm9yIGEgcGFnZVxyXG4gICAgZnVuY3Rpb24gbWFpbigpXHJcbiAgICB7XHJcbiAgICAgICAgLy8gc2V0IHZpZXcgdG8gcmVnaXN0ZXIgZm9ybVxyXG4gICAgICAgIFZpZXdIZWxwZXIuc2V0VmlldygpO1xyXG5cclxuICAgICAgICAvLyB1c2VyIGZpbGxzIGluIHJlZ2lzdGVyIGluZm87IGNsaWNrcyAncmVnaXN0ZXInOiB2aWV3IG5vdGljZXMgdGhpcyBhbmQgcmVhY3RzXHJcbiAgICAgICAgVmlld0hlbHBlci5zZXRBY3Rpb25MaXN0ZW5lcihhY3Rpb25QZXJmb3JtZWQpO1xyXG5cclxuICAgICAgICAvLyBlbWFpbCBhbmQgcGFzc3dvcmQgYXJlIHNlbmQgdG8gQVBJOyBBUEkgY2hlY2tzIGlmIGVtYWlsIGFscmVhZHkgZXhpc3RzIChhbmQgd2hldGhlciBwYXNzd29yZCBpcyBjb3JyZWN0PykgXHJcblxyXG5cclxuICAgIH1cclxuXHJcbiAgICAvLyBSZXR1cm4gdGhlIG1ldGhvZHMgdGhhdCBjYW4gYmUgdXNlZCBieSBvdGhlciBwcm9ncmFtcyAodGhlIGNvbnRyb2xsZXIgaW4gdGhpcyBjYXNlKVxyXG4gICAgcmV0dXJuIHtcclxuICAgICAgICBtYWluOiBtYWluXHJcbiAgICB9XHJcbn07IiwidmFyIFJlc2V0UGFzc3dvcmRDb250cm9sbGVyID0gZnVuY3Rpb24odmlld0hlbHBlciwgbW9kZWwpXHJcbntcclxuICAgIHZhciBNb2RlbCAgICAgID0gbW9kZWw7XHJcbiAgICB2YXIgVmlld0hlbHBlciA9IHZpZXdIZWxwZXI7XHJcbiAgICBcclxuICAgIC8vIEZ1bmN0aW9uIHRoYXQgaXMgZXhlY3V0ZWQgb24gYSBhY3Rpb24gbGlzdGVuZXJcclxuICAgIGZ1bmN0aW9uIGFjdGlvblBlcmZvcm1lZCgpXHJcbiAgICB7XHJcbiAgICAgICAgdmFyIG5ld19wYXNzd29yZCA9ICQoXCIjd2FjaHR3b29yZFwiKS52YWwoKTtcclxuICAgICAgICB2YXIgZW1haWwgPSAkKFwiI2UtbWFpbGFkcmVzXCIpLnZhbCgpO1xyXG4gICAgICAgIHZhciBzZWN1cml0eV9xdWVzdGlvbiA9ICQoXCIjc2VjdXJpdHlfcXVlc3Rpb25fc2VsZWN0IG9wdGlvbjpzZWxlY3RlZFwiKS50ZXh0KCk7XHJcbiAgICAgICAgdmFyIHNlY3VyaXR5X3F1ZXN0aW9uX2Fuc3dlciA9ICQoXCIjcXVlc3Rpb25hbnN3ZXJcIikudGV4dCgpO1xyXG5cclxuICAgICAgICAvLyBsZXQgbW9kZWwgc2VuZCB1c2VyIGluZm8gdG8gQVBJXHJcbiAgICAgICAgTW9kZWwucmVzZXRwYXNzd29yZChuZXdfcGFzc3dvcmQsIGVtYWlsLCBzZWN1cml0eV9xdWVzdGlvbiwgc2VjdXJpdHlfcXVlc3Rpb25fYW5zd2VyLCBmdW5jdGlvbiAoZGF0YSkge1xyXG5cclxuICAgICAgICB9KTtcclxuICAgIH1cclxuXHJcbiAgICAvLyBNYWluIGZ1bmN0aW9uLCBhbHNvIHRoZSBzdGFydCBzdGFydHBvaW50IGZvciBhIHBhZ2VcclxuICAgIGZ1bmN0aW9uIG1haW4oKVxyXG4gICAgeyAgICAgIFxyXG4gICAgICAgIC8vIHNldCB2aWV3IHRvIHJlc2V0IHBhc3N3b3JkIGZvcm1cclxuICAgICAgICBWaWV3SGVscGVyLnNldFZpZXcoKTtcclxuXHJcbiAgICAgICAgVmlld0hlbHBlci5zZXRBY3Rpb25MaXN0ZW5lcihhY3Rpb25QZXJmb3JtZWQpO1xyXG4gICAgICAgIC8vIG5ldyBhY3Rpb24gd2FubmVyIGVyIG9wIGZpbHRlciB3b3JkdCBnZWRydWt0XHJcbiAgICB9XHJcblxyXG4gICAgLy8gUmV0dXJuIHRoZSBtZXRob2RzIHRoYXQgY2FuIGJlIHVzZWQgYnkgb3RoZXIgcHJvZ3JhbXMgKHRoZSBjb250cm9sbGVyIGluIHRoaXMgY2FzZSlcclxuICAgIHJldHVybiB7XHJcbiAgICAgICAgbWFpbjogbWFpblxyXG4gICAgfVxyXG59O1xyXG5cclxuIiwidmFyIEVycm9yVmlld0hlbHBlciA9IGZ1bmN0aW9uKClcclxue1xyXG4gICAgLy8gQ2hhbmdlIHRoZSB2aWV3IG9mIHRoZSBwYWdlXHJcbiAgICBmdW5jdGlvbiBzZXRWaWV3KClcclxuICAgIHtcclxuICAgICAgICAkKFwiI2NvbXBvbmVudFwiKS5sb2FkKCd2aWV3cy9lcnJvci9lcnJvci5odG1sJyk7XHJcbiAgICB9XHJcblxyXG4gICAgLy8gQWN0aW9uTGlzdGVuZXIgdGhhdCBleGVjdXRlcyBhY3Rpb25zIG9uIHNwZWNpZmljIGV2ZW50c1xyXG4gICAgZnVuY3Rpb24gc2V0QWN0aW9uTGlzdGVuZXIoZXZlbnRIYW5kbGVyKVxyXG4gICAge1xyXG4gICAgICAgICQoZG9jdW1lbnQpLnJlYWR5KGV2ZW50SGFuZGxlcik7XHJcbiAgICB9XHJcblxyXG4gICAgLy8gUmV0dXJuIHRoZSBtZXRob2RzIHRoYXQgY2FuIGJlIHVzZWQgYnkgb3RoZXIgcHJvZ3JhbXMgKHRoZSBjb250cm9sbGVyIGluIHRoaXMgY2FzZSlcclxuICAgIHJldHVybiB7XHJcbiAgICAgICAgc2V0Vmlldzogc2V0VmlldyxcclxuICAgICAgICBzZXRBY3Rpb25MaXN0ZW5lcjogc2V0QWN0aW9uTGlzdGVuZXJcclxuICAgIH1cclxufTsiLCJ2YXIgTG9naW5WaWV3SGVscGVyID0gZnVuY3Rpb24oKVxyXG57XHJcbiAgICAvLyBDaGFuZ2UgdGhlIHZpZXcgb2YgdGhlIHBhZ2VcclxuICAgIGZ1bmN0aW9uIHNldFZpZXcoKVxyXG4gICAge1xyXG4gICAgICAgICQoXCIjY29tcG9uZW50XCIpLmxvYWQoJ3ZpZXdzL2xvZ2luL2xvZ2luLmh0bWwnKTtcclxuICAgIH1cclxuXHJcbiAgICAvLyBFeGVjdXRlIHRoZSBldmVudCB3aGVuICdzb21ldGhpbmcnIGhhcHBlbnMgKHdoZW4gYSBidXR0b24gaXMgY2xpY2tlZCBmb3IgZXhhbXBsZSlcclxuICAgIGZ1bmN0aW9uIHNldEFjdGlvbkxpc3RlbmVyKGFjdGlvbilcclxuICAgIHtcclxuICAgICAgICAvLyB1c2VyIGZpbGxzIGluIGxvZ2luIGZvcm1cclxuICAgICAgICAvLyB1c2VyIHByZXNzZXMgJ2xvZ2luJ1xyXG5cclxuICAgICAgICAvLyBpZiB1c2VyIHByZXNzZXMgJ2xvZ2luJywgcGVyZm9ybSBhY3Rpb24gKG1ha2UgY29udHJvbGxlciBzZW5kIGVtYWlsIGFuZCBwYXNzd29yZCB0byBBUEkpXHJcbiAgICAgICAgJChcIiNjb21wb25lbnRcIikub24oXCJzdWJtaXRcIiwgXCIjbG9naW5mb3JtXCIsIGFjdGlvbik7XHJcbiAgICB9XHJcblxyXG4gICAgLy8gUmV0dXJuIHRoZSBtZXRob2RzIHRoYXQgY2FuIGJlIHVzZWQgYnkgb3RoZXIgcHJvZ3JhbXMgKHRoZSBjb250cm9sbGVyIGluIHRoaXMgY2FzZSlcclxuICAgIHJldHVybiB7XHJcbiAgICAgICAgc2V0Vmlldzogc2V0VmlldyxcclxuICAgICAgICBzZXRBY3Rpb25MaXN0ZW5lcjogc2V0QWN0aW9uTGlzdGVuZXJcclxuICAgIH1cclxufTsiLCJ2YXIgUGFnZVZpZXdIZWxwZXIgPSBmdW5jdGlvbigpXHJcbntcclxuICAgIC8vIENoYW5nZSB0aGUgdmlldyBvZiB0aGUgcGFnZVxyXG4gICAgZnVuY3Rpb24gc2V0Vmlldyh2aWV3RGF0YSlcclxuICAgIHtcclxuICAgICAgICAkKFwiI2NvbXBvbmVudFwiKS5sb2FkKCd2aWV3cy9wYWdlL3BhZ2UuaHRtbCcsIGZ1bmN0aW9uICgpIHtcclxuICAgICAgICAgICAgaWYgKHZpZXdEYXRhWzBdLnVzZXJfdHlwZSA9PSBcImN1c3RvbWVyXCIpXHJcbiAgICAgICAgICAgIHtcclxuICAgICAgICAgICAgICAgICQoXCIjdXNlci1ibG9ja1wiKS5hcHBlbmQoXCI8aDE+SmUgbGVlcyBkaXQgYWxsZWVuIGFscyBqZSBlZW4gY3VzdG9tZXIgYmVudFwiKTtcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICBpZiAodmlld0RhdGFbMF0udXNlcl90eXBlID09IFwiYWRtaW5cIilcclxuICAgICAgICAgICAge1xyXG4gICAgICAgICAgICAgICAgJChcIiN1c2VyLWJsb2NrXCIpLmFwcGVuZChcIjxoMT5KZSBsZWVzIGRpdCBhbGxlZW4gYWxzIGplIGVlbiBhZG1pbmlzdHJhdG9yIGJlbnRcIik7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICB9KTtcclxuICAgIH1cclxuXHJcbiAgICAvLyBBY3Rpb25MaXN0ZW5lciB0aGF0IGV4ZWN1dGVzIGFjdGlvbnMgb24gc3BlY2lmaWMgZXZlbnRzXHJcbiAgICBmdW5jdGlvbiBzZXRBY3Rpb25MaXN0ZW5lcihldmVudEhhbmRsZXIpXHJcbiAgICB7XHJcbiAgICAgICAgJChkb2N1bWVudCkucmVhZHkoZXZlbnRIYW5kbGVyKTtcclxuICAgIH1cclxuXHJcbiAgICAvLyBSZXR1cm4gdGhlIG1ldGhvZHMgdGhhdCBjYW4gYmUgdXNlZCBieSBvdGhlciBwcm9ncmFtcyAodGhlIGNvbnRyb2xsZXIgaW4gdGhpcyBjYXNlKVxyXG4gICAgcmV0dXJuIHtcclxuICAgICAgICBzZXRWaWV3OiBzZXRWaWV3LFxyXG4gICAgICAgIHNldEFjdGlvbkxpc3RlbmVyOiBzZXRBY3Rpb25MaXN0ZW5lclxyXG4gICAgfVxyXG59OyIsInZhciBMb2dvdXRWaWV3SGVscGVyID0gZnVuY3Rpb24oKVxyXG57XHJcbiAgICAvLyBDaGFuZ2UgdGhlIHZpZXcgb2YgdGhlIHBhZ2VcclxuICAgIGZ1bmN0aW9uIHNldFZpZXcoKVxyXG4gICAge1xyXG4gICAgICAgICQoXCIjY29tcG9uZW50XCIpLmxvYWQoJ3ZpZXdzL2xvZ291dC9sb2dvdXQuaHRtbCcpO1xyXG4gICAgfVxyXG5cclxuICAgIC8vIEV4ZWN1dGUgdGhlIGV2ZW50IHdoZW4gJ3NvbWV0aGluZycgaGFwcGVucyAod2hlbiBhIGJ1dHRvbiBpcyBjbGlja2VkIGZvciBleGFtcGxlKVxyXG4gICAgZnVuY3Rpb24gc2V0QWN0aW9uTGlzdGVuZXIoYWN0aW9uKVxyXG4gICAge1xyXG4gICAgICAgICQoZG9jdW1lbnQpLnJlYWR5KGFjdGlvbik7XHJcbiAgICB9XHJcblxyXG4gICAgLy8gUmV0dXJuIHRoZSBtZXRob2RzIHRoYXQgY2FuIGJlIHVzZWQgYnkgb3RoZXIgcHJvZ3JhbXMgKHRoZSBjb250cm9sbGVyIGluIHRoaXMgY2FzZSlcclxuICAgIHJldHVybiB7XHJcbiAgICAgICAgc2V0Vmlldzogc2V0VmlldyxcclxuICAgICAgICBzZXRBY3Rpb25MaXN0ZW5lcjogc2V0QWN0aW9uTGlzdGVuZXJcclxuICAgIH1cclxufTsiLCJ2YXIgUHJvZHVjdHNWaWV3SGVscGVyID0gZnVuY3Rpb24oKVxyXG57XHJcbiAgICAvLyBDaGFuZ2UgdGhlIHZpZXcgb2YgdGhlIHBhZ2VcclxuICAgIGZ1bmN0aW9uIHNldFZpZXcodmlld0RhdGEpXHJcbiAgICB7XHJcbiAgICAgICAgJChcIiNjb21wb25lbnRcIikuaHRtbCgnPGRpdiBjbGFzcz1cImNvbC0xMlwiPjxkaXYgY2xhc3M9XCJjb2wtM1wiIGlkPVwiZmlsdGVyc1wiPjwvZGl2PjxkaXYgY2xhc3M9XCJjb2wtOVwiIGlkPVwicHJvZHVjdHNcIj48L2Rpdj48L2Rpdj4nKTtcclxuICAgICAgICAkKFwiI2ZpbHRlcnNcIikubG9hZCgndmlld3MvcHJvZHVjdHMvZmlsdGVycy5odG1sJyk7XHJcblxyXG4gICAgICAgIGxvYWRQcm9kdWN0cyh2aWV3RGF0YSk7XHJcbiAgICB9XHJcblxyXG4gICAgZnVuY3Rpb24gbG9hZFByb2R1Y3RzKHZpZXdEYXRhKVxyXG4gICAge1xyXG4gICAgICAgICQoXCIjcHJvZHVjdHNcIikubG9hZCgndmlld3MvcHJvZHVjdHMvcHJvZHVjdHMuaHRtbCcsIGZ1bmN0aW9uICgpIHsgLy8gd2FhciBpZCA9ICdjb21wb25lbnQnIGRvZSAubG9hZC4uLi4uLlxyXG4gICAgICAgICAgICAkLmVhY2godmlld0RhdGEsIGZ1bmN0aW9uKGtleSwgdmFsdWUpIHtcclxuICAgICAgICAgICAgICAgIC8vIENsb25lIHByb2R1Y3RcclxuICAgICAgICAgICAgICAgIHZhciBwcm9kdWN0ID0gJCgnPGRpdj4nKS5hcHBlbmQoJCgnI3Byb2R1Y3RfX2xpc3RfX2l0ZW0nKS5jbG9uZSgpKTtcclxuICAgICAgICAgICAgICAgIFxyXG4gICAgICAgICAgICAgICAgLy8gQWRkIHByb2R1Y3QgaW5mb1xyXG4gICAgICAgICAgICAgICAgJChwcm9kdWN0KS5maW5kKFwiLnByb2R1Y3RfX3RpdGxlXCIpLmh0bWwodmFsdWUudGl0bGUpO1xyXG4gICAgICAgICAgICAgICAgJChwcm9kdWN0KS5maW5kKFwiLnByb2R1Y3RfX3ByaWNlXCIpLmh0bWwodmFsdWUucHJpY2UpO1xyXG4gICAgICAgICAgICAgICAgJChwcm9kdWN0KS5maW5kKFwiLnByb2R1Y3RfX2ltYWdlIGltZ1wiKS5hdHRyKFwic3JjXCIsIHZhbHVlLmltYWdlKTtcclxuICAgICAgICAgICAgICAgIFxyXG4gICAgICAgICAgICAgICAgLy8gRGV0ZXJtaW4gd2hhdCB3ZSBoYXZlIHRvIGRvIHdpdGggdGhlIHJvd3NcclxuICAgICAgICAgICAgICAgIGlmIChrZXkgJSA0ID09IDAgJiYga2V5ID09IDApXHJcbiAgICAgICAgICAgICAgICB7XHJcbiAgICAgICAgICAgICAgICAgICAgJChcIiNwcm9kdWN0X19saXN0XCIpLmFwcGVuZChcIjxkaXYgY2xhc3M9J3Jvdyc+XCIgKyBwcm9kdWN0Lmh0bWwoKSk7XHJcbiAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgICAgICBlbHNlIGlmIChrZXkgJSA0ID09IDApXHJcbiAgICAgICAgICAgICAgICB7XHJcbiAgICAgICAgICAgICAgICAgICAgJChcIiNwcm9kdWN0X19saXN0XCIpLmFwcGVuZChcIjwvZGl2PjxkaXYgY2xhc3M9J3Jvdyc+XCIgKyBwcm9kdWN0Lmh0bWwoKSk7XHJcbiAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgICAgICBlbHNlXHJcbiAgICAgICAgICAgICAgICB7XHJcbiAgICAgICAgICAgICAgICAgICAgJChcIiNwcm9kdWN0X19saXN0IGRpdi5yb3dcIikubGFzdCgpLmFwcGVuZChwcm9kdWN0Lmh0bWwoKSk7XHJcbiAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIH0pO1xyXG5cclxuICAgICAgICAgICAgLy8gQ2xvc2UgdGhlIGxhc3Qgcm93XHJcbiAgICAgICAgICAgICQoXCI8L2Rpdj5cIikuYXBwZW5kVG8oXCIjcHJvZHVjdF9fbGlzdFwiKTtcclxuXHJcbiAgICAgICAgICAgIC8vIFJlbW92ZSB0aGUgZmlyc3QgbGlzdCBpdGVtLCBiZWNhdXNlIHRoaXMgaXRlbSBpcyBhbHdheXMgZW1wdHlcclxuICAgICAgICAgICAgJChcIiNwcm9kdWN0X19saXN0X19pdGVtXCIpLmZpcnN0KCkucmVtb3ZlKCk7XHJcbiAgICAgICAgfSk7XHJcbiAgICB9XHJcblxyXG4gICAgLy8gRXhlY3V0ZSB0aGUgZXZlbnQgd2hlbiAnc29tZXRoaW5nJyBoYXBwZW5zICh3aGVuIGEgYnV0dG9uIGlzIGNsaWNrZWQgZm9yIGV4YW1wbGUpXHJcbiAgICBmdW5jdGlvbiBzZXRBY3Rpb25MaXN0ZW5lcihhY3Rpb24pXHJcbiAgICB7XHJcbiAgICAgICAgJChkb2N1bWVudCkucmVhZHkoYWN0aW9uKTsgLy8gaWYgJ2RvY3VtZW50IHJlYWR5JyBwZXJmb3JtIFwiYWN0aW9uXCJcclxuICAgIH1cclxuXHJcbiAgICBmdW5jdGlvbiBzZXRGaWx0ZXJMaXN0ZW5lcihhY3Rpb24pXHJcbiAgICB7XHJcbiAgICAgICAgIC8vIEhpZXIgaGV0IGZvcm11bGllciB2ZXJzdHVyZW4gYWxzIHdlIG9wIGVlbiBjaGVja2JveCBkcnVra2VuXHJcbiAgICAgICAgJChcIiNjb21wb25lbnRcIikub24oXCJjaGFuZ2VcIiwgXCJpbnB1dFt0eXBlPWNoZWNrYm94XVwiLCBmdW5jdGlvbihldmVudCkge1xyXG4gICAgICAgICAgICAkKFwiI3Byb2R1Y3RfZmlsdGVyXCIpLnN1Ym1pdCgpO1xyXG4gICAgICAgIH0pO1xyXG5cclxuICAgICAgICAkKFwiI2NvbXBvbmVudFwiKS5vbihcInN1Ym1pdFwiLCBcIiNwcm9kdWN0X2ZpbHRlclwiLCBhY3Rpb24pO1xyXG4gICAgfVxyXG5cclxuICAgIC8vIFJldHVybiB0aGUgbWV0aG9kcyB0aGF0IGNhbiBiZSB1c2VkIGJ5IG90aGVyIHByb2dyYW1zICh0aGUgY29udHJvbGxlciBpbiB0aGlzIGNhc2UpXHJcbiAgICByZXR1cm4ge1xyXG4gICAgICAgIHNldFZpZXc6IHNldFZpZXcsXHJcbiAgICAgICAgbG9hZFByb2R1Y3RzOiBsb2FkUHJvZHVjdHMsXHJcbiAgICAgICAgc2V0QWN0aW9uTGlzdGVuZXI6IHNldEFjdGlvbkxpc3RlbmVyLFxyXG4gICAgICAgIHNldEZpbHRlckxpc3RlbmVyOiBzZXRGaWx0ZXJMaXN0ZW5lclxyXG4gICAgfVxyXG59OyIsInZhciBSZWdpc3RlclZpZXdIZWxwZXIgPSBmdW5jdGlvbigpXHJcbntcclxuICAgIC8vIENoYW5nZSB0aGUgdmlldyBvZiB0aGUgcGFnZVxyXG4gICAgZnVuY3Rpb24gc2V0VmlldygpXHJcbiAgICB7XHJcbiAgICAgICAgJChcIiNjb21wb25lbnRcIikubG9hZCgndmlld3MvcmVnaXN0ZXIvcmVnaXN0ZXIuaHRtbCcpO1xyXG4gICAgfVxyXG5cclxuICAgIC8vIENoYW5nZSB0aGUgdmlldyBvZiB0aGUgcGFnZVxyXG4gICAgLyoqIFxyXG4gICAgZnVuY3Rpb24gc2V0Vmlldyh2aWV3VG9Mb2FkKVxyXG4gICAge1xyXG4gICAgICAgICQoXCIjY29tcG9uZW50XCIpLmxvYWQodmlld1RvTG9hZCk7IC8vZXhhbXBsZSBvZiB2aWV3VG9Mb2FkOiAndmlld3MvcmVnaXN0ZXIvcmVnaXN0ZXIuaHRtbCdcclxuICAgIH1cclxuICAgICovXHJcblxyXG4gICAgLy8gRXhlY3V0ZSB0aGUgZXZlbnQgd2hlbiAnc29tZXRoaW5nJyBoYXBwZW5zICh3aGVuIGEgYnV0dG9uIGlzIGNsaWNrZWQgZm9yIGV4YW1wbGUpXHJcbiAgICBmdW5jdGlvbiBzZXRBY3Rpb25MaXN0ZW5lcihhY3Rpb24pXHJcbiAgICB7XHJcbiAgICAgICAgLy8gdXNlciBmaWxscyBpbiByZWdpc3RlciBmb3JtXHJcbiAgICAgICAgLy8gdXNlciBwcmVzc2VzICdyZWdpc3RlcidcclxuXHJcbiAgICAgICAgLy8gaWYgdXNlciBwcmVzc2VzICdyZWdpc3RlcicsIHBlcmZvcm0gYWN0aW9uXHJcbiAgICAgICAgJChcIiNjb21wb25lbnRcIikub24oXCJjbGlja1wiLCBcIiNyZWdpc3RlcmJ1dHRvblwiLCBhY3Rpb24pO1xyXG4gICAgfVxyXG5cclxuICAgIC8vIFJldHVybiB0aGUgbWV0aG9kcyB0aGF0IGNhbiBiZSB1c2VkIGJ5IG90aGVyIHByb2dyYW1zICh0aGUgY29udHJvbGxlciBpbiB0aGlzIGNhc2UpXHJcbiAgICByZXR1cm4ge1xyXG4gICAgICAgIHNldFZpZXc6IHNldFZpZXcsXHJcbiAgICAgICAgc2V0QWN0aW9uTGlzdGVuZXI6IHNldEFjdGlvbkxpc3RlbmVyXHJcbiAgICB9XHJcbn07IiwidmFyIFJlc2V0UGFzc3dvcmRWaWV3SGVscGVyID0gZnVuY3Rpb24oKVxyXG57XHJcbiAgICAvLyBDaGFuZ2UgdGhlIHZpZXcgb2YgdGhlIHBhZ2VcclxuICAgIGZ1bmN0aW9uIHNldFZpZXcodmlld0RhdGEpXHJcbiAgICB7XHJcbiAgICAgICAgJChcIiNjb21wb25lbnRcIikubG9hZCgndmlld3MvcmVzZXRwYXNzd29yZC9yZXNldHBhc3N3b3JkLmh0bWwnKTtcclxuICAgIH1cclxuXHJcbiAgICAvLyBBY3Rpb25MaXN0ZW5lciB0aGF0IGV4ZWN1dGVzIGFjdGlvbnMgb24gc3BlY2lmaWMgZXZlbnRzXHJcbiAgICBmdW5jdGlvbiBzZXRBY3Rpb25MaXN0ZW5lcihldmVudEhhbmRsZXIpXHJcbiAgICB7XHJcbiAgICAgICAgLy8kKGRvY3VtZW50KS5yZWFkeShldmVudEhhbmRsZXIpO1xyXG4gICAgICAgICQoXCIjY29tcG9uZW50XCIpLm9uKFwic3VibWl0XCIsIFwiI3Jlc2V0Zm9ybVwiLCBldmVudEhhbmRsZXIpO1xyXG4gICAgfVxyXG5cclxuICAgIC8vIFJldHVybiB0aGUgbWV0aG9kcyB0aGF0IGNhbiBiZSB1c2VkIGJ5IG90aGVyIHByb2dyYW1zICh0aGUgY29udHJvbGxlciBpbiB0aGlzIGNhc2UpXHJcbiAgICByZXR1cm4ge1xyXG4gICAgICAgIHNldFZpZXc6IHNldFZpZXcsXHJcbiAgICAgICAgc2V0QWN0aW9uTGlzdGVuZXI6IHNldEFjdGlvbkxpc3RlbmVyXHJcbiAgICB9XHJcbn07Il19

var Router=function(){function e(e,r){if(0!=t(e)){var i=n(e);switch(i[0]){case"":case"index.html":case"products":new ProductsController(new ProductsViewHelper,new ProductsModel).main();break;case"product":new ProductController(new ProductViewHelper,new ProductModel(i[1])).main();break;case"login":new LoginController(new LoginViewHelper,new LoginModel).main();break;case"logout":new LogoutController(new LogoutViewHelper,new LogoutModel).main();break;default:new ErrorController(new ErrorViewHelper).main()}0!=r&&(""==e&&(e="index.html"),o({},"A-Z Games",e))}}function t(e){return e.indexOf("http")==-1&&e.indexOf("https")==-1&&e.indexOf("www")==-1||(window.location=e,!1)}function n(e){return 0==e.indexOf("/")&&(e=e.substring(1)),null!=this.baseUrl&&e.indexOf(this.baseUrl)!=-1&&(e=e.substring(e.indexOf(this.baseUrl)+this.baseUrl.length)),e.split(/\/(.+)?/)}function o(e,t,n){window.history.pushState(e,t,n)}return baseUrl="project-webshop/",{route:e}},LoginModel=function(){function e(e,t,n){$.ajax({url:"http:///84.84.245.29:243/user/login",type:"post",dataType:"json",data:JSON.stringify({email:e,password:t}),success:function(e){document.cookie="access_token="+e.access_token,document.cookie="user_id="+e.user_id,n(e)},error:function(e,t,n){$("#error_message").show()}})}return{login:e}},LogoutModel=function(){function e(e){function t(e){for(var t=document.cookie.split(";"),n=0;n<t.length;n++){var o=t[n].split("=");if(o[0].trim()==e)return o[1]}}$.ajax({url:"http://84.84.245.29:243/user/logout",type:"post",dataType:"json",data:JSON.stringify({user_id:t("user_id")}),success:function(t){document.cookie="access_token=",document.cookie="user_id=",e(t)},error:function(e,t,n){$("#error_message").show()}})}return{logout:e}},PageModel=function(){function e(e){$.ajax({url:"http://84.84.245.29:243/user",type:"get",dataType:"json",headers:{Authorization:"Bearer "+t("access_token")},success:function(t){e(t)},error:function(e,t,n){$("#component").load("error.html")}})}function t(e){for(var t=document.cookie.split(";"),n=0;n<t.length;n++){var o=t[n].split("=");if(o[0]==e)return o[1]}}return{getPage:e}},ProductsModel=function(){function e(e,t){$.ajax({url:"http://84.84.245.29:243/products?"+e,type:"get",dataType:"json",success:function(e){t(e)},error:function(e,t,n){$("#component").load("views/error/error.html")}})}return{getPage:e}},RegisterModel=function(){function e(e,t,n){$.ajax({url:"http://84.84.245.29:243/user/login",type:"post",dataType:"json",data:JSON.stringify({email:e,password:t}),success:function(e){n(e),console.log(e)},error:function(e,t,n){$("#error_message").show()}})}return{register:e}},ErrorController=function(e){function t(){n.setView()}var n=e;return{main:t}},LoginController=function(e,t){function n(e){e.preventDefault();var t={};$.each($(this).serializeArray(),function(e,n){t[n.name]=n.value}),r.login(t.email,t.password,function(e){$("#inloggen_text").hide(),$("#uitloggen_text").show(),new PageController(new PageViewHelper,new PageModel).main()})}function o(){i.setView(),i.setActionListener(n)}var r=t,i=e;return{main:o}},LogoutController=function(e,t){function n(e){r.logout(function(e){$("#inloggen_text").show(),$("#uitloggen_text").hide(),i.setView()})}function o(){i.setActionListener(n)}var r=t,i=e;return{main:o}},PageController=function(e,t){function n(e){r.getPage(function(e){i.setView(e)})}function o(){i.setActionListener(n)}var r=t,i=e;return{main:o}},ProductsController=function(e,t){function n(){i.getPage("",function(e){c.setView(e)})}function o(e){e.preventDefault();var t=$(this).serialize();i.getPage(t,function(e){c.loadProducts(e)})}function r(){c.setActionListener(n),c.setFilterListener(o)}var i=t,c=e;return{main:r}},RegisterController=function(e,t){function n(){var e=$("#e-mailadres").val(),t=$("#wachtwoord").val(),n=$("#voornaam").val(),o=$("#achternaam").val(),i=$("#gender_select option:selected").text(),c=new Date($("#jaar_select option:selected").val(),$("#maand_select option:selected").val(),$("#dag_select option:selected").val()),s=$("#mobiel nummer (optioneel)").val();r.register(e,t,n,o,i,c,s,function(e){})}function o(){i.setView(),i.setActionListener(n)}var r=t,i=e;return{main:o}},ErrorViewHelper=function(){function e(){$("#component").load("views/error/error.html")}function t(e){$(document).ready(e)}return{setView:e,setActionListener:t}},LoginViewHelper=function(){function e(){$("#component").load("views/login/login.html")}function t(e){$("#component").on("submit","#loginform",e)}return{setView:e,setActionListener:t}},PageViewHelper=function(){function e(e){$("#component").load("views/page/page.html",function(){"customer"==e[0].user_type&&$("#user-block").append("<h1>Je lees dit alleen als je een customer bent"),"admin"==e[0].user_type&&$("#user-block").append("<h1>Je lees dit alleen als je een administrator bent")})}function t(e){$(document).ready(e)}return{setView:e,setActionListener:t}},LogoutViewHelper=function(){function e(){$("#component").load("views/logout/logout.html")}function t(e){$(document).ready(e)}return{setView:e,setActionListener:t}},ProductsViewHelper=function(){function e(e){$("#component").html('<div class="col-12"><div class="col-3" id="filters"></div><div class="col-9" id="products"></div></div>'),$("#filters").load("views/products/filters.html"),t(e)}function t(e){$("#products").load("views/products/products.html",function(){$.each(e,function(e,t){var r=$("<div>").append($("#product__list__item").clone());$(r).find(".product__title").html(t.title),$(r).find(".product__subtitle").append(t.genre+" | "+t.pegi_age+" | "+o(t.platform)),$(r).find(".product__description").html(n(t.description)),$(r).find(".product__price").append("â‚¬ "+t.price),$(r).find("#buttons__info").attr("href","product/"+t.ean_number),$(r).find(".product__image img").attr("src",t.image),$("#product__list").append(r)}),$("#product__list__item").first().remove()})}function n(e){var t=50,n=e.split(" ");if(n.length>t){var o="";for(i=0;i<t;i++)o+=n[i]+" ";return o+"..."}return e}function o(e){return"XBOX"===e.toUppercase()?"<img src='https://maxcdn.icons8.com/Color/PNG/48/Logos/xbox-48.png' />":e}function r(e){$(document).ready(e)}function c(e){$("#component").on("change","input[type=checkbox]",function(e){$("#product_filter").submit()}),$("#component").on("submit","#product_filter",e)}return{setView:e,loadProducts:t,setActionListener:r,setFilterListener:c}},RegisterViewHelper=function(){function e(e){$("#component").load(e)}function t(e){$("#component").on("click","#registerbutton",e)}return{setView:e,setActionListener:t}};
//# sourceMappingURL=data:application/json;charset=utf8;base64,
